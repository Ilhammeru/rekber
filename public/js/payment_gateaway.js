/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (() => { // webpackBootstrap
/******/ 	var __webpack_modules__ = ({

/***/ "./resources/js/payment_gateaway.js":
/*!******************************************!*\
  !*** ./resources/js/payment_gateaway.js ***!
  \******************************************/
/***/ (() => {

eval("var dt;\nvar InsQuill;\nvar all_currency = ['IDR', 'USD', 'INR', 'JPY'];\nvar init = function init(type) {\n  if (type == 'automatic') return initAutomatic(type);\n  var columns = [{\n    data: 'id',\n    render: function render(data, type, row, meta) {\n      return meta.row + meta.settings._iDisplayStart + 1;\n    },\n    width: '5%',\n    className: 'text-center'\n  }, {\n    data: 'name',\n    name: 'name'\n  }, {\n    data: 'status',\n    name: 'status'\n  }, {\n    data: 'action',\n    name: 'action',\n    className: 'text-end'\n  }];\n  dt = $('#table-payment-gateaway').DataTable({\n    processing: true,\n    serverSide: true,\n    responsive: true,\n    scrollX: true,\n    ajax: app_url + '/payment-gateaway/ajax/' + type,\n    columns: columns,\n    ordering: false,\n    order: [[3, 'desc']]\n  });\n};\nvar initAutomatic = function initAutomatic(type) {\n  var columns = [{\n    data: 'id',\n    render: function render(data, type, row, meta) {\n      return meta.row + meta.settings._iDisplayStart + 1;\n    },\n    width: '5%',\n    className: 'text-center'\n  }, {\n    data: 'name',\n    name: 'name'\n  }, {\n    data: 'enable_currency',\n    name: 'enable_currency'\n  }, {\n    data: 'status',\n    name: 'status'\n  }, {\n    data: 'action',\n    name: 'action',\n    className: 'text-end'\n  }];\n  dt = $('#table-auto-payment-gateaway').DataTable({\n    processing: true,\n    serverSide: true,\n    responsive: true,\n    scrollX: true,\n    ajax: app_url + '/payment-gateaway/automatic/ajax',\n    columns: columns,\n    ordering: false,\n    order: [[0, 'desc']]\n  });\n};\nvar updateCurrency = function updateCurrency(e) {\n  $('#target-rate-currency').text(e.value);\n};\nvar initQuillInstruction = function initQuillInstruction() {\n  var dataVal = $('#instruction').attr('data-value');\n  var options = {\n    placeholder: 'Compose an epic...',\n    theme: 'snow',\n    height: '500px'\n  };\n  InsQuill = new Quill('#instruction', options);\n  if (dataVal) {\n    InsQuill.root.innerHTML = dataVal;\n  }\n};\nvar submitUserData = function submitUserData(id) {\n  var form = $('#form-user-data').serialize();\n  $.ajax({\n    type: 'POST',\n    url: app_url + '/payment-gateaway/user-data/' + id,\n    data: form,\n    beforeSend: function beforeSend() {\n      removeValidation('form-user-data');\n      toggleLoading(true, i18n.global.saving);\n    },\n    success: function success(res) {\n      closeGlobalModal();\n      handleSuccess(res.message);\n      toggleLoading(false);\n      initUserData(id);\n    },\n    error: function error(err) {\n      toggleLoading(false);\n      handleError(err, 'form-user-data');\n    }\n  });\n};\nvar initUserData = function initUserData(id) {\n  $.ajax({\n    type: 'GET',\n    url: app_url + '/payment-gateaway/user-data/' + id,\n    beforeSend: function beforeSend() {\n      addSpinnerText('target-user-data');\n    },\n    success: function success(res) {\n      $('#target-user-data').html(res.data);\n    },\n    error: function error(err) {}\n  });\n};\nvar deleteUserData = function deleteUserData(key) {\n  $.ajax({\n    type: 'GET',\n    url: app_url + '/payment-gateaway/user-data/delete/' + key,\n    beforeSend: function beforeSend() {\n      toggleLoading(true, i18n.global.processing);\n    },\n    success: function success(res) {\n      toggleLoading(false);\n      handleSuccess(res.message);\n      $('#target-user-data').html(res.data);\n    },\n    error: function error(err) {\n      toggleLoading(false);\n      handleError(err);\n    }\n  });\n};\nvar saveManualPayment = function saveManualPayment() {\n  var id = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : null;\n  var form = $(\"#form-manual-payment\").serializeArray();\n  form.push({\n    name: 'instruction',\n    value: InsQuill.getText()\n  });\n  form.push({\n    name: 'instruction_real',\n    value: InsQuill.root.innerHTML\n  });\n  if (id) {\n    form.push({\n      name: 'current_id',\n      value: id\n    });\n  }\n  $.ajax({\n    type: 'POST',\n    url: app_url + '/payment-gateaway/store/data',\n    data: form,\n    beforeSend: function beforeSend() {\n      removeValidation('form-manual-payment');\n      toggleLoading(true, i18n.global.saving);\n    },\n    success: function success(res) {\n      toggleLoading(false);\n      handleSuccess(res.message);\n      responseUrl(res.data.url, 1000);\n    },\n    error: function error(err) {\n      toggleLoading(false);\n      handleError(err);\n    }\n  });\n};\nvar confirmDelete = function confirmDelete(id) {\n  Confirm.show(i18n.global.delete_confirmation_title, i18n.global.delete_confirmation, i18n.yes, i18n.no, function () {\n    deleteItem(id);\n  });\n};\nvar deleteItem = function deleteItem(id) {\n  $.ajax({\n    type: \"DELETE\",\n    url: app_url + '/payment-gateaway/delete/' + id,\n    beforeSend: function beforeSend() {\n      toggleLoading(true, i18n.global.processing);\n    },\n    success: function success(res) {\n      toggleLoading(false);\n      handleSuccess(res.message);\n      dt.ajax.reload();\n    },\n    error: function error(err) {\n      toggleLoading(false);\n      handleError(err);\n    }\n  });\n};\nvar updateAvailableCurrency = function updateAvailableCurrency(id) {\n  // $.ajax({\n  //     type: 'GET',\n  //     url: app_url + '/payment-gateaway/automatic/update-currency/' + id,\n  //     beforeSend: function () {},\n  //     success: function (res) {\n  //         let data = res.data;\n  //         let opt = `<option value=\"\" selected disabled>${i18n.global.select_currency}</option>`;\n  //         for (let a = 0; a < data.length; a++) {\n  //             opt += `<option value=\"${data[a]}\">${data[a]}</option>`;\n  //         }\n  //         $('#select_currency').html(opt);\n  //     },\n  //     error: function (err) {}\n  // })\n  var all = $('.selected_currency');\n  for (var a = 0; a < all.length; a++) {\n    var val = all[a].value;\n    var index = all_currency.indexOf(val);\n    if (index > -1) {\n      all_currency.splice(index, 1);\n    }\n  }\n  var opt = \"<option value=\\\"\\\" selected disabled>\".concat(i18n.global.select_currency, \"</option>\");\n  for (var _a = 0; _a < all_currency.length; _a++) {\n    opt += \"<option value=\\\"\".concat(all_currency[_a], \"\\\">\").concat(all_currency[_a], \"</option>\");\n  }\n  $('#select_currency').html(opt);\n};\nvar initDetailCurrency = function initDetailCurrency(id) {\n  $.ajax({\n    type: 'GET',\n    url: app_url + '/payment-gateaway/automatic/init-detail-currency/' + id,\n    beforeSend: function beforeSend() {},\n    success: function success(res) {\n      $('#target-detail-currency').html(res.data.view);\n      console.log('oke', $('#details_0_name'));\n      updateAvailableCurrency();\n    },\n    error: function error(err) {\n      handleError(err);\n    }\n  });\n};\nvar saveAutomaticGateaway = function saveAutomaticGateaway(id) {\n  var form = $('#form-automatic-gateaway').serializeArray();\n  $.ajax({\n    type: \"POST\",\n    url: app_url + '/payment-gateaway/automatic/store/' + id,\n    data: form,\n    beforeSend: function beforeSend() {\n      toggleLoading(true, i18n.global.saving);\n      removeValidation('form-automatic-gateaway');\n    },\n    success: function success(res) {\n      toggleLoading(false);\n      console.log('res', res);\n      handleSuccess(res.message);\n      // responseUrl(app_url + '/payment-gateaway/automatic', 1000);\n    },\n\n    error: function error(err) {\n      toggleLoading(false);\n      handleError(err);\n    }\n  });\n};\nvar addNewCurrency = function addNewCurrency(id) {\n  var currency = $('#select_currency').val();\n  if (currency) {\n    $.ajax({\n      type: 'POST',\n      url: app_url + '/payment-gateaway/automatic/add-new-currency-form/' + id,\n      data: {\n        currency: currency\n      },\n      beforeSend: function beforeSend() {},\n      success: function success(res) {\n        $('#target-detail-currency').append(res.data.view);\n        updateAvailableCurrency();\n      },\n      error: function error(err) {\n        handleError(err);\n      }\n    });\n  }\n};\nvar deleteRowCurrency = function deleteRowCurrency(key) {\n  //validate row\n  var deletedCurrency = $(\"#row-currency-\".concat(key, \" .selected_currency\")).val();\n  all_currency.push(deletedCurrency);\n  var rows = $('.row-currency');\n  if (rows.length > 1) {\n    $('#row-currency-' + key).remove();\n  }\n\n  // update currency\n  updateAvailableCurrency();\n};\nvar generateTripayChannel = function generateTripayChannel(id) {\n  $.ajax({\n    type: 'GET',\n    url: app_url + '/payment-gateaway/automatic/channel-tripay/' + id,\n    beforeSend: function beforeSend() {\n      addSpinnerHuge('target-channel');\n    },\n    success: function success(res) {\n      console.log('res', res);\n      $('#target-channel').html(res.data.view);\n    },\n    error: function error(err) {\n      handleError(err);\n    }\n  });\n};\nvar initTripayChannel = function initTripayChannel(id) {\n  $.ajax({\n    type: 'GET',\n    url: app_url + '/payment-gateaway/automatic/local-channel-tripay/' + id,\n    beforeSend: function beforeSend() {\n      addSpinnerHuge('target-channel');\n    },\n    success: function success(res) {\n      console.log('res', res);\n      $('#target-channel').html(res.data.view);\n    },\n    error: function error(err) {\n      $('#target-channel').html('');\n      handleError(err);\n    }\n  });\n};\nwindow.dt = dt;\nwindow.all_currency = all_currency;\nwindow.InsQuill = InsQuill;\nwindow.init = init;\nwindow.updateCurrency = updateCurrency;\nwindow.initQuillInstruction = initQuillInstruction;\nwindow.submitUserData = submitUserData;\nwindow.initUserData = initUserData;\nwindow.deleteUserData = deleteUserData;\nwindow.saveManualPayment = saveManualPayment;\nwindow.confirmDelete = confirmDelete;\nwindow.deleteItem = deleteItem;\nwindow.initAutomatic = initAutomatic;\nwindow.updateAvailableCurrency = updateAvailableCurrency;\nwindow.initDetailCurrency = initDetailCurrency;\nwindow.saveAutomaticGateaway = saveAutomaticGateaway;\nwindow.addNewCurrency = addNewCurrency;\nwindow.deleteRowCurrency = deleteRowCurrency;\nwindow.generateTripayChannel = generateTripayChannel;\nwindow.initTripayChannel = initTripayChannel;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./resources/js/payment_gateaway.js\n");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval-source-map devtool is used.
/******/ 	var __webpack_exports__ = {};
/******/ 	__webpack_modules__["./resources/js/payment_gateaway.js"]();
/******/ 	
/******/ })()
;