/*
 * ATTENTION: The "eval" devtool has been used (maybe by default in mode: "development").
 * This devtool is not neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (() => { // webpackBootstrap
/******/ 	var __webpack_modules__ = ({

/***/ "./node_modules/alertifyjs/build/alertify.js":
/*!***************************************************!*\
  !*** ./node_modules/alertifyjs/build/alertify.js ***!
  \***************************************************/
/*! unknown exports (runtime-defined) */
/*! runtime requirements: module, top-level-this-exports, __webpack_exports__ */
/***/ (function(module, exports) {

eval("var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;/**\r\n * alertifyjs 1.13.1 http://alertifyjs.com\r\n * AlertifyJS is a javascript framework for developing pretty browser dialogs and notifications.\r\n * Copyright 2019 Mohammad Younes <Mohammad@alertifyjs.com> (http://alertifyjs.com) \r\n * Licensed under GPL 3 <https://opensource.org/licenses/gpl-3.0>*/\r\n( function ( window ) {\r\n    'use strict';\r\n    var NOT_DISABLED_NOT_RESET = ':not(:disabled):not(.ajs-reset)';\r\n    /**\r\n     * Keys enum\r\n     * @type {Object}\r\n     */\r\n    var keys = {\r\n        ENTER: 13,\r\n        ESC: 27,\r\n        F1: 112,\r\n        F12: 123,\r\n        LEFT: 37,\r\n        RIGHT: 39,\r\n        TAB: 9\r\n    };\r\n    /**\r\n     * Default options \r\n     * @type {Object}\r\n     */\r\n    var defaults = {\r\n        autoReset:true,\r\n        basic:false,\r\n        closable:true,\r\n        closableByDimmer:true,\r\n        invokeOnCloseOff:false,\r\n        frameless:false,\r\n        defaultFocusOff:false,\r\n        maintainFocus:true, //global default not per instance, applies to all dialogs\r\n        maximizable:true,\r\n        modal:true,\r\n        movable:true,\r\n        moveBounded:false,\r\n        overflow:true,\r\n        padding: true,\r\n        pinnable:true,\r\n        pinned:true,\r\n        preventBodyShift:false, //global default not per instance, applies to all dialogs\r\n        resizable:true,\r\n        startMaximized:false,\r\n        transition:'pulse',\r\n        transitionOff:false,\r\n        tabbable:['button', '[href]', 'input', 'select', 'textarea', '[tabindex]:not([tabindex^=\"-\"])'+NOT_DISABLED_NOT_RESET].join(NOT_DISABLED_NOT_RESET+','),//global\r\n        notifier:{\r\n            delay:5,\r\n            position:'bottom-right',\r\n            closeButton:false,\r\n            classes: {\r\n                base: 'alertify-notifier',\r\n                prefix:'ajs-',\r\n                message: 'ajs-message',\r\n                top: 'ajs-top',\r\n                right: 'ajs-right',\r\n                bottom: 'ajs-bottom',\r\n                left: 'ajs-left',\r\n                center: 'ajs-center',\r\n                visible: 'ajs-visible',\r\n                hidden: 'ajs-hidden',\r\n                close: 'ajs-close'\r\n            }\r\n        },\r\n        glossary:{\r\n            title:'AlertifyJS',\r\n            ok: 'OK',\r\n            cancel: 'Cancel',\r\n            acccpt: 'Accept',\r\n            deny: 'Deny',\r\n            confirm: 'Confirm',\r\n            decline: 'Decline',\r\n            close: 'Close',\r\n            maximize: 'Maximize',\r\n            restore: 'Restore',\r\n        },\r\n        theme:{\r\n            input:'ajs-input',\r\n            ok:'ajs-ok',\r\n            cancel:'ajs-cancel',\r\n        },\r\n        hooks:{\r\n            preinit:function(){},\r\n            postinit:function(){}\r\n        }\r\n    };\r\n    \r\n    //holds open dialogs instances\r\n    var openDialogs = [];\r\n\r\n    /**\r\n     * [Helper]  Adds the specified class(es) to the element.\r\n     *\r\n     * @element {node}      The element\r\n     * @className {string}  One or more space-separated classes to be added to the class attribute of the element.\r\n     * \r\n     * @return {undefined}\r\n     */\r\n    function addClass(element,classNames){\r\n        element.className += ' ' + classNames;\r\n    }\r\n    \r\n    /**\r\n     * [Helper]  Removes the specified class(es) from the element.\r\n     *\r\n     * @element {node}      The element\r\n     * @className {string}  One or more space-separated classes to be removed from the class attribute of the element.\r\n     * \r\n     * @return {undefined}\r\n     */\r\n    function removeClass(element, classNames) {\r\n        var original = element.className.split(' ');\r\n        var toBeRemoved = classNames.split(' ');\r\n        for (var x = 0; x < toBeRemoved.length; x += 1) {\r\n            var index = original.indexOf(toBeRemoved[x]);\r\n            if (index > -1){\r\n                original.splice(index,1);\r\n            }\r\n        }\r\n        element.className = original.join(' ');\r\n    }\r\n\r\n    /**\r\n     * [Helper]  Checks if the document is RTL\r\n     *\r\n     * @return {Boolean} True if the document is RTL, false otherwise.\r\n     */\r\n    function isRightToLeft(){\r\n        return window.getComputedStyle(document.body).direction === 'rtl';\r\n    }\r\n    /**\r\n     * [Helper]  Get the document current scrollTop\r\n     *\r\n     * @return {Number} current document scrollTop value\r\n     */\r\n    function getScrollTop(){\r\n        return ((document.documentElement && document.documentElement.scrollTop) || document.body.scrollTop);\r\n    }\r\n\r\n    /**\r\n     * [Helper]  Get the document current scrollLeft\r\n     *\r\n     * @return {Number} current document scrollLeft value\r\n     */\r\n    function getScrollLeft(){\r\n        return ((document.documentElement && document.documentElement.scrollLeft) || document.body.scrollLeft);\r\n    }\r\n\r\n    /**\r\n    * Helper: clear contents\r\n    *\r\n    */\r\n    function clearContents(element){\r\n        while (element.lastChild) {\r\n            element.removeChild(element.lastChild);\r\n        }\r\n    }\r\n    /**\r\n     * Extends a given prototype by merging properties from base into sub.\r\n     *\r\n     * @sub {Object} sub The prototype being overwritten.\r\n     * @base {Object} base The prototype being written.\r\n     *\r\n     * @return {Object} The extended prototype.\r\n     */\r\n    function copy(src) {\r\n        if(null === src){\r\n            return src;\r\n        }\r\n        var cpy;\r\n        if(Array.isArray(src)){\r\n            cpy = [];\r\n            for(var x=0;x<src.length;x+=1){\r\n                cpy.push(copy(src[x]));\r\n            }\r\n            return cpy;\r\n        }\r\n      \r\n        if(src instanceof Date){\r\n            return new Date(src.getTime());\r\n        }\r\n      \r\n        if(src instanceof RegExp){\r\n            cpy = new RegExp(src.source);\r\n            cpy.global = src.global;\r\n            cpy.ignoreCase = src.ignoreCase;\r\n            cpy.multiline = src.multiline;\r\n            cpy.lastIndex = src.lastIndex;\r\n            return cpy;\r\n        }\r\n        \r\n        if(typeof src === 'object'){\r\n            cpy = {};\r\n            // copy dialog pototype over definition.\r\n            for (var prop in src) {\r\n                if (src.hasOwnProperty(prop)) {\r\n                    cpy[prop] = copy(src[prop]);\r\n                }\r\n            }\r\n            return cpy;\r\n        }\r\n        return src;\r\n    }\r\n    /**\r\n      * Helper: destruct the dialog\r\n      *\r\n      */\r\n    function destruct(instance, initialize){\r\n        if(instance.elements){\r\n            //delete the dom and it's references.\r\n            var root = instance.elements.root;\r\n            root.parentNode.removeChild(root);\r\n            delete instance.elements;\r\n            //copy back initial settings.\r\n            instance.settings = copy(instance.__settings);\r\n            //re-reference init function.\r\n            instance.__init = initialize;\r\n            //delete __internal variable to allow re-initialization.\r\n            delete instance.__internal;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Test to check if passive event listeners are supported.\r\n     */\r\n    var IsPassiveSupported = false;\r\n    try {\r\n        var options = Object.defineProperty({}, 'passive', {\r\n            get: function () {\r\n                IsPassiveSupported = true;\r\n            }\r\n        });\r\n        window.addEventListener('test', options, options);\r\n        window.removeEventListener('test', options, options);\r\n    } catch (e) {}\r\n\r\n     /**\r\n     * Removes an event listener\r\n     *\r\n     * @param {HTMLElement} el The EventTarget to register the listenr on.\r\n     * @param {string} event The event type to listen for.\r\n     * @param {Function} handler The function to handle the event.\r\n     * @param {boolean} useCapture Specifices if the event to be dispatched to the registered listener before being dispatched to any EventTarget beneath it in the DOM tree.\r\n     * @param {boolean} passive A Boolean which, if true, indicates that the function specified by listener will never call preventDefault().\r\n     */\r\n    var on = function (el, event, fn, useCapture, passive) {\r\n        el.addEventListener(event, fn, IsPassiveSupported ? { capture: useCapture, passive: passive } : useCapture === true);\r\n    };\r\n\r\n    /**\r\n     * Removes an event listener\r\n     *\r\n     * @param {HTMLElement} el The EventTarget to unregister the listenr from.\r\n     * @param {string} event The event type to remove.\r\n     * @param {Function} fn The event handler to remove.\r\n     * @param {boolean} useCapture Specifices if the event to be dispatched to the registered listener before being dispatched to any EventTarget beneath it in the DOM tree.\r\n     * @param {boolean} passive A Boolean which, if true, indicates that the function specified by listener will never call preventDefault().\r\n     */\r\n    var off = function (el, event, fn, useCapture, passive) {\r\n        el.removeEventListener(event, fn, IsPassiveSupported ? { capture: useCapture, passive: passive } : useCapture === true);\r\n    };\r\n\r\n    /**\r\n     * Prevent default event from firing\r\n     *\r\n     * @param  {Event} event Event object\r\n     * @return {undefined}\r\n\r\n    function prevent ( event ) {\r\n        if ( event ) {\r\n            if ( event.preventDefault ) {\r\n                event.preventDefault();\r\n            } else {\r\n                event.returnValue = false;\r\n            }\r\n        }\r\n    }\r\n    */\r\n    var transition = (function () {\r\n        var t, type;\r\n        var supported = false;\r\n        var transitions = {\r\n            'animation'        : 'animationend',\r\n            'OAnimation'       : 'oAnimationEnd oanimationend',\r\n            'msAnimation'      : 'MSAnimationEnd',\r\n            'MozAnimation'     : 'animationend',\r\n            'WebkitAnimation'  : 'webkitAnimationEnd'\r\n        };\r\n\r\n        for (t in transitions) {\r\n            if (document.documentElement.style[t] !== undefined) {\r\n                type = transitions[t];\r\n                supported = true;\r\n                break;\r\n            }\r\n        }\r\n\r\n        return {\r\n            type: type,\r\n            supported: supported\r\n        };\r\n    }());\r\n\r\n    /**\r\n    * Creates event handler delegate that sends the instance as last argument.\r\n    * \r\n    * @return {Function}    a function wrapper which sends the instance as last argument.\r\n    */\r\n    function delegate(context, method) {\r\n        return function () {\r\n            if (arguments.length > 0) {\r\n                var args = [];\r\n                for (var x = 0; x < arguments.length; x += 1) {\r\n                    args.push(arguments[x]);\r\n                }\r\n                args.push(context);\r\n                return method.apply(context, args);\r\n            }\r\n            return method.apply(context, [null, context]);\r\n        };\r\n    }\r\n    /**\r\n    * Helper for creating a dialog close event.\r\n    * \r\n    * @return {object}\r\n    */\r\n    function createCloseEvent(index, button) {\r\n        return {\r\n            index: index,\r\n            button: button,\r\n            cancel: false\r\n        };\r\n    }\r\n    /**\r\n    * Helper for dispatching events.\r\n    *\r\n    * @param  {string} evenType The type of the event to disptach.\r\n    * @param  {object} instance The dialog instance disptaching the event.\r\n    *\r\n    * @return   {any}   The result of the invoked function.\r\n    */\r\n    function dispatchEvent(eventType, instance) {\r\n        if ( typeof instance.get(eventType) === 'function' ) {\r\n            return instance.get(eventType).call(instance);\r\n        }\r\n    }\r\n\r\n\r\n    /**\r\n     * Super class for all dialogs\r\n     *\r\n     * @return {Object}\t\tbase dialog prototype\r\n     */\r\n    var dialog = (function () {\r\n        var //holds the list of used keys.\r\n            usedKeys = [],\r\n            //dummy variable, used to trigger dom reflow.\r\n            reflow = null,\r\n            //holds body tab index in case it has any.\r\n            tabindex = false,\r\n            //condition for detecting safari\r\n            isSafari = window.navigator.userAgent.indexOf('Safari') > -1 && window.navigator.userAgent.indexOf('Chrome') < 0,\r\n            //dialog building blocks\r\n            templates = {\r\n                dimmer:'<div class=\"ajs-dimmer\"></div>',\r\n                /*tab index required to fire click event before body focus*/\r\n                modal: '<div class=\"ajs-modal\" tabindex=\"0\"></div>',\r\n                dialog: '<div class=\"ajs-dialog\" tabindex=\"0\"></div>',\r\n                reset: '<button class=\"ajs-reset\"></button>',\r\n                commands: '<div class=\"ajs-commands\"><button class=\"ajs-pin\"></button><button class=\"ajs-maximize\"></button><button class=\"ajs-close\"></button></div>',\r\n                header: '<div class=\"ajs-header\"></div>',\r\n                body: '<div class=\"ajs-body\"></div>',\r\n                content: '<div class=\"ajs-content\"></div>',\r\n                footer: '<div class=\"ajs-footer\"></div>',\r\n                buttons: { primary: '<div class=\"ajs-primary ajs-buttons\"></div>', auxiliary: '<div class=\"ajs-auxiliary ajs-buttons\"></div>' },\r\n                button: '<button class=\"ajs-button\"></button>',\r\n                resizeHandle: '<div class=\"ajs-handle\"></div>',\r\n            },\r\n            //common class names\r\n            classes = {\r\n                animationIn: 'ajs-in',\r\n                animationOut: 'ajs-out',\r\n                base: 'alertify',\r\n                basic:'ajs-basic',\r\n                capture: 'ajs-capture',\r\n                closable:'ajs-closable',\r\n                fixed: 'ajs-fixed',\r\n                frameless:'ajs-frameless',\r\n                hidden: 'ajs-hidden',\r\n                maximize: 'ajs-maximize',\r\n                maximized: 'ajs-maximized',\r\n                maximizable:'ajs-maximizable',\r\n                modeless: 'ajs-modeless',\r\n                movable: 'ajs-movable',\r\n                noSelection: 'ajs-no-selection',\r\n                noOverflow: 'ajs-no-overflow',\r\n                noPadding:'ajs-no-padding',\r\n                pin:'ajs-pin',\r\n                pinnable:'ajs-pinnable',\r\n                prefix: 'ajs-',\r\n                resizable: 'ajs-resizable',\r\n                restore: 'ajs-restore',\r\n                shake:'ajs-shake',\r\n                unpinned:'ajs-unpinned',\r\n                noTransition:'ajs-no-transition'\r\n            };\r\n\r\n        /**\r\n         * Helper: initializes the dialog instance\r\n         * \r\n         * @return\t{Number}\tThe total count of currently open modals.\r\n         */\r\n        function initialize(instance){\r\n            \r\n            if(!instance.__internal){\r\n                //invoke preinit global hook\r\n                alertify.defaults.hooks.preinit(instance);\r\n                //no need to expose init after this.\r\n                delete instance.__init;\r\n              \r\n                //keep a copy of initial dialog settings\r\n                if(!instance.__settings){\r\n                    instance.__settings = copy(instance.settings);\r\n                }\r\n                \r\n                //get dialog buttons/focus setup\r\n                var setup;\r\n                if(typeof instance.setup === 'function'){\r\n                    setup = instance.setup();\r\n                    setup.options = setup.options  || {};\r\n                    setup.focus = setup.focus  || {};\r\n                }else{\r\n                    setup = {\r\n                        buttons:[],\r\n                        focus:{\r\n                            element:null,\r\n                            select:false\r\n                        },\r\n                        options:{\r\n                        }\r\n                    };\r\n                }\r\n                \r\n                //initialize hooks object.\r\n                if(typeof instance.hooks !== 'object'){\r\n                    instance.hooks = {};\r\n                }\r\n\r\n                //copy buttons defintion\r\n                var buttonsDefinition = [];\r\n                if(Array.isArray(setup.buttons)){\r\n                    for(var b=0;b<setup.buttons.length;b+=1){\r\n                        var ref  = setup.buttons[b],\r\n                            cpy = {};\r\n                        for (var i in ref) {\r\n                            if (ref.hasOwnProperty(i)) {\r\n                                cpy[i] = ref[i];\r\n                            }\r\n                        }\r\n                        buttonsDefinition.push(cpy);\r\n                    }\r\n                }\r\n\r\n                var internal = instance.__internal = {\r\n                    /**\r\n                     * Flag holding the open state of the dialog\r\n                     * \r\n                     * @type {Boolean}\r\n                     */\r\n                    isOpen:false,\r\n                    /**\r\n                     * Active element is the element that will receive focus after\r\n                     * closing the dialog. It defaults as the body tag, but gets updated\r\n                     * to the last focused element before the dialog was opened.\r\n                     *\r\n                     * @type {Node}\r\n                     */\r\n                    activeElement:document.body,\r\n                    timerIn:undefined,\r\n                    timerOut:undefined,\r\n                    buttons: buttonsDefinition,\r\n                    focus: setup.focus,\r\n                    options: {\r\n                        title: undefined,\r\n                        modal: undefined,\r\n                        basic:undefined,\r\n                        frameless:undefined,\r\n                        defaultFocusOff:undefined,\r\n                        pinned: undefined,\r\n                        movable: undefined,\r\n                        moveBounded:undefined,\r\n                        resizable: undefined,\r\n                        autoReset: undefined,\r\n                        closable: undefined,\r\n                        closableByDimmer: undefined,\r\n                        invokeOnCloseOff:undefined,\r\n                        maximizable: undefined,\r\n                        startMaximized: undefined,\r\n                        pinnable: undefined,\r\n                        transition: undefined,\r\n                        transitionOff: undefined,\r\n                        padding:undefined,\r\n                        overflow:undefined,\r\n                        onshow:undefined,\r\n                        onclosing:undefined,\r\n                        onclose:undefined,\r\n                        onfocus:undefined,\r\n                        onmove:undefined,\r\n                        onmoved:undefined,\r\n                        onresize:undefined,\r\n                        onresized:undefined,\r\n                        onmaximize:undefined,\r\n                        onmaximized:undefined,\r\n                        onrestore:undefined,\r\n                        onrestored:undefined\r\n                    },\r\n                    resetHandler:undefined,\r\n                    beginMoveHandler:undefined,\r\n                    beginResizeHandler:undefined,\r\n                    bringToFrontHandler:undefined,\r\n                    modalClickHandler:undefined,\r\n                    buttonsClickHandler:undefined,\r\n                    commandsClickHandler:undefined,\r\n                    transitionInHandler:undefined,\r\n                    transitionOutHandler:undefined,\r\n                    destroy:undefined\r\n                };\r\n\r\n                var elements = {};\r\n                //root node\r\n                elements.root = document.createElement('div');\r\n                //prevent FOUC in case of async styles loading.\r\n                elements.root.style.display = 'none';\r\n                elements.root.className = classes.base + ' ' + classes.hidden + ' ';\r\n\r\n                elements.root.innerHTML = templates.dimmer + templates.modal;\r\n                \r\n                //dimmer\r\n                elements.dimmer = elements.root.firstChild;\r\n\r\n                //dialog\r\n                elements.modal = elements.root.lastChild;\r\n                elements.modal.innerHTML = templates.dialog;\r\n                elements.dialog = elements.modal.firstChild;\r\n                elements.dialog.innerHTML = templates.reset + templates.commands + templates.header + templates.body + templates.footer + templates.resizeHandle + templates.reset;\r\n\r\n                //reset links\r\n                elements.reset = [];\r\n                elements.reset.push(elements.dialog.firstChild);\r\n                elements.reset.push(elements.dialog.lastChild);\r\n                \r\n                //commands\r\n                elements.commands = {};\r\n                elements.commands.container = elements.reset[0].nextSibling;\r\n                elements.commands.pin = elements.commands.container.firstChild;\r\n                elements.commands.maximize = elements.commands.pin.nextSibling;\r\n                elements.commands.close = elements.commands.maximize.nextSibling;\r\n                \r\n                //header\r\n                elements.header = elements.commands.container.nextSibling;\r\n\r\n                //body\r\n                elements.body = elements.header.nextSibling;\r\n                elements.body.innerHTML = templates.content;\r\n                elements.content = elements.body.firstChild;\r\n\r\n                //footer\r\n                elements.footer = elements.body.nextSibling;\r\n                elements.footer.innerHTML = templates.buttons.auxiliary + templates.buttons.primary;\r\n                \r\n                //resize handle\r\n                elements.resizeHandle = elements.footer.nextSibling;\r\n\r\n                //buttons\r\n                elements.buttons = {};\r\n                elements.buttons.auxiliary = elements.footer.firstChild;\r\n                elements.buttons.primary = elements.buttons.auxiliary.nextSibling;\r\n                elements.buttons.primary.innerHTML = templates.button;\r\n                elements.buttonTemplate = elements.buttons.primary.firstChild;\r\n                //remove button template\r\n                elements.buttons.primary.removeChild(elements.buttonTemplate);\r\n                               \r\n                for(var x=0; x < instance.__internal.buttons.length; x+=1) {\r\n                    var button = instance.__internal.buttons[x];\r\n                    \r\n                    // add to the list of used keys.\r\n                    if(usedKeys.indexOf(button.key) < 0){\r\n                        usedKeys.push(button.key);\r\n                    }\r\n\r\n                    button.element = elements.buttonTemplate.cloneNode();\r\n                    button.element.innerHTML = button.text;\r\n                    if(typeof button.className === 'string' &&  button.className !== ''){\r\n                        addClass(button.element, button.className);\r\n                    }\r\n                    for(var key in button.attrs){\r\n                        if(key !== 'className' && button.attrs.hasOwnProperty(key)){\r\n                            button.element.setAttribute(key, button.attrs[key]);\r\n                        }\r\n                    }\r\n                    if(button.scope === 'auxiliary'){\r\n                        elements.buttons.auxiliary.appendChild(button.element);\r\n                    }else{\r\n                        elements.buttons.primary.appendChild(button.element);\r\n                    }\r\n                }\r\n                //make elements pubic\r\n                instance.elements = elements;\r\n                \r\n                //save event handlers delegates\r\n                internal.resetHandler = delegate(instance, onReset);\r\n                internal.beginMoveHandler = delegate(instance, beginMove);\r\n                internal.beginResizeHandler = delegate(instance, beginResize);\r\n                internal.bringToFrontHandler = delegate(instance, bringToFront);\r\n                internal.modalClickHandler = delegate(instance, modalClickHandler);\r\n                internal.buttonsClickHandler = delegate(instance, buttonsClickHandler);\r\n                internal.commandsClickHandler = delegate(instance, commandsClickHandler);\r\n                internal.transitionInHandler = delegate(instance, handleTransitionInEvent);\r\n                internal.transitionOutHandler = delegate(instance, handleTransitionOutEvent);\r\n\r\n                //settings\r\n                for(var opKey in internal.options){\r\n                    if(setup.options[opKey] !== undefined){\r\n                        // if found in user options\r\n                        instance.set(opKey, setup.options[opKey]);\r\n                    }else if(alertify.defaults.hasOwnProperty(opKey)) {\r\n                        // else if found in defaults options\r\n                        instance.set(opKey, alertify.defaults[opKey]);\r\n                    }else if(opKey === 'title' ) {\r\n                        // else if title key, use alertify.defaults.glossary\r\n                        instance.set(opKey, alertify.defaults.glossary[opKey]);\r\n                    }\r\n                }\r\n\r\n                // allow dom customization\r\n                if(typeof instance.build === 'function'){\r\n                    instance.build();\r\n                }\r\n\r\n                //invoke postinit global hook\r\n                alertify.defaults.hooks.postinit(instance);\r\n            }\r\n\r\n            //add to the end of the DOM tree.\r\n            document.body.appendChild(instance.elements.root);\r\n        }\r\n\r\n        /**\r\n         * Helper: maintains scroll position\r\n         *\r\n         */\r\n        var scrollX, scrollY;\r\n        function saveScrollPosition(){\r\n            scrollX = getScrollLeft();\r\n            scrollY = getScrollTop();\r\n        }\r\n        function restoreScrollPosition(){\r\n            window.scrollTo(scrollX, scrollY);\r\n        }\r\n\r\n        /**\r\n         * Helper: adds/removes no-overflow class from body\r\n         *\r\n         */\r\n        function ensureNoOverflow(){\r\n            var requiresNoOverflow = 0;\r\n            for(var x=0;x<openDialogs.length;x+=1){\r\n                var instance = openDialogs[x];\r\n                if(instance.isModal() || instance.isMaximized()){\r\n                    requiresNoOverflow+=1;\r\n                }\r\n            }\r\n            if(requiresNoOverflow === 0 && document.body.className.indexOf(classes.noOverflow) >= 0){\r\n                //last open modal or last maximized one\r\n                removeClass(document.body, classes.noOverflow);\r\n                preventBodyShift(false);\r\n            }else if(requiresNoOverflow > 0 && document.body.className.indexOf(classes.noOverflow) < 0){\r\n                //first open modal or first maximized one\r\n                preventBodyShift(true);\r\n                addClass(document.body, classes.noOverflow);\r\n            }\r\n        }\r\n        var top = '', topScroll = 0;\r\n        /**\r\n         * Helper: prevents body shift.\r\n         *\r\n         */\r\n        function preventBodyShift(add){\r\n            if(alertify.defaults.preventBodyShift){\r\n                if(add && document.documentElement.scrollHeight > document.documentElement.clientHeight ){//&& openDialogs[openDialogs.length-1].elements.dialog.clientHeight <= document.documentElement.clientHeight){\r\n                    topScroll = scrollY;\r\n                    top = window.getComputedStyle(document.body).top;\r\n                    addClass(document.body, classes.fixed);\r\n                    document.body.style.top = -scrollY + 'px';\r\n                } else if(!add) {\r\n                    scrollY = topScroll;\r\n                    document.body.style.top = top;\r\n                    removeClass(document.body, classes.fixed);\r\n                    restoreScrollPosition();\r\n                }\r\n            }\r\n        }\r\n\t\t\r\n        /**\r\n         * Sets the name of the transition used to show/hide the dialog\r\n         * \r\n         * @param {Object} instance The dilog instance.\r\n         *\r\n         */\r\n        function updateTransition(instance, value, oldValue){\r\n            if(typeof oldValue === 'string'){\r\n                removeClass(instance.elements.root,classes.prefix +  oldValue);\r\n            }\r\n            addClass(instance.elements.root, classes.prefix + value);\r\n            reflow = instance.elements.root.offsetWidth;\r\n        }\r\n\r\n        /**\r\n         * Toggles the dialog no transition \r\n         *\r\n         * @param {Object} instance The dilog instance.\r\n         *\r\n         * @return {undefined}\r\n         */\r\n        function updateTransitionOff(instance){\r\n            if (instance.get('transitionOff')) {\r\n                // add class\r\n                addClass(instance.elements.root, classes.noTransition);\r\n            } else {\r\n                // remove class\r\n                removeClass(instance.elements.root, classes.noTransition);\r\n            }\r\n        }\r\n\r\n        /**\r\n         * Toggles the dialog display mode\r\n         *\r\n         * @param {Object} instance The dilog instance.\r\n         *\r\n         * @return {undefined}\r\n         */\r\n        function updateDisplayMode(instance){\r\n            if(instance.get('modal')){\r\n\r\n                //make modal\r\n                removeClass(instance.elements.root, classes.modeless);\r\n\r\n                //only if open\r\n                if(instance.isOpen()){\r\n                    unbindModelessEvents(instance);\r\n\r\n                    //in case a pinned modless dialog was made modal while open.\r\n                    updateAbsPositionFix(instance);\r\n\r\n                    ensureNoOverflow();\r\n                }\r\n            }else{\r\n                //make modelss\r\n                addClass(instance.elements.root, classes.modeless);\r\n\r\n                //only if open\r\n                if(instance.isOpen()){\r\n                    bindModelessEvents(instance);\r\n\r\n                    //in case pin/unpin was called while a modal is open\r\n                    updateAbsPositionFix(instance);\r\n\r\n                    ensureNoOverflow();\r\n                }\r\n            }\r\n        }\r\n\r\n        /**\r\n         * Toggles the dialog basic view mode \r\n         *\r\n         * @param {Object} instance The dilog instance.\r\n         *\r\n         * @return {undefined}\r\n         */\r\n        function updateBasicMode(instance){\r\n            if (instance.get('basic')) {\r\n                // add class\r\n                addClass(instance.elements.root, classes.basic);\r\n            } else {\r\n                // remove class\r\n                removeClass(instance.elements.root, classes.basic);\r\n            }\r\n        }\r\n\r\n        /**\r\n         * Toggles the dialog frameless view mode \r\n         *\r\n         * @param {Object} instance The dilog instance.\r\n         *\r\n         * @return {undefined}\r\n         */\r\n        function updateFramelessMode(instance){\r\n            if (instance.get('frameless')) {\r\n                // add class\r\n                addClass(instance.elements.root, classes.frameless);\r\n            } else {\r\n                // remove class\r\n                removeClass(instance.elements.root, classes.frameless);\r\n            }\r\n        }\r\n\t\t\r\n        /**\r\n         * Helper: Brings the modeless dialog to front, attached to modeless dialogs.\r\n         *\r\n         * @param {Event} event Focus event\r\n         * @param {Object} instance The dilog instance.\r\n         *\r\n         * @return {undefined}\r\n         */\r\n        function bringToFront(event, instance){\r\n            \r\n            // Do not bring to front if preceeded by an open modal\r\n            var index = openDialogs.indexOf(instance);\r\n            for(var x=index+1;x<openDialogs.length;x+=1){\r\n                if(openDialogs[x].isModal()){\r\n                    return;\r\n                }\r\n            }\r\n\t\t\t\r\n            // Bring to front by making it the last child.\r\n            if(document.body.lastChild !== instance.elements.root){\r\n                document.body.appendChild(instance.elements.root);\r\n                //also make sure its at the end of the list\r\n                openDialogs.splice(openDialogs.indexOf(instance),1);\r\n                openDialogs.push(instance);\r\n                setFocus(instance);\r\n            }\r\n\t\t\t\r\n            return false;\r\n        }\r\n\t\t\r\n        /**\r\n         * Helper: reflects dialogs options updates\r\n         *\r\n         * @param {Object} instance The dilog instance.\r\n         * @param {String} option The updated option name.\r\n         *\r\n         * @return\t{undefined}\t\r\n         */\r\n        function optionUpdated(instance, option, oldValue, newValue){\r\n            switch(option){\r\n            case 'title':\r\n                instance.setHeader(newValue);\r\n                break;\r\n            case 'modal':\r\n                updateDisplayMode(instance);\r\n                break;\r\n            case 'basic':\r\n                updateBasicMode(instance);\r\n                break;\r\n            case 'frameless':\r\n                updateFramelessMode(instance);\r\n                break;\r\n            case 'pinned':\r\n                updatePinned(instance);\r\n                break;\r\n            case 'closable':\r\n                updateClosable(instance);\r\n                break;\r\n            case 'maximizable':\r\n                updateMaximizable(instance);\r\n                break;\r\n            case 'pinnable':\r\n                updatePinnable(instance);\r\n                break;\r\n            case 'movable':\r\n                updateMovable(instance);\r\n                break;\r\n            case 'resizable':\r\n                updateResizable(instance);\r\n                break;\r\n            case 'padding':\r\n                if(newValue){\r\n                    removeClass(instance.elements.root, classes.noPadding);\r\n                }else if(instance.elements.root.className.indexOf(classes.noPadding) < 0){\r\n                    addClass(instance.elements.root, classes.noPadding);\r\n                }\r\n                break;\r\n            case 'overflow':\r\n                if(newValue){\r\n                    removeClass(instance.elements.root, classes.noOverflow);\r\n                }else if(instance.elements.root.className.indexOf(classes.noOverflow) < 0){\r\n                    addClass(instance.elements.root, classes.noOverflow);\r\n                }\r\n                break;\r\n            case 'transition':\r\n                updateTransition(instance,newValue, oldValue);\r\n                break;\r\n            case 'transitionOff':\r\n                updateTransitionOff(instance);\r\n                break;\r\n            }\r\n\r\n            // internal on option updated event\r\n            if(typeof instance.hooks.onupdate === 'function'){\r\n                instance.hooks.onupdate.call(instance, option, oldValue, newValue);\r\n            }\r\n        }\r\n\t\t\r\n        /**\r\n         * Helper: reflects dialogs options updates\r\n         *\r\n         * @param {Object} instance The dilog instance.\r\n         * @param {Object} obj The object to set/get a value on/from.\r\n         * @param {Function} callback The callback function to call if the key was found.\r\n         * @param {String|Object} key A string specifying a propery name or a collection of key value pairs.\r\n         * @param {Object} value Optional, the value associated with the key (in case it was a string).\r\n         * @param {String} option The updated option name.\r\n         *\r\n         * @return\t{Object} result object \r\n         *\tThe result objects has an 'op' property, indicating of this is a SET or GET operation.\r\n         *\t\tGET: \r\n         *\t\t- found: a flag indicating if the key was found or not.\r\n         *\t\t- value: the property value.\r\n         *\t\tSET:\r\n         *\t\t- items: a list of key value pairs of the properties being set.\r\n         *\t\t\t\teach contains:\r\n         *\t\t\t\t\t- found: a flag indicating if the key was found or not.\r\n         *\t\t\t\t\t- key: the property key.\r\n         *\t\t\t\t\t- value: the property value.\r\n         */\r\n        function update(instance, obj, callback, key, value){\r\n            var result = {op:undefined, items: [] };\r\n            if(typeof value === 'undefined' && typeof key === 'string') {\r\n                //get\r\n                result.op = 'get';\r\n                if(obj.hasOwnProperty(key)){\r\n                    result.found = true;\r\n                    result.value = obj[key];\r\n                }else{\r\n                    result.found = false;\r\n                    result.value = undefined;\r\n                }\r\n            }\r\n            else\r\n            {\r\n                var old;\r\n                //set\r\n                result.op = 'set';\r\n                if(typeof key === 'object'){\r\n                    //set multiple\r\n                    var args = key;\r\n                    for (var prop in args) {\r\n                        if (obj.hasOwnProperty(prop)) {\r\n                            if(obj[prop] !== args[prop]){\r\n                                old = obj[prop];\r\n                                obj[prop] = args[prop];\r\n                                callback.call(instance,prop, old, args[prop]);\r\n                            }\r\n                            result.items.push({ 'key': prop, 'value': args[prop], 'found':true});\r\n                        }else{\r\n                            result.items.push({ 'key': prop, 'value': args[prop], 'found':false});\r\n                        }\r\n                    }\r\n                } else if (typeof key === 'string'){\r\n                    //set single\r\n                    if (obj.hasOwnProperty(key)) {\r\n                        if(obj[key] !== value){\r\n                            old  = obj[key];\r\n                            obj[key] = value;\r\n                            callback.call(instance,key, old, value);\r\n                        }\r\n                        result.items.push({'key': key, 'value': value , 'found':true});\r\n\r\n                    }else{\r\n                        result.items.push({'key': key, 'value': value , 'found':false});\r\n                    }\r\n                } else {\r\n                    //invalid params\r\n                    throw new Error('args must be a string or object');\r\n                }\r\n            }\r\n            return result;\r\n        }\r\n\r\n\r\n        /**\r\n         * Triggers a close event.\r\n         *\r\n         * @param {Object} instance\tThe dilog instance.\r\n         * \r\n         * @return {undefined}\r\n         */\r\n        function triggerClose(instance) {\r\n            var found;\r\n            triggerCallback(instance, function (button) {\r\n                return found = instance.get('invokeOnCloseOff') !== true && (button.invokeOnClose === true);\r\n            });\r\n            //none of the buttons registered as onclose callback\r\n            //close the dialog\r\n            if (!found && instance.isOpen()) {\r\n                instance.close();\r\n            }\r\n        }\r\n\r\n        /**\r\n         * Dialogs commands event handler, attached to the dialog commands element.\r\n         *\r\n         * @param {Event} event\tDOM event object.\r\n         * @param {Object} instance\tThe dilog instance.\r\n         * \r\n         * @return {undefined}\r\n         */\r\n        function commandsClickHandler(event, instance) {\r\n            var target = event.srcElement || event.target;\r\n            switch (target) {\r\n            case instance.elements.commands.pin:\r\n                if (!instance.isPinned()) {\r\n                    pin(instance);\r\n                } else {\r\n                    unpin(instance);\r\n                }\r\n                break;\r\n            case instance.elements.commands.maximize:\r\n                if (!instance.isMaximized()) {\r\n                    maximize(instance);\r\n                } else {\r\n                    restore(instance);\r\n                }\r\n                break;\r\n            case instance.elements.commands.close:\r\n                triggerClose(instance);\r\n                break;\r\n            }\r\n            return false;\r\n        }\r\n\r\n        /**\r\n         * Helper: pins the modeless dialog.\r\n         *\r\n         * @param {Object} instance\tThe dialog instance.\r\n         * \r\n         * @return {undefined}\r\n         */\r\n        function pin(instance) {\r\n            //pin the dialog\r\n            instance.set('pinned', true);\r\n        }\r\n\r\n        /**\r\n         * Helper: unpins the modeless dialog.\r\n         *\r\n         * @param {Object} instance\tThe dilog instance.\r\n         * \r\n         * @return {undefined}\r\n         */\r\n        function unpin(instance) {\r\n            //unpin the dialog \r\n            instance.set('pinned', false);\r\n        }\r\n\r\n\r\n        /**\r\n         * Helper: enlarges the dialog to fill the entire screen.\r\n         *\r\n         * @param {Object} instance\tThe dilog instance.\r\n         * \r\n         * @return {undefined}\r\n         */\r\n        function maximize(instance) {\r\n            // allow custom `onmaximize` method\r\n            dispatchEvent('onmaximize', instance);\r\n            //maximize the dialog \r\n            addClass(instance.elements.root, classes.maximized);\r\n            if (instance.isOpen()) {\r\n                ensureNoOverflow();\r\n            }\r\n            // allow custom `onmaximized` method\r\n            dispatchEvent('onmaximized', instance);\r\n        }\r\n\r\n        /**\r\n         * Helper: returns the dialog to its former size.\r\n         *\r\n         * @param {Object} instance\tThe dilog instance.\r\n         * \r\n         * @return {undefined}\r\n         */\r\n        function restore(instance) {\r\n            // allow custom `onrestore` method\r\n            dispatchEvent('onrestore', instance);\r\n            //maximize the dialog \r\n            removeClass(instance.elements.root, classes.maximized);\r\n            if (instance.isOpen()) {\r\n                ensureNoOverflow();\r\n            }\r\n            // allow custom `onrestored` method\r\n            dispatchEvent('onrestored', instance);\r\n        }\r\n\r\n        /**\r\n         * Show or hide the maximize box.\r\n         *\r\n         * @param {Object} instance The dilog instance.\r\n         * @param {Boolean} on True to add the behavior, removes it otherwise.\r\n         *\r\n         * @return {undefined}\r\n         */\r\n        function updatePinnable(instance) {\r\n            if (instance.get('pinnable')) {\r\n                // add class\r\n                addClass(instance.elements.root, classes.pinnable);\r\n            } else {\r\n                // remove class\r\n                removeClass(instance.elements.root, classes.pinnable);\r\n            }\r\n        }\r\n\r\n        /**\r\n         * Helper: Fixes the absolutly positioned modal div position.\r\n         *\r\n         * @param {Object} instance The dialog instance.\r\n         *\r\n         * @return {undefined}\r\n         */\r\n        function addAbsPositionFix(instance) {\r\n            var scrollLeft = getScrollLeft();\r\n            instance.elements.modal.style.marginTop = getScrollTop() + 'px';\r\n            instance.elements.modal.style.marginLeft = scrollLeft + 'px';\r\n            instance.elements.modal.style.marginRight = (-scrollLeft) + 'px';\r\n        }\r\n\r\n        /**\r\n         * Helper: Removes the absolutly positioned modal div position fix.\r\n         *\r\n         * @param {Object} instance The dialog instance.\r\n         *\r\n         * @return {undefined}\r\n         */\r\n        function removeAbsPositionFix(instance) {\r\n            var marginTop = parseInt(instance.elements.modal.style.marginTop, 10);\r\n            var marginLeft = parseInt(instance.elements.modal.style.marginLeft, 10);\r\n            instance.elements.modal.style.marginTop = '';\r\n            instance.elements.modal.style.marginLeft = '';\r\n            instance.elements.modal.style.marginRight = '';\r\n\r\n            if (instance.isOpen()) {\r\n                var top = 0,\r\n                    left = 0\r\n                ;\r\n                if (instance.elements.dialog.style.top !== '') {\r\n                    top = parseInt(instance.elements.dialog.style.top, 10);\r\n                }\r\n                instance.elements.dialog.style.top = (top + (marginTop - getScrollTop())) + 'px';\r\n\r\n                if (instance.elements.dialog.style.left !== '') {\r\n                    left = parseInt(instance.elements.dialog.style.left, 10);\r\n                }\r\n                instance.elements.dialog.style.left = (left + (marginLeft - getScrollLeft())) + 'px';\r\n            }\r\n        }\r\n        /**\r\n         * Helper: Adds/Removes the absolutly positioned modal div position fix based on its pinned setting.\r\n         *\r\n         * @param {Object} instance The dialog instance.\r\n         *\r\n         * @return {undefined}\r\n         */\r\n        function updateAbsPositionFix(instance) {\r\n            // if modeless and unpinned add fix\r\n            if (!instance.get('modal') && !instance.get('pinned')) {\r\n                addAbsPositionFix(instance);\r\n            } else {\r\n                removeAbsPositionFix(instance);\r\n            }\r\n        }\r\n        /**\r\n         * Toggles the dialog position lock | modeless only.\r\n         *\r\n         * @param {Object} instance The dilog instance.\r\n         * @param {Boolean} on True to make it modal, false otherwise.\r\n         *\r\n         * @return {undefined}\r\n         */\r\n        function updatePinned(instance) {\r\n            if (instance.get('pinned')) {\r\n                removeClass(instance.elements.root, classes.unpinned);\r\n                if (instance.isOpen()) {\r\n                    removeAbsPositionFix(instance);\r\n                }\r\n            } else {\r\n                addClass(instance.elements.root, classes.unpinned);\r\n                if (instance.isOpen() && !instance.isModal()) {\r\n                    addAbsPositionFix(instance);\r\n                }\r\n            }\r\n        }\r\n\r\n        /**\r\n         * Show or hide the maximize box.\r\n         *\r\n         * @param {Object} instance The dilog instance.\r\n         * @param {Boolean} on True to add the behavior, removes it otherwise.\r\n         *\r\n         * @return {undefined}\r\n         */\r\n        function updateMaximizable(instance) {\r\n            if (instance.get('maximizable')) {\r\n                // add class\r\n                addClass(instance.elements.root, classes.maximizable);\r\n            } else {\r\n                // remove class\r\n                removeClass(instance.elements.root, classes.maximizable);\r\n            }\r\n        }\r\n\r\n        /**\r\n         * Show or hide the close box.\r\n         *\r\n         * @param {Object} instance The dilog instance.\r\n         * @param {Boolean} on True to add the behavior, removes it otherwise.\r\n         *\r\n         * @return {undefined}\r\n         */\r\n        function updateClosable(instance) {\r\n            if (instance.get('closable')) {\r\n                // add class\r\n                addClass(instance.elements.root, classes.closable);\r\n                bindClosableEvents(instance);\r\n            } else {\r\n                // remove class\r\n                removeClass(instance.elements.root, classes.closable);\r\n                unbindClosableEvents(instance);\r\n            }\r\n        }\r\n\r\n        \r\n        var cancelClick = false,// flag to cancel click event if already handled by end resize event (the mousedown, mousemove, mouseup sequence fires a click event.).\r\n            modalClickHandlerTS=0 // stores last click timestamp to prevent executing the handler twice on double click.\r\n            ;\r\n\r\n        /**\r\n         * Helper: closes the modal dialog when clicking the modal\r\n         *\r\n         * @param {Event} event\tDOM event object.\r\n         * @param {Object} instance The dilog instance.\r\n         *\r\n         * @return {undefined}\r\n         */\r\n        function modalClickHandler(event, instance) {\r\n            if(event.timeStamp - modalClickHandlerTS > 200 && (modalClickHandlerTS = event.timeStamp) && !cancelClick){\r\n                var target = event.srcElement || event.target;\r\n                if (instance.get('closableByDimmer') === true && target === instance.elements.modal) {\r\n                    triggerClose(instance);\r\n                }\r\n            }\r\n            cancelClick = false;\r\n        }\r\n\r\n        // stores last call timestamp to prevent triggering the callback twice.\r\n        var callbackTS = 0;\r\n        // flag to cancel keyup event if already handled by click event (pressing Enter on a focusted button).\r\n        var cancelKeyup = false;\r\n        /** \r\n         * Helper: triggers a button callback\r\n         *\r\n         * @param {Object}\t\tThe dilog instance.\r\n         * @param {Function}\tCallback to check which button triggered the event.\r\n         *\r\n         * @return {undefined}\r\n         */\r\n        function triggerCallback(instance, check) {\r\n            if(Date.now() - callbackTS > 200 && (callbackTS = Date.now())){\r\n                for (var idx = 0; idx < instance.__internal.buttons.length; idx += 1) {\r\n                    var button = instance.__internal.buttons[idx];\r\n                    if (!button.element.disabled && check(button)) {\r\n                        var closeEvent = createCloseEvent(idx, button);\r\n                        if (typeof instance.callback === 'function') {\r\n                            instance.callback.apply(instance, [closeEvent]);\r\n                        }\r\n                        //close the dialog only if not canceled.\r\n                        if (closeEvent.cancel === false) {\r\n                            instance.close();\r\n                        }\r\n                        break;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        /**\r\n         * Clicks event handler, attached to the dialog footer.\r\n         *\r\n         * @param {Event}\t\tDOM event object.\r\n         * @param {Object}\t\tThe dilog instance.\r\n         * \r\n         * @return {undefined}\r\n         */\r\n        function buttonsClickHandler(event, instance) {\r\n            var target = event.srcElement || event.target;\r\n            triggerCallback(instance, function (button) {\r\n                // if this button caused the click, cancel keyup event\r\n                return button.element === target && (cancelKeyup = true);\r\n            });\r\n        }\r\n\r\n        /**\r\n         * Keyup event handler, attached to the document.body\r\n         *\r\n         * @param {Event}\t\tDOM event object.\r\n         * @param {Object}\t\tThe dilog instance.\r\n         * \r\n         * @return {undefined}\r\n         */\r\n        function keyupHandler(event) {\r\n            //hitting enter while button has focus will trigger keyup too.\r\n            //ignore if handled by clickHandler\r\n            if (cancelKeyup) {\r\n                cancelKeyup = false;\r\n                return;\r\n            }\r\n            var instance = openDialogs[openDialogs.length - 1];\r\n            var keyCode = event.keyCode;\r\n            if (instance.__internal.buttons.length === 0 && keyCode === keys.ESC && instance.get('closable') === true) {\r\n                triggerClose(instance);\r\n                return false;\r\n            }else if (usedKeys.indexOf(keyCode) > -1) {\r\n                triggerCallback(instance, function (button) {\r\n                    return button.key === keyCode;\r\n                });\r\n                return false;\r\n            }\r\n        }\r\n        /**\r\n        * Keydown event handler, attached to the document.body\r\n        *\r\n        * @param {Event}\t\tDOM event object.\r\n        * @param {Object}\t\tThe dilog instance.\r\n        * \r\n        * @return {undefined}\r\n        */\r\n        function keydownHandler(event) {\r\n            var instance = openDialogs[openDialogs.length - 1];\r\n            var keyCode = event.keyCode;\r\n            if (keyCode === keys.LEFT || keyCode === keys.RIGHT) {\r\n                var buttons = instance.__internal.buttons;\r\n                for (var x = 0; x < buttons.length; x += 1) {\r\n                    if (document.activeElement === buttons[x].element) {\r\n                        switch (keyCode) {\r\n                        case keys.LEFT:\r\n                            buttons[(x || buttons.length) - 1].element.focus();\r\n                            return;\r\n                        case keys.RIGHT:\r\n                            buttons[(x + 1) % buttons.length].element.focus();\r\n                            return;\r\n                        }\r\n                    }\r\n                }\r\n            }else if (keyCode < keys.F12 + 1 && keyCode > keys.F1 - 1 && usedKeys.indexOf(keyCode) > -1) {\r\n                event.preventDefault();\r\n                event.stopPropagation();\r\n                triggerCallback(instance, function (button) {\r\n                    return button.key === keyCode;\r\n                });\r\n                return false;\r\n            }\r\n        }\r\n\r\n\r\n        /**\r\n         * Sets focus to proper dialog element\r\n         *\r\n         * @param {Object} instance The dilog instance.\r\n         * @param {Node} [resetTarget=undefined] DOM element to reset focus to.\r\n         *\r\n         * @return {undefined}\r\n         */\r\n        function setFocus(instance, resetTarget) {\r\n            // reset target has already been determined.\r\n            if (resetTarget) {\r\n                resetTarget.focus();\r\n            } else {\r\n                // current instance focus settings\r\n                var focus = instance.__internal.focus;\r\n                // the focus element.\r\n                var element = focus.element;\r\n\r\n                switch (typeof focus.element) {\r\n                // a number means a button index\r\n                case 'number':\r\n                    if (instance.__internal.buttons.length > focus.element) {\r\n                        //in basic view, skip focusing the buttons.\r\n                        if (instance.get('basic') === true) {\r\n                            element = instance.elements.reset[0];\r\n                        } else {\r\n                            element = instance.__internal.buttons[focus.element].element;\r\n                        }\r\n                    }\r\n                    break;\r\n                // a string means querySelector to select from dialog body contents.\r\n                case 'string':\r\n                    element = instance.elements.body.querySelector(focus.element);\r\n                    break;\r\n                // a function should return the focus element.\r\n                case 'function':\r\n                    element = focus.element.call(instance);\r\n                    break;\r\n                }\r\n\r\n                // if no focus element, default to first reset element.\r\n                if (instance.get('defaultFocusOff') === true || ((typeof element === 'undefined' || element === null) && instance.__internal.buttons.length === 0)) {\r\n                    element = instance.elements.reset[0];\r\n                }\r\n                // focus\r\n                if (element && element.focus) {\r\n                    element.focus();\r\n                    // if selectable\r\n                    if (focus.select && element.select) {\r\n                        element.select();\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        /**\r\n         * Focus event handler, attached to document.body and dialogs own reset links.\r\n         * handles the focus for modal dialogs only.\r\n         *\r\n         * @param {Event} event DOM focus event object.\r\n         * @param {Object} instance The dilog instance.\r\n         *\r\n         * @return {undefined}\r\n         */\r\n        function onReset(event, instance) {\r\n\r\n            // should work on last modal if triggered from document.body \r\n            if (!instance) {\r\n                for (var x = openDialogs.length - 1; x > -1; x -= 1) {\r\n                    if (openDialogs[x].isModal()) {\r\n                        instance = openDialogs[x];\r\n                        break;\r\n                    }\r\n                }\r\n            }\r\n\r\n            if(instance) {\r\n                // if modal\r\n                if (instance.isModal()) {\r\n                    // determine reset target to enable forward/backward tab cycle.\r\n                    var firstReset = instance.elements.reset[0],\r\n                        lastReset = instance.elements.reset[1],\r\n                        lastFocusedElement = event.relatedTarget,\r\n                        within = instance.elements.root.contains(lastFocusedElement),\r\n                        target = event.srcElement || event.target,\r\n                        resetTarget;\r\n\r\n                    //if the previous focused element element was outside the modal do nthing\r\n                    if(  /*first show */\r\n                        (target === firstReset && !within) ||\r\n                         /*focus cycle */\r\n                        (target === lastReset && lastFocusedElement === firstReset)){\r\n                        return;\r\n                    }else if(target === lastReset || target === document.body){\r\n                        resetTarget = firstReset;\r\n                    }else if(target === firstReset && lastFocusedElement === lastReset){\r\n                        resetTarget = findTabbable(instance);\r\n                    }else if(target === firstReset && within){\r\n                        resetTarget = findTabbable(instance, true);\r\n                    }\r\n                    // focus\r\n                    setFocus(instance, resetTarget);\r\n                }\r\n            }\r\n        }\r\n        function findTabbable(instance, last){\r\n            var tabbables = [].slice.call(instance.elements.dialog.querySelectorAll(defaults.tabbable));\r\n            if(last){\r\n                tabbables.reverse();\r\n            }\r\n            for(var x=0;x<tabbables.length;x+=1){\r\n                var tabbable = tabbables[x];\r\n                //check if visible\r\n                if(!!(tabbable.offsetParent || tabbable.offsetWidth || tabbable.offsetHeight || tabbable.getClientRects().length)){\r\n                    return tabbable;\r\n                }\r\n            }\r\n        }\r\n        function recycleTab(event) {\r\n            var instance = openDialogs[openDialogs.length - 1];\r\n            if (instance && event.shiftKey && event.keyCode === keys.TAB) {\r\n                instance.elements.reset[1].focus();\r\n            }\r\n        }\r\n        /**\r\n         * Transition in transitionend event handler. \r\n         *\r\n         * @param {Event}\t\tTransitionEnd event object.\r\n         * @param {Object}\t\tThe dilog instance.\r\n         *\r\n         * @return {undefined}\r\n         */\r\n        function handleTransitionInEvent(event, instance) {\r\n            // clear the timer\r\n            clearTimeout(instance.__internal.timerIn);\r\n\r\n            // once transition is complete, set focus\r\n            setFocus(instance);\r\n\r\n            // allow handling key up after transition ended.\r\n            cancelKeyup = false;\r\n\r\n            // allow custom `onfocus` method\r\n            dispatchEvent('onfocus', instance);\r\n\r\n            // unbind the event\r\n            off(instance.elements.dialog, transition.type, instance.__internal.transitionInHandler);\r\n\r\n            removeClass(instance.elements.root, classes.animationIn);\r\n        }\r\n\r\n        /**\r\n         * Transition out transitionend event handler. \r\n         *\r\n         * @param {Event}\t\tTransitionEnd event object.\r\n         * @param {Object}\t\tThe dilog instance.\r\n         *\r\n         * @return {undefined}\r\n         */\r\n        function handleTransitionOutEvent(event, instance) {\r\n            // clear the timer\r\n            clearTimeout(instance.__internal.timerOut);\r\n            // unbind the event\r\n            off(instance.elements.dialog, transition.type, instance.__internal.transitionOutHandler);\r\n\r\n            // reset move updates\r\n            resetMove(instance);\r\n            // reset resize updates\r\n            resetResize(instance);\r\n\r\n            // restore if maximized\r\n            if (instance.isMaximized() && !instance.get('startMaximized')) {\r\n                restore(instance);\r\n            }\r\n\r\n            //destory the instance\r\n            if (typeof instance.__internal.destroy === 'function') {\r\n                instance.__internal.destroy.apply(instance);\r\n            }\r\n        }\r\n        /* Controls moving a dialog around */\r\n        //holde the current moving instance\r\n        var movable = null,\r\n            //holds the current X offset when move starts\r\n            offsetX = 0,\r\n            //holds the current Y offset when move starts\r\n            offsetY = 0,\r\n            xProp = 'pageX',\r\n            yProp = 'pageY',\r\n            bounds = null,\r\n            refreshTop = false,\r\n            moveDelegate = null\r\n        ;\r\n\r\n        /**\r\n         * Helper: sets the element top/left coordinates\r\n         *\r\n         * @param {Event} event\tDOM event object.\r\n         * @param {Node} element The element being moved.\r\n         * \r\n         * @return {undefined}\r\n         */\r\n        function moveElement(event, element) {\r\n            var left = (event[xProp] - offsetX),\r\n                top  = (event[yProp] - offsetY);\r\n\r\n            if(refreshTop){\r\n                top -= document.body.scrollTop;\r\n            }\r\n           \r\n            element.style.left = left + 'px';\r\n            element.style.top = top + 'px';\r\n           \r\n        }\r\n        /**\r\n         * Helper: sets the element top/left coordinates within screen bounds\r\n         *\r\n         * @param {Event} event\tDOM event object.\r\n         * @param {Node} element The element being moved.\r\n         * \r\n         * @return {undefined}\r\n         */\r\n        function moveElementBounded(event, element) {\r\n            var left = (event[xProp] - offsetX),\r\n                top  = (event[yProp] - offsetY);\r\n\r\n            if(refreshTop){\r\n                top -= document.body.scrollTop;\r\n            }\r\n            \r\n            element.style.left = Math.min(bounds.maxLeft, Math.max(bounds.minLeft, left)) + 'px';\r\n            if(refreshTop){\r\n                element.style.top = Math.min(bounds.maxTop, Math.max(bounds.minTop, top)) + 'px';\r\n            }else{\r\n                element.style.top = Math.max(bounds.minTop, top) + 'px';\r\n            }\r\n        }\r\n            \r\n\r\n        /**\r\n         * Triggers the start of a move event, attached to the header element mouse down event.\r\n         * Adds no-selection class to the body, disabling selection while moving.\r\n         *\r\n         * @param {Event} event\tDOM event object.\r\n         * @param {Object} instance The dilog instance.\r\n         * \r\n         * @return {Boolean} false\r\n         */\r\n        function beginMove(event, instance) {\r\n            if (resizable === null && !instance.isMaximized() && instance.get('movable')) {\r\n                var eventSrc, left=0, top=0;\r\n                if (event.type === 'touchstart') {\r\n                    event.preventDefault();\r\n                    eventSrc = event.targetTouches[0];\r\n                    xProp = 'clientX';\r\n                    yProp = 'clientY';\r\n                } else if (event.button === 0) {\r\n                    eventSrc = event;\r\n                }\r\n\r\n                if (eventSrc) {\r\n\r\n                    var element = instance.elements.dialog;\r\n                    addClass(element, classes.capture);\r\n\r\n                    if (element.style.left) {\r\n                        left = parseInt(element.style.left, 10);\r\n                    }\r\n\r\n                    if (element.style.top) {\r\n                        top = parseInt(element.style.top, 10);\r\n                    }\r\n                    \r\n                    offsetX = eventSrc[xProp] - left;\r\n                    offsetY = eventSrc[yProp] - top;\r\n\r\n                    if(instance.isModal()){\r\n                        offsetY += instance.elements.modal.scrollTop;\r\n                    }else if(instance.isPinned()){\r\n                        offsetY -= document.body.scrollTop;\r\n                    }\r\n                    \r\n                    if(instance.get('moveBounded')){\r\n                        var current = element,\r\n                            offsetLeft = -left,\r\n                            offsetTop = -top;\r\n                        \r\n                        //calc offset\r\n                        do {\r\n                            offsetLeft += current.offsetLeft;\r\n                            offsetTop += current.offsetTop;\r\n                        } while (current = current.offsetParent);\r\n                        \r\n                        bounds = {\r\n                            maxLeft : offsetLeft,\r\n                            minLeft : -offsetLeft,\r\n                            maxTop  : document.documentElement.clientHeight - element.clientHeight - offsetTop,\r\n                            minTop  : -offsetTop\r\n                        };\r\n                        moveDelegate = moveElementBounded;\r\n                    }else{\r\n                        bounds = null;\r\n                        moveDelegate = moveElement;\r\n                    }\r\n                    \r\n                    // allow custom `onmove` method\r\n                    dispatchEvent('onmove', instance);\r\n\r\n                    refreshTop = !instance.isModal() && instance.isPinned();\r\n                    movable = instance;\r\n                    moveDelegate(eventSrc, element);\r\n                    addClass(document.body, classes.noSelection);\r\n                    return false;\r\n                }\r\n            }\r\n        }\r\n\r\n        /**\r\n         * The actual move handler,  attached to document.body mousemove event.\r\n         *\r\n         * @param {Event} event\tDOM event object.\r\n         * \r\n         * @return {undefined}\r\n         */\r\n        function move(event) {\r\n            if (movable) {\r\n                var eventSrc;\r\n                if (event.type === 'touchmove') {\r\n                    event.preventDefault();\r\n                    eventSrc = event.targetTouches[0];\r\n                } else if (event.button === 0) {\r\n                    eventSrc = event;\r\n                }\r\n                if (eventSrc) {\r\n                    moveDelegate(eventSrc, movable.elements.dialog);\r\n                }\r\n            }\r\n        }\r\n\r\n        /**\r\n         * Triggers the end of a move event,  attached to document.body mouseup event.\r\n         * Removes no-selection class from document.body, allowing selection.\r\n         *\r\n         * @return {undefined}\r\n         */\r\n        function endMove() {\r\n            if (movable) {\r\n                var instance = movable;\r\n                movable = bounds = null;\r\n                removeClass(document.body, classes.noSelection);\r\n                removeClass(instance.elements.dialog, classes.capture);\r\n                // allow custom `onmoved` method\r\n                dispatchEvent('onmoved', instance);\r\n            }\r\n        }\r\n\r\n        /**\r\n         * Resets any changes made by moving the element to its original state,\r\n         *\r\n         * @param {Object} instance The dilog instance.\r\n         *\r\n         * @return {undefined}\r\n         */\r\n        function resetMove(instance) {\r\n            movable = null;\r\n            var element = instance.elements.dialog;\r\n            element.style.left = element.style.top = '';\r\n        }\r\n\r\n        /**\r\n         * Updates the dialog move behavior.\r\n         *\r\n         * @param {Object} instance The dilog instance.\r\n         * @param {Boolean} on True to add the behavior, removes it otherwise.\r\n         *\r\n         * @return {undefined}\r\n         */\r\n        function updateMovable(instance) {\r\n            if (instance.get('movable')) {\r\n                // add class\r\n                addClass(instance.elements.root, classes.movable);\r\n                if (instance.isOpen()) {\r\n                    bindMovableEvents(instance);\r\n                }\r\n            } else {\r\n\r\n                //reset\r\n                resetMove(instance);\r\n                // remove class\r\n                removeClass(instance.elements.root, classes.movable);\r\n                if (instance.isOpen()) {\r\n                    unbindMovableEvents(instance);\r\n                }\r\n            }\r\n        }\r\n\r\n        /* Controls moving a dialog around */\r\n        //holde the current instance being resized\t\t\r\n        var resizable = null,\r\n            //holds the staring left offset when resize starts.\r\n            startingLeft = Number.Nan,\r\n            //holds the staring width when resize starts.\r\n            startingWidth = 0,\r\n            //holds the initial width when resized for the first time.\r\n            minWidth = 0,\r\n            //holds the offset of the resize handle.\r\n            handleOffset = 0\r\n        ;\r\n\r\n        /**\r\n         * Helper: sets the element width/height and updates left coordinate if neccessary.\r\n         *\r\n         * @param {Event} event\tDOM mousemove event object.\r\n         * @param {Node} element The element being moved.\r\n         * @param {Boolean} pinned A flag indicating if the element being resized is pinned to the screen.\r\n         * \r\n         * @return {undefined}\r\n         */\r\n        function resizeElement(event, element, pageRelative) {\r\n\r\n            //calculate offsets from 0,0\r\n            var current = element;\r\n            var offsetLeft = 0;\r\n            var offsetTop = 0;\r\n            do {\r\n                offsetLeft += current.offsetLeft;\r\n                offsetTop += current.offsetTop;\r\n            } while (current = current.offsetParent);\r\n\r\n            // determine X,Y coordinates.\r\n            var X, Y;\r\n            if (pageRelative === true) {\r\n                X = event.pageX;\r\n                Y = event.pageY;\r\n            } else {\r\n                X = event.clientX;\r\n                Y = event.clientY;\r\n            }\r\n            // rtl handling\r\n            var isRTL = isRightToLeft();\r\n            if (isRTL) {\r\n                // reverse X \r\n                X = document.body.offsetWidth - X;\r\n                // if has a starting left, calculate offsetRight\r\n                if (!isNaN(startingLeft)) {\r\n                    offsetLeft = document.body.offsetWidth - offsetLeft - element.offsetWidth;\r\n                }\r\n            }\r\n\r\n            // set width/height\r\n            element.style.height = (Y - offsetTop + handleOffset) + 'px';\r\n            element.style.width = (X - offsetLeft + handleOffset) + 'px';\r\n\r\n            // if the element being resized has a starting left, maintain it.\r\n            // the dialog is centered, divide by half the offset to maintain the margins.\r\n            if (!isNaN(startingLeft)) {\r\n                var diff = Math.abs(element.offsetWidth - startingWidth) * 0.5;\r\n                if (isRTL) {\r\n                    //negate the diff, why?\r\n                    //when growing it should decrease left\r\n                    //when shrinking it should increase left\r\n                    diff *= -1;\r\n                }\r\n                if (element.offsetWidth > startingWidth) {\r\n                    //growing\r\n                    element.style.left = (startingLeft + diff) + 'px';\r\n                } else if (element.offsetWidth >= minWidth) {\r\n                    //shrinking\r\n                    element.style.left = (startingLeft - diff) + 'px';\r\n                }\r\n            }\r\n        }\r\n\r\n        /**\r\n         * Triggers the start of a resize event, attached to the resize handle element mouse down event.\r\n         * Adds no-selection class to the body, disabling selection while moving.\r\n         *\r\n         * @param {Event} event\tDOM event object.\r\n         * @param {Object} instance The dilog instance.\r\n         * \r\n         * @return {Boolean} false\r\n         */\r\n        function beginResize(event, instance) {\r\n            if (!instance.isMaximized()) {\r\n                var eventSrc;\r\n                if (event.type === 'touchstart') {\r\n                    event.preventDefault();\r\n                    eventSrc = event.targetTouches[0];\r\n                } else if (event.button === 0) {\r\n                    eventSrc = event;\r\n                }\r\n                if (eventSrc) {\r\n                    // allow custom `onresize` method\r\n                    dispatchEvent('onresize', instance);\r\n                    \r\n                    resizable = instance;\r\n                    handleOffset = instance.elements.resizeHandle.offsetHeight / 2;\r\n                    var element = instance.elements.dialog;\r\n                    addClass(element, classes.capture);\r\n                    startingLeft = parseInt(element.style.left, 10);\r\n                    element.style.height = element.offsetHeight + 'px';\r\n                    element.style.minHeight = instance.elements.header.offsetHeight + instance.elements.footer.offsetHeight + 'px';\r\n                    element.style.width = (startingWidth = element.offsetWidth) + 'px';\r\n\r\n                    if (element.style.maxWidth !== 'none') {\r\n                        element.style.minWidth = (minWidth = element.offsetWidth) + 'px';\r\n                    }\r\n                    element.style.maxWidth = 'none';\r\n                    addClass(document.body, classes.noSelection);\r\n                    return false;\r\n                }\r\n            }\r\n        }\r\n\r\n        /**\r\n         * The actual resize handler,  attached to document.body mousemove event.\r\n         *\r\n         * @param {Event} event\tDOM event object.\r\n         * \r\n         * @return {undefined}\r\n         */\r\n        function resize(event) {\r\n            if (resizable) {\r\n                var eventSrc;\r\n                if (event.type === 'touchmove') {\r\n                    event.preventDefault();\r\n                    eventSrc = event.targetTouches[0];\r\n                } else if (event.button === 0) {\r\n                    eventSrc = event;\r\n                }\r\n                if (eventSrc) {\r\n                    resizeElement(eventSrc, resizable.elements.dialog, !resizable.get('modal') && !resizable.get('pinned'));\r\n                }\r\n            }\r\n        }\r\n\r\n        /**\r\n         * Triggers the end of a resize event,  attached to document.body mouseup event.\r\n         * Removes no-selection class from document.body, allowing selection.\r\n         *\r\n         * @return {undefined}\r\n         */\r\n        function endResize() {\r\n            if (resizable) {\r\n                var instance = resizable;\r\n                resizable = null;\r\n                removeClass(document.body, classes.noSelection);\r\n                removeClass(instance.elements.dialog, classes.capture);\r\n                cancelClick = true;\r\n                // allow custom `onresized` method\r\n                dispatchEvent('onresized', instance);\r\n            }\r\n        }\r\n\r\n        /**\r\n         * Resets any changes made by resizing the element to its original state.\r\n         *\r\n         * @param {Object} instance The dilog instance.\r\n         *\r\n         * @return {undefined}\r\n         */\r\n        function resetResize(instance) {\r\n            resizable = null;\r\n            var element = instance.elements.dialog;\r\n            if (element.style.maxWidth === 'none') {\r\n                //clear inline styles.\r\n                element.style.maxWidth = element.style.minWidth = element.style.width = element.style.height = element.style.minHeight = element.style.left = '';\r\n                //reset variables.\r\n                startingLeft = Number.Nan;\r\n                startingWidth = minWidth = handleOffset = 0;\r\n            }\r\n        }\r\n\r\n\r\n        /**\r\n         * Updates the dialog move behavior.\r\n         *\r\n         * @param {Object} instance The dilog instance.\r\n         * @param {Boolean} on True to add the behavior, removes it otherwise.\r\n         *\r\n         * @return {undefined}\r\n         */\r\n        function updateResizable(instance) {\r\n            if (instance.get('resizable')) {\r\n                // add class\r\n                addClass(instance.elements.root, classes.resizable);\r\n                if (instance.isOpen()) {\r\n                    bindResizableEvents(instance);\r\n                }\r\n            } else {\r\n                //reset\r\n                resetResize(instance);\r\n                // remove class\r\n                removeClass(instance.elements.root, classes.resizable);\r\n                if (instance.isOpen()) {\r\n                    unbindResizableEvents(instance);\r\n                }\r\n            }\r\n        }\r\n\r\n        /**\r\n         * Reset move/resize on window resize.\r\n         *\r\n         * @param {Event} event\twindow resize event object.\r\n         *\r\n         * @return {undefined}\r\n         */\r\n        function windowResize(/*event*/) {\r\n            for (var x = 0; x < openDialogs.length; x += 1) {\r\n                var instance = openDialogs[x];\r\n                if (instance.get('autoReset')) {\r\n                    resetMove(instance);\r\n                    resetResize(instance);\r\n                }\r\n            }\r\n        }\r\n        /**\r\n         * Bind dialogs events\r\n         *\r\n         * @param {Object} instance The dilog instance.\r\n         *\r\n         * @return {undefined}\r\n         */\r\n        function bindEvents(instance) {\r\n            // if first dialog, hook global handlers\r\n            if (openDialogs.length === 1) {\r\n                //global\r\n                on(window, 'resize', windowResize);\r\n                on(document.body, 'keyup', keyupHandler);\r\n                on(document.body, 'keydown', keydownHandler);\r\n                on(document.body, 'focus', onReset);\r\n\r\n                //move\r\n                on(document.documentElement, 'mousemove', move);\r\n                on(document.documentElement, 'touchmove', move, false, false);\r\n                on(document.documentElement, 'mouseup', endMove);\r\n                on(document.documentElement, 'touchend', endMove);\r\n                //resize\r\n                on(document.documentElement, 'mousemove', resize);\r\n                on(document.documentElement, 'touchmove', resize, false, false);\r\n                on(document.documentElement, 'mouseup', endResize);\r\n                on(document.documentElement, 'touchend', endResize);\r\n            }\r\n\r\n            // common events\r\n            on(instance.elements.commands.container, 'click', instance.__internal.commandsClickHandler);\r\n            on(instance.elements.footer, 'click', instance.__internal.buttonsClickHandler);\r\n            on(instance.elements.reset[0], 'focusin', instance.__internal.resetHandler);\r\n            on(instance.elements.reset[0], 'keydown', recycleTab);\r\n            on(instance.elements.reset[1], 'focusin', instance.__internal.resetHandler);\r\n\r\n            //prevent handling key up when dialog is being opened by a key stroke.\r\n            cancelKeyup = true;\r\n            // hook in transition handler\r\n            on(instance.elements.dialog, transition.type, instance.__internal.transitionInHandler);\r\n\r\n            // modelss only events\r\n            if (!instance.get('modal')) {\r\n                bindModelessEvents(instance);\r\n            }\r\n\r\n            // resizable\r\n            if (instance.get('resizable')) {\r\n                bindResizableEvents(instance);\r\n            }\r\n\r\n            // movable\r\n            if (instance.get('movable')) {\r\n                bindMovableEvents(instance);\r\n            }\r\n        }\r\n\r\n        /**\r\n         * Unbind dialogs events\r\n         *\r\n         * @param {Object} instance The dilog instance.\r\n         *\r\n         * @return {undefined}\r\n         */\r\n        function unbindEvents(instance) {\r\n            // if last dialog, remove global handlers\r\n            if (openDialogs.length === 1) {\r\n                //global\r\n                off(window, 'resize', windowResize);\r\n                off(document.body, 'keyup', keyupHandler);\r\n                off(document.body, 'keydown', keydownHandler);\r\n                off(document.body, 'focus', onReset);\r\n                //move\r\n                off(document.documentElement, 'mousemove', move);\r\n                off(document.documentElement, 'mouseup', endMove);\r\n                //resize\r\n                off(document.documentElement, 'mousemove', resize);\r\n                off(document.documentElement, 'mouseup', endResize);\r\n            }\r\n\r\n            // common events\r\n            off(instance.elements.commands.container, 'click', instance.__internal.commandsClickHandler);\r\n            off(instance.elements.footer, 'click', instance.__internal.buttonsClickHandler);\r\n            off(instance.elements.reset[0], 'focusin', instance.__internal.resetHandler);\r\n            off(instance.elements.reset[0], 'keydown', recycleTab);\r\n            off(instance.elements.reset[1], 'focusin', instance.__internal.resetHandler);\r\n\r\n            // hook out transition handler\r\n            on(instance.elements.dialog, transition.type, instance.__internal.transitionOutHandler);\r\n\r\n            // modelss only events\r\n            if (!instance.get('modal')) {\r\n                unbindModelessEvents(instance);\r\n            }\r\n\r\n            // movable\r\n            if (instance.get('movable')) {\r\n                unbindMovableEvents(instance);\r\n            }\r\n\r\n            // resizable\r\n            if (instance.get('resizable')) {\r\n                unbindResizableEvents(instance);\r\n            }\r\n\r\n        }\r\n\r\n        /**\r\n         * Bind modeless specific events\r\n         *\r\n         * @param {Object} instance The dilog instance.\r\n         *\r\n         * @return {undefined}\r\n         */\r\n        function bindModelessEvents(instance) {\r\n            on(instance.elements.dialog, 'focus', instance.__internal.bringToFrontHandler, true);\r\n        }\r\n\r\n        /**\r\n         * Unbind modeless specific events\r\n         *\r\n         * @param {Object} instance The dilog instance.\r\n         *\r\n         * @return {undefined}\r\n         */\r\n        function unbindModelessEvents(instance) {\r\n            off(instance.elements.dialog, 'focus', instance.__internal.bringToFrontHandler, true);\r\n        }\r\n\r\n\r\n\r\n        /**\r\n         * Bind movable specific events\r\n         *\r\n         * @param {Object} instance The dilog instance.\r\n         *\r\n         * @return {undefined}\r\n         */\r\n        function bindMovableEvents(instance) {\r\n            on(instance.elements.header, 'mousedown', instance.__internal.beginMoveHandler);\r\n            on(instance.elements.header, 'touchstart', instance.__internal.beginMoveHandler, false, false);\r\n        }\r\n\r\n        /**\r\n         * Unbind movable specific events\r\n         *\r\n         * @param {Object} instance The dilog instance.\r\n         *\r\n         * @return {undefined}\r\n         */\r\n        function unbindMovableEvents(instance) {\r\n            off(instance.elements.header, 'mousedown', instance.__internal.beginMoveHandler);\r\n            off(instance.elements.header, 'touchstart', instance.__internal.beginMoveHandler, false, false);\r\n        }\r\n\r\n\r\n\r\n        /**\r\n         * Bind resizable specific events\r\n         *\r\n         * @param {Object} instance The dilog instance.\r\n         *\r\n         * @return {undefined}\r\n         */\r\n        function bindResizableEvents(instance) {\r\n            on(instance.elements.resizeHandle, 'mousedown', instance.__internal.beginResizeHandler);\r\n            on(instance.elements.resizeHandle, 'touchstart', instance.__internal.beginResizeHandler, false, false);\r\n        }\r\n\r\n        /**\r\n         * Unbind resizable specific events\r\n         *\r\n         * @param {Object} instance The dilog instance.\r\n         *\r\n         * @return {undefined}\r\n         */\r\n        function unbindResizableEvents(instance) {\r\n            off(instance.elements.resizeHandle, 'mousedown', instance.__internal.beginResizeHandler);\r\n            off(instance.elements.resizeHandle, 'touchstart', instance.__internal.beginResizeHandler, false, false);\r\n        }\r\n\r\n        /**\r\n         * Bind closable events\r\n         *\r\n         * @param {Object} instance The dilog instance.\r\n         *\r\n         * @return {undefined}\r\n         */\r\n        function bindClosableEvents(instance) {\r\n            on(instance.elements.modal, 'click', instance.__internal.modalClickHandler);\r\n        }\r\n\r\n        /**\r\n         * Unbind closable specific events\r\n         *\r\n         * @param {Object} instance The dilog instance.\r\n         *\r\n         * @return {undefined}\r\n         */\r\n        function unbindClosableEvents(instance) {\r\n            off(instance.elements.modal, 'click', instance.__internal.modalClickHandler);\r\n        }\r\n        // dialog API\r\n        return {\r\n            __init:initialize,\r\n            /**\r\n             * Check if dialog is currently open\r\n             *\r\n             * @return {Boolean}\r\n             */\r\n            isOpen: function () {\r\n                return this.__internal.isOpen;\r\n            },\r\n            isModal: function (){\r\n                return this.elements.root.className.indexOf(classes.modeless) < 0;\r\n            },\r\n            isMaximized:function(){\r\n                return this.elements.root.className.indexOf(classes.maximized) > -1;\r\n            },\r\n            isPinned:function(){\r\n                return this.elements.root.className.indexOf(classes.unpinned) < 0;\r\n            },\r\n            maximize:function(){\r\n                if(!this.isMaximized()){\r\n                    maximize(this);\r\n                }\r\n                return this;\r\n            },\r\n            restore:function(){\r\n                if(this.isMaximized()){\r\n                    restore(this);\r\n                }\r\n                return this;\r\n            },\r\n            pin:function(){\r\n                if(!this.isPinned()){\r\n                    pin(this);\r\n                }\r\n                return this;\r\n            },\r\n            unpin:function(){\r\n                if(this.isPinned()){\r\n                    unpin(this);\r\n                }\r\n                return this;\r\n            },\r\n            bringToFront:function(){\r\n                bringToFront(null, this);\r\n                return this;\r\n            },\r\n            /**\r\n             * Move the dialog to a specific x/y coordinates\r\n             *\r\n             * @param {Number} x    The new dialog x coordinate in pixels.\r\n             * @param {Number} y    The new dialog y coordinate in pixels.\r\n             *\r\n             * @return {Object} The dialog instance.\r\n             */\r\n            moveTo:function(x,y){\r\n                if(!isNaN(x) && !isNaN(y)){\r\n                    // allow custom `onmove` method\r\n                    dispatchEvent('onmove', this);\r\n                    \r\n                    var element = this.elements.dialog,\r\n                        current = element,\r\n                        offsetLeft = 0,\r\n                        offsetTop = 0;\r\n                    \r\n                    //subtract existing left,top\r\n                    if (element.style.left) {\r\n                        offsetLeft -= parseInt(element.style.left, 10);\r\n                    }\r\n                    if (element.style.top) {\r\n                        offsetTop -= parseInt(element.style.top, 10);\r\n                    }\r\n                    //calc offset\r\n                    do {\r\n                        offsetLeft += current.offsetLeft;\r\n                        offsetTop += current.offsetTop;\r\n                    } while (current = current.offsetParent);\r\n\r\n                    //calc left, top\r\n                    var left = (x - offsetLeft);\r\n                    var top  = (y - offsetTop);\r\n\r\n                    //// rtl handling\r\n                    if (isRightToLeft()) {\r\n                        left *= -1;\r\n                    }\r\n\r\n                    element.style.left = left + 'px';\r\n                    element.style.top = top + 'px';\r\n                    \r\n                    // allow custom `onmoved` method\r\n                    dispatchEvent('onmoved', this);\r\n                }\r\n                return this;\r\n            },\r\n            /**\r\n             * Resize the dialog to a specific width/height (the dialog must be 'resizable').\r\n             * The dialog can be resized to:\r\n             *  A minimum width equal to the initial display width\r\n             *  A minimum height equal to the sum of header/footer heights.\r\n             *\r\n             *\r\n             * @param {Number or String} width    The new dialog width in pixels or in percent.\r\n             * @param {Number or String} height   The new dialog height in pixels or in percent.\r\n             *\r\n             * @return {Object} The dialog instance.\r\n             */\r\n            resizeTo:function(width,height){\r\n                var w = parseFloat(width),\r\n                    h = parseFloat(height),\r\n                    regex = /(\\d*\\.\\d+|\\d+)%/\r\n                ;\r\n\r\n                if(!isNaN(w) && !isNaN(h) && this.get('resizable') === true){\r\n                    \r\n                    // allow custom `onresize` method\r\n                    dispatchEvent('onresize', this);\r\n                    \r\n                    if(('' + width).match(regex)){\r\n                        w = w / 100 * document.documentElement.clientWidth ;\r\n                    }\r\n\r\n                    if(('' + height).match(regex)){\r\n                        h = h / 100 * document.documentElement.clientHeight;\r\n                    }\r\n\r\n                    var element = this.elements.dialog;\r\n                    if (element.style.maxWidth !== 'none') {\r\n                        element.style.minWidth = (minWidth = element.offsetWidth) + 'px';\r\n                    }\r\n                    element.style.maxWidth = 'none';\r\n                    element.style.minHeight = this.elements.header.offsetHeight + this.elements.footer.offsetHeight + 'px';\r\n                    element.style.width = w + 'px';\r\n                    element.style.height = h + 'px';\r\n                    \r\n                    // allow custom `onresized` method\r\n                    dispatchEvent('onresized', this);\r\n                }\r\n                return this;\r\n            },\r\n            /**\r\n             * Gets or Sets dialog settings/options \r\n             *\r\n             * @param {String|Object} key A string specifying a propery name or a collection of key/value pairs.\r\n             * @param {Object} value Optional, the value associated with the key (in case it was a string).\r\n             *\r\n             * @return {undefined}\r\n             */\r\n            setting : function (key, value) {\r\n                var self = this;\r\n                var result = update(this, this.__internal.options, function(k,o,n){ optionUpdated(self,k,o,n); }, key, value);\r\n                if(result.op === 'get'){\r\n                    if(result.found){\r\n                        return result.value;\r\n                    }else if(typeof this.settings !== 'undefined'){\r\n                        return update(this, this.settings, this.settingUpdated || function(){}, key, value).value;\r\n                    }else{\r\n                        return undefined;\r\n                    }\r\n                }else if(result.op === 'set'){\r\n                    if(result.items.length > 0){\r\n                        var callback = this.settingUpdated || function(){};\r\n                        for(var x=0;x<result.items.length;x+=1){\r\n                            var item = result.items[x];\r\n                            if(!item.found && typeof this.settings !== 'undefined'){\r\n                                update(this, this.settings, callback, item.key, item.value);\r\n                            }\r\n                        }\r\n                    }\r\n                    return this;\r\n                }\r\n            },\r\n            /**\r\n             * [Alias] Sets dialog settings/options \r\n             */\r\n            set:function(key, value){\r\n                this.setting(key,value);\r\n                return this;\r\n            },\r\n            /**\r\n             * [Alias] Gets dialog settings/options \r\n             */\r\n            get:function(key){\r\n                return this.setting(key);\r\n            },\r\n            /**\r\n            * Sets dialog header\r\n            * @content {string or element}\r\n            *\r\n            * @return {undefined}\r\n            */\r\n            setHeader:function(content){\r\n                if(typeof content === 'string'){\r\n                    clearContents(this.elements.header);\r\n                    this.elements.header.innerHTML = content;\r\n                }else if (content instanceof window.HTMLElement && this.elements.header.firstChild !== content){\r\n                    clearContents(this.elements.header);\r\n                    this.elements.header.appendChild(content);\r\n                }\r\n                return this;\r\n            },\r\n            /**\r\n            * Sets dialog contents\r\n            * @content {string or element}\r\n            *\r\n            * @return {undefined}\r\n            */\r\n            setContent:function(content){\r\n                if(typeof content === 'string'){\r\n                    clearContents(this.elements.content);\r\n                    this.elements.content.innerHTML = content;\r\n                }else if (content instanceof window.HTMLElement && this.elements.content.firstChild !== content){\r\n                    clearContents(this.elements.content);\r\n                    this.elements.content.appendChild(content);\r\n                }\r\n                return this;\r\n            },\r\n            /**\r\n             * Show the dialog as modal\r\n             *\r\n             * @return {Object} the dialog instance.\r\n             */\r\n            showModal: function(className){\r\n                return this.show(true, className);\r\n            },\r\n            /**\r\n             * Show the dialog\r\n             *\r\n             * @return {Object} the dialog instance.\r\n             */\r\n            show: function (modal, className) {\r\n                \r\n                // ensure initialization\r\n                initialize(this);\r\n\r\n                if ( !this.__internal.isOpen ) {\r\n\r\n                    // add to open dialogs\r\n                    this.__internal.isOpen = true;\r\n                    openDialogs.push(this);\r\n\r\n                    // save last focused element\r\n                    if(alertify.defaults.maintainFocus){\r\n                        this.__internal.activeElement = document.activeElement;\r\n                    }\r\n\r\n                    // set tabindex attribute on body element this allows script to give it focusable\r\n                    if(!document.body.hasAttribute('tabindex')) {\r\n                        document.body.setAttribute( 'tabindex', tabindex = '0');\r\n                    }\r\n\r\n                    //allow custom dom manipulation updates before showing the dialog.\r\n                    if(typeof this.prepare === 'function'){\r\n                        this.prepare();\r\n                    }\r\n\r\n                    bindEvents(this);\r\n\r\n                    if(modal !== undefined){\r\n                        this.set('modal', modal);\r\n                    }\r\n\r\n                    //save scroll to prevent document jump\r\n                    saveScrollPosition();\r\n\r\n                    ensureNoOverflow();\r\n\r\n                    // allow custom dialog class on show\r\n                    if(typeof className === 'string' && className !== ''){\r\n                        this.__internal.className = className;\r\n                        addClass(this.elements.root, className);\r\n                    }\r\n\r\n                    // maximize if start maximized\r\n                    if ( this.get('startMaximized')) {\r\n                        this.maximize();\r\n                    }else if(this.isMaximized()){\r\n                        restore(this);\r\n                    }\r\n\r\n                    updateAbsPositionFix(this);\r\n                    this.elements.root.removeAttribute('style');\r\n                    removeClass(this.elements.root, classes.animationOut);\r\n                    addClass(this.elements.root, classes.animationIn);\r\n\r\n                    // set 1s fallback in case transition event doesn't fire\r\n                    clearTimeout( this.__internal.timerIn);\r\n                    this.__internal.timerIn = setTimeout( this.__internal.transitionInHandler, transition.supported ? 1000 : 100 );\r\n\r\n                    if(isSafari){\r\n                        // force desktop safari reflow\r\n                        var root = this.elements.root;\r\n                        root.style.display  = 'none';\r\n                        setTimeout(function(){root.style.display  = 'block';}, 0);\r\n                    }\r\n\r\n                    //reflow\r\n                    reflow = this.elements.root.offsetWidth;\r\n                  \r\n                    // show dialog\r\n                    removeClass(this.elements.root, classes.hidden);\r\n\r\n                    //restore scroll to prevent document jump\r\n                    restoreScrollPosition();\r\n\r\n                    // internal on show event\r\n                    if(typeof this.hooks.onshow === 'function'){\r\n                        this.hooks.onshow.call(this);\r\n                    }\r\n\r\n                    // allow custom `onshow` method\r\n                    dispatchEvent('onshow', this);\r\n\r\n                }else{\r\n                    // reset move updates\r\n                    resetMove(this);\r\n                    // reset resize updates\r\n                    resetResize(this);\r\n                    // shake the dialog to indicate its already open\r\n                    addClass(this.elements.dialog, classes.shake);\r\n                    var self = this;\r\n                    setTimeout(function(){\r\n                        removeClass(self.elements.dialog, classes.shake);\r\n                    },200);\r\n                }\r\n                return this;\r\n            },\r\n            /**\r\n             * Close the dialog\r\n             *\r\n             * @return {Object} The dialog instance\r\n             */\r\n            close: function () {\r\n                if (this.__internal.isOpen ) {\r\n                    // custom `onclosing` event\r\n                    if(dispatchEvent('onclosing', this) !== false){\r\n\r\n                        unbindEvents(this);\r\n\r\n                        removeClass(this.elements.root, classes.animationIn);\r\n                        addClass(this.elements.root, classes.animationOut);\r\n\r\n                        // set 1s fallback in case transition event doesn't fire\r\n                        clearTimeout( this.__internal.timerOut );\r\n                        this.__internal.timerOut = setTimeout( this.__internal.transitionOutHandler, transition.supported ? 1000 : 100 );\r\n                        // hide dialog\r\n                        addClass(this.elements.root, classes.hidden);\r\n                        //reflow\r\n                        reflow = this.elements.modal.offsetWidth;\r\n\r\n                        // return focus to the last active element\r\n                        if (alertify.defaults.maintainFocus && this.__internal.activeElement) {\r\n                            this.__internal.activeElement.focus();\r\n                            this.__internal.activeElement = null;\r\n                        }\r\n\r\n                        // remove custom dialog class on hide\r\n                        if (typeof this.__internal.className !== 'undefined' && this.__internal.className !== '') {\r\n                            removeClass(this.elements.root, this.__internal.className);\r\n                        }\r\n\r\n                        // internal on close event\r\n                        if(typeof this.hooks.onclose === 'function'){\r\n                            this.hooks.onclose.call(this);\r\n                        }\r\n\r\n                        // allow custom `onclose` method\r\n                        dispatchEvent('onclose', this);\r\n\r\n                        //remove from open dialogs\r\n                        openDialogs.splice(openDialogs.indexOf(this),1);\r\n                        this.__internal.isOpen = false;\r\n\r\n                        ensureNoOverflow();\r\n                    }\r\n\r\n                }\r\n                // last dialog and tab index was set by us, remove it.\r\n                if(!openDialogs.length && tabindex === '0'){\r\n                    document.body.removeAttribute('tabindex');\r\n                }\r\n                return this;\r\n            },\r\n            /**\r\n             * Close all open dialogs except this.\r\n             *\r\n             * @return {undefined}\r\n             */\r\n            closeOthers:function(){\r\n                alertify.closeAll(this);\r\n                return this;\r\n            },\r\n            /**\r\n             * Destroys this dialog instance\r\n             *\r\n             * @return {undefined}\r\n             */\r\n            destroy:function(){\r\n                if(this.__internal) {\r\n                    if (this.__internal.isOpen ) {\r\n                        //mark dialog for destruction, this will be called on tranistionOut event.\r\n                        this.__internal.destroy = function(){\r\n                            destruct(this, initialize);\r\n                        };\r\n                        //close the dialog to unbind all events.\r\n                        this.close();\r\n                    }else if(!this.__internal.destroy){\r\n                        destruct(this, initialize);\r\n                    }\r\n                }\r\n                return this;\r\n            },\r\n        };\r\n\t} () );\r\n    var notifier = (function () {\r\n        var reflow,\r\n            element,\r\n            openInstances = [],\r\n            classes = defaults.notifier.classes,\r\n            baseClass = classes.base;\r\n        /**\r\n         * Helper: initializes the notifier instance\r\n         *\r\n         */\r\n        function initialize(instance) {\r\n\r\n            if (!instance.__internal) {\r\n                instance.__internal = {\r\n                    position: alertify.defaults.notifier.position,\r\n                    delay: alertify.defaults.notifier.delay,\r\n                };\r\n\r\n                element = document.createElement('DIV');\r\n                var transitionOff = 'transitionOff' in defaults.notifier ? defaults.notifier.transitionOff : defaults.transitionOff;\r\n                if(transitionOff){\r\n                    baseClass = classes.base + ' ajs-no-transition';\r\n                }\r\n                updatePosition(instance);\r\n            }\r\n\r\n            //add to DOM tree.\r\n            if (element.parentNode !== document.body) {\r\n                document.body.appendChild(element);\r\n            }\r\n        }\r\n\r\n        function pushInstance(instance) {\r\n            instance.__internal.pushed = true;\r\n            openInstances.push(instance);\r\n        }\r\n        function popInstance(instance) {\r\n            openInstances.splice(openInstances.indexOf(instance), 1);\r\n            instance.__internal.pushed = false;\r\n        }\r\n        /**\r\n         * Helper: update the notifier instance position\r\n         *\r\n         */\r\n        function updatePosition(instance) {\r\n            element.className = baseClass;\r\n            switch (instance.__internal.position) {\r\n            case 'top-right':\r\n                addClass(element, classes.top + ' ' + classes.right);\r\n                break;\r\n            case 'top-left':\r\n                addClass(element, classes.top + ' ' + classes.left);\r\n                break;\r\n            case 'top-center':\r\n                addClass(element, classes.top + ' ' + classes.center);\r\n                break;\r\n            case 'bottom-left':\r\n                addClass(element, classes.bottom + ' ' + classes.left);\r\n                break;\r\n            case 'bottom-center':\r\n                addClass(element, classes.bottom + ' ' + classes.center);\r\n                break;\r\n\r\n            default:\r\n            case 'bottom-right':\r\n                addClass(element, classes.bottom + ' ' + classes.right);\r\n                break;\r\n            }\r\n        }\r\n\r\n        /**\r\n        * creates a new notification message\r\n        *\r\n        * @param  {DOMElement} message\tThe notifier message element\r\n        * @param  {Number} wait   Time (in ms) to wait before the message is dismissed, a value of 0 means keep open till clicked.\r\n        * @param  {Function} callback A callback function to be invoked when the message is dismissed.\r\n        *\r\n        * @return {undefined}\r\n        */\r\n        function create(div, callback) {\r\n\r\n            function clickDelegate(event, instance) {\r\n                if(!instance.__internal.closeButton || event.target.getAttribute('data-close') === 'true'){\r\n                    instance.dismiss(true);\r\n                }\r\n            }\r\n\r\n            function transitionDone(event, instance) {\r\n                // unbind event\r\n                off(instance.element, transition.type, transitionDone);\r\n                // remove the message\r\n                element.removeChild(instance.element);\r\n            }\r\n\r\n            function initialize(instance) {\r\n                if (!instance.__internal) {\r\n                    instance.__internal = {\r\n                        pushed: false,\r\n                        delay : undefined,\r\n                        timer: undefined,\r\n                        clickHandler: undefined,\r\n                        transitionEndHandler: undefined,\r\n                        transitionTimeout: undefined\r\n                    };\r\n                    instance.__internal.clickHandler = delegate(instance, clickDelegate);\r\n                    instance.__internal.transitionEndHandler = delegate(instance, transitionDone);\r\n                }\r\n                return instance;\r\n            }\r\n            function clearTimers(instance) {\r\n                clearTimeout(instance.__internal.timer);\r\n                clearTimeout(instance.__internal.transitionTimeout);\r\n            }\r\n            return initialize({\r\n                /* notification DOM element*/\r\n                element: div,\r\n                /*\r\n                 * Pushes a notification message\r\n                 * @param {string or DOMElement} content The notification message content\r\n                 * @param {Number} wait The time (in seconds) to wait before the message is dismissed, a value of 0 means keep open till clicked.\r\n                 *\r\n                 */\r\n                push: function (_content, _wait) {\r\n                    if (!this.__internal.pushed) {\r\n\r\n                        pushInstance(this);\r\n                        clearTimers(this);\r\n\r\n                        var content, wait;\r\n                        switch (arguments.length) {\r\n                        case 0:\r\n                            wait = this.__internal.delay;\r\n                            break;\r\n                        case 1:\r\n                            if (typeof (_content) === 'number') {\r\n                                wait = _content;\r\n                            } else {\r\n                                content = _content;\r\n                                wait = this.__internal.delay;\r\n                            }\r\n                            break;\r\n                        case 2:\r\n                            content = _content;\r\n                            wait = _wait;\r\n                            break;\r\n                        }\r\n                        this.__internal.closeButton = alertify.defaults.notifier.closeButton;\r\n                        // set contents\r\n                        if (typeof content !== 'undefined') {\r\n                            this.setContent(content);\r\n                        }\r\n                        // append or insert\r\n                        if (notifier.__internal.position.indexOf('top') < 0) {\r\n                            element.appendChild(this.element);\r\n                        } else {\r\n                            element.insertBefore(this.element, element.firstChild);\r\n                        }\r\n                        reflow = this.element.offsetWidth;\r\n                        addClass(this.element, classes.visible);\r\n                        // attach click event\r\n                        on(this.element, 'click', this.__internal.clickHandler);\r\n                        return this.delay(wait);\r\n                    }\r\n                    return this;\r\n                },\r\n                /*\r\n                 * {Function} callback function to be invoked before dismissing the notification message.\r\n                 * Remarks: A return value === 'false' will cancel the dismissal\r\n                 *\r\n                 */\r\n                ondismiss: function () { },\r\n                /*\r\n                 * {Function} callback function to be invoked when the message is dismissed.\r\n                 *\r\n                 */\r\n                callback: callback,\r\n                /*\r\n                 * Dismisses the notification message\r\n                 * @param {Boolean} clicked A flag indicating if the dismissal was caused by a click.\r\n                 *\r\n                 */\r\n                dismiss: function (clicked) {\r\n                    if (this.__internal.pushed) {\r\n                        clearTimers(this);\r\n                        if (!(typeof this.ondismiss === 'function' && this.ondismiss.call(this) === false)) {\r\n                            //detach click event\r\n                            off(this.element, 'click', this.__internal.clickHandler);\r\n                            // ensure element exists\r\n                            if (typeof this.element !== 'undefined' && this.element.parentNode === element) {\r\n                                //transition end or fallback\r\n                                this.__internal.transitionTimeout = setTimeout(this.__internal.transitionEndHandler, transition.supported ? 1000 : 100);\r\n                                removeClass(this.element, classes.visible);\r\n\r\n                                // custom callback on dismiss\r\n                                if (typeof this.callback === 'function') {\r\n                                    this.callback.call(this, clicked);\r\n                                }\r\n                            }\r\n                            popInstance(this);\r\n                        }\r\n                    }\r\n                    return this;\r\n                },\r\n                /*\r\n                 * Delays the notification message dismissal\r\n                 * @param {Number} wait The time (in seconds) to wait before the message is dismissed, a value of 0 means keep open till clicked.\r\n                 *\r\n                 */\r\n                delay: function (wait) {\r\n                    clearTimers(this);\r\n                    this.__internal.delay = typeof wait !== 'undefined' && !isNaN(+wait) ? +wait : notifier.__internal.delay;\r\n                    if (this.__internal.delay > 0) {\r\n                        var  self = this;\r\n                        this.__internal.timer = setTimeout(function () { self.dismiss(); }, this.__internal.delay * 1000);\r\n                    }\r\n                    return this;\r\n                },\r\n                /*\r\n                 * Sets the notification message contents\r\n                 * @param {string or DOMElement} content The notification message content\r\n                 *\r\n                 */\r\n                setContent: function (content) {\r\n                    if (typeof content === 'string') {\r\n                        clearContents(this.element);\r\n                        this.element.innerHTML = content;\r\n                    } else if (content instanceof window.HTMLElement && this.element.firstChild !== content) {\r\n                        clearContents(this.element);\r\n                        this.element.appendChild(content);\r\n                    }\r\n                    if(this.__internal.closeButton){\r\n                        var close = document.createElement('span');\r\n                        addClass(close, classes.close);\r\n                        close.setAttribute('data-close', true);\r\n                        this.element.appendChild(close);\r\n                    }\r\n                    return this;\r\n                },\r\n                /*\r\n                 * Dismisses all open notifications except this.\r\n                 *\r\n                 */\r\n                dismissOthers: function () {\r\n                    notifier.dismissAll(this);\r\n                    return this;\r\n                }\r\n            });\r\n        }\r\n\r\n        //notifier api\r\n        return {\r\n            /**\r\n             * Gets or Sets notifier settings.\r\n             *\r\n             * @param {string} key The setting name\r\n             * @param {Variant} value The setting value.\r\n             *\r\n             * @return {Object}\tif the called as a setter, return the notifier instance.\r\n             */\r\n            setting: function (key, value) {\r\n                //ensure init\r\n                initialize(this);\r\n\r\n                if (typeof value === 'undefined') {\r\n                    //get\r\n                    return this.__internal[key];\r\n                } else {\r\n                    //set\r\n                    switch (key) {\r\n                    case 'position':\r\n                        this.__internal.position = value;\r\n                        updatePosition(this);\r\n                        break;\r\n                    case 'delay':\r\n                        this.__internal.delay = value;\r\n                        break;\r\n                    }\r\n                }\r\n                return this;\r\n            },\r\n            /**\r\n             * [Alias] Sets dialog settings/options\r\n             */\r\n            set:function(key,value){\r\n                this.setting(key,value);\r\n                return this;\r\n            },\r\n            /**\r\n             * [Alias] Gets dialog settings/options\r\n             */\r\n            get:function(key){\r\n                return this.setting(key);\r\n            },\r\n            /**\r\n             * Creates a new notification message\r\n             *\r\n             * @param {string} type The type of notification message (simply a CSS class name 'ajs-{type}' to be added).\r\n             * @param {Function} callback  A callback function to be invoked when the message is dismissed.\r\n             *\r\n             * @return {undefined}\r\n             */\r\n            create: function (type, callback) {\r\n                //ensure notifier init\r\n                initialize(this);\r\n                //create new notification message\r\n                var div = document.createElement('div');\r\n                div.className = classes.message + ((typeof type === 'string' && type !== '') ? ' ' + classes.prefix + type : '');\r\n                return create(div, callback);\r\n            },\r\n            /**\r\n             * Dismisses all open notifications.\r\n             *\r\n             * @param {Object} excpet [optional] The notification object to exclude from dismissal.\r\n             *\r\n             */\r\n            dismissAll: function (except) {\r\n                var clone = openInstances.slice(0);\r\n                for (var x = 0; x < clone.length; x += 1) {\r\n                    var  instance = clone[x];\r\n                    if (except === undefined || except !== instance) {\r\n                        instance.dismiss();\r\n                    }\r\n                }\r\n            }\r\n        };\r\n    })();\r\n\r\n    /**\r\n     * Alertify public API\r\n     * This contains everything that is exposed through the alertify object.\r\n     *\r\n     * @return {Object}\r\n     */\r\n    function Alertify() {\r\n\r\n        // holds a references of created dialogs\r\n        var dialogs = {};\r\n\r\n        /**\r\n         * Extends a given prototype by merging properties from base into sub.\r\n         *\r\n         * @sub {Object} sub The prototype being overwritten.\r\n         * @base {Object} base The prototype being written.\r\n         *\r\n         * @return {Object} The extended prototype.\r\n         */\r\n        function extend(sub, base) {\r\n            // copy dialog pototype over definition.\r\n            for (var prop in base) {\r\n                if (base.hasOwnProperty(prop)) {\r\n                    sub[prop] = base[prop];\r\n                }\r\n            }\r\n            return sub;\r\n        }\r\n\r\n\r\n        /**\r\n        * Helper: returns a dialog instance from saved dialogs.\r\n        * and initializes the dialog if its not already initialized.\r\n        *\r\n        * @name {String} name The dialog name.\r\n        *\r\n        * @return {Object} The dialog instance.\r\n        */\r\n        function get_dialog(name) {\r\n            var dialog = dialogs[name].dialog;\r\n            //initialize the dialog if its not already initialized.\r\n            if (dialog && typeof dialog.__init === 'function') {\r\n                dialog.__init(dialog);\r\n            }\r\n            return dialog;\r\n        }\r\n\r\n        /**\r\n         * Helper:  registers a new dialog definition.\r\n         *\r\n         * @name {String} name The dialog name.\r\n         * @Factory {Function} Factory a function resposible for creating dialog prototype.\r\n         * @transient {Boolean} transient True to create a new dialog instance each time the dialog is invoked, false otherwise.\r\n         * @base {String} base the name of another dialog to inherit from.\r\n         *\r\n         * @return {Object} The dialog definition.\r\n         */\r\n        function register(name, Factory, transient, base) {\r\n            var definition = {\r\n                dialog: null,\r\n                factory: Factory\r\n            };\r\n\r\n            //if this is based on an existing dialog, create a new definition\r\n            //by applying the new protoype over the existing one.\r\n            if (base !== undefined) {\r\n                definition.factory = function () {\r\n                    return extend(new dialogs[base].factory(), new Factory());\r\n                };\r\n            }\r\n\r\n            if (!transient) {\r\n                //create a new definition based on dialog\r\n                definition.dialog = extend(new definition.factory(), dialog);\r\n            }\r\n            return dialogs[name] = definition;\r\n        }\r\n\r\n        return {\r\n            /**\r\n             * Alertify defaults\r\n             * \r\n             * @type {Object}\r\n             */\r\n            defaults: defaults,\r\n            /**\r\n             * Dialogs factory \r\n             *\r\n             * @param {string}      Dialog name.\r\n             * @param {Function}    A Dialog factory function.\r\n             * @param {Boolean}     Indicates whether to create a singleton or transient dialog.\r\n             * @param {String}      The name of the base type to inherit from.\r\n             */\r\n            dialog: function (name, Factory, transient, base) {\r\n\r\n                // get request, create a new instance and return it.\r\n                if (typeof Factory !== 'function') {\r\n                    return get_dialog(name);\r\n                }\r\n\r\n                if (this.hasOwnProperty(name)) {\r\n                    throw new Error('alertify.dialog: name already exists');\r\n                }\r\n\r\n                // register the dialog\r\n                var definition = register(name, Factory, transient, base);\r\n\r\n                if (transient) {\r\n\r\n                    // make it public\r\n                    this[name] = function () {\r\n                        //if passed with no params, consider it a get request\r\n                        if (arguments.length === 0) {\r\n                            return definition.dialog;\r\n                        } else {\r\n                            var instance = extend(new definition.factory(), dialog);\r\n                            //ensure init\r\n                            if (instance && typeof instance.__init === 'function') {\r\n                                instance.__init(instance);\r\n                            }\r\n                            instance['main'].apply(instance, arguments);\r\n                            return instance['show'].apply(instance);\r\n                        }\r\n                    };\r\n                } else {\r\n                    // make it public\r\n                    this[name] = function () {\r\n                        //ensure init\r\n                        if (definition.dialog && typeof definition.dialog.__init === 'function') {\r\n                            definition.dialog.__init(definition.dialog);\r\n                        }\r\n                        //if passed with no params, consider it a get request\r\n                        if (arguments.length === 0) {\r\n                            return definition.dialog;\r\n                        } else {\r\n                            var dialog = definition.dialog;\r\n                            dialog['main'].apply(definition.dialog, arguments);\r\n                            return dialog['show'].apply(definition.dialog);\r\n                        }\r\n                    };\r\n                }\r\n            },\r\n            /**\r\n             * Close all open dialogs.\r\n             *\r\n             * @param {Object} excpet [optional] The dialog object to exclude from closing.\r\n             *\r\n             * @return {undefined}\r\n             */\r\n            closeAll: function (except) {\r\n                var clone = openDialogs.slice(0);\r\n                for (var x = 0; x < clone.length; x += 1) {\r\n                    var instance = clone[x];\r\n                    if (except === undefined || except !== instance) {\r\n                        instance.close();\r\n                    }\r\n                }\r\n            },\r\n            /**\r\n             * Gets or Sets dialog settings/options. if the dialog is transient, this call does nothing.\r\n             *\r\n             * @param {string} name The dialog name.\r\n             * @param {String|Object} key A string specifying a propery name or a collection of key/value pairs.\r\n             * @param {Variant} value Optional, the value associated with the key (in case it was a string).\r\n             *\r\n             * @return {undefined}\r\n             */\r\n            setting: function (name, key, value) {\r\n\r\n                if (name === 'notifier') {\r\n                    return notifier.setting(key, value);\r\n                }\r\n\r\n                var dialog = get_dialog(name);\r\n                if (dialog) {\r\n                    return dialog.setting(key, value);\r\n                }\r\n            },\r\n            /**\r\n             * [Alias] Sets dialog settings/options \r\n             */\r\n            set: function(name,key,value){\r\n                return this.setting(name, key,value);\r\n            },\r\n            /**\r\n             * [Alias] Gets dialog settings/options \r\n             */\r\n            get: function(name, key){\r\n                return this.setting(name, key);\r\n            },\r\n            /**\r\n             * Creates a new notification message.\r\n             * If a type is passed, a class name \"ajs-{type}\" will be added.\r\n             * This allows for custom look and feel for various types of notifications.\r\n             *\r\n             * @param  {String | DOMElement}    [message=undefined]\t\tMessage text\r\n             * @param  {String}                 [type='']\t\t\t\tType of log message\r\n             * @param  {String}                 [wait='']\t\t\t\tTime (in seconds) to wait before auto-close\r\n             * @param  {Function}               [callback=undefined]\tA callback function to be invoked when the log is closed.\r\n             *\r\n             * @return {Object} Notification object.\r\n             */\r\n            notify: function (message, type, wait, callback) {\r\n                return notifier.create(type, callback).push(message, wait);\r\n            },\r\n            /**\r\n             * Creates a new notification message.\r\n             *\r\n             * @param  {String}\t\t[message=undefined]\t\tMessage text\r\n             * @param  {String}     [wait='']\t\t\t\tTime (in seconds) to wait before auto-close\r\n             * @param  {Function}\t[callback=undefined]\tA callback function to be invoked when the log is closed.\r\n             *\r\n             * @return {Object} Notification object.\r\n             */\r\n            message: function (message, wait, callback) {\r\n                return notifier.create(null, callback).push(message, wait);\r\n            },\r\n            /**\r\n             * Creates a new notification message of type 'success'.\r\n             *\r\n             * @param  {String}\t\t[message=undefined]\t\tMessage text\r\n             * @param  {String}     [wait='']\t\t\t\tTime (in seconds) to wait before auto-close\r\n             * @param  {Function}\t[callback=undefined]\tA callback function to be invoked when the log is closed.\r\n             *\r\n             * @return {Object} Notification object.\r\n             */\r\n            success: function (message, wait, callback) {\r\n                return notifier.create('success', callback).push(message, wait);\r\n            },\r\n            /**\r\n             * Creates a new notification message of type 'error'.\r\n             *\r\n             * @param  {String}\t\t[message=undefined]\t\tMessage text\r\n             * @param  {String}     [wait='']\t\t\t\tTime (in seconds) to wait before auto-close\r\n             * @param  {Function}\t[callback=undefined]\tA callback function to be invoked when the log is closed.\r\n             *\r\n             * @return {Object} Notification object.\r\n             */\r\n            error: function (message, wait, callback) {\r\n                return notifier.create('error', callback).push(message, wait);\r\n            },\r\n            /**\r\n             * Creates a new notification message of type 'warning'.\r\n             *\r\n             * @param  {String}\t\t[message=undefined]\t\tMessage text\r\n             * @param  {String}     [wait='']\t\t\t\tTime (in seconds) to wait before auto-close\r\n             * @param  {Function}\t[callback=undefined]\tA callback function to be invoked when the log is closed.\r\n             *\r\n             * @return {Object} Notification object.\r\n             */\r\n            warning: function (message, wait, callback) {\r\n                return notifier.create('warning', callback).push(message, wait);\r\n            },\r\n            /**\r\n             * Dismisses all open notifications\r\n             *\r\n             * @return {undefined}\r\n             */\r\n            dismissAll: function () {\r\n                notifier.dismissAll();\r\n            }\r\n        };\r\n    }\r\n    var alertify = new Alertify();\r\n\r\n    /**\r\n    * Alert dialog definition\r\n    *\r\n    * invoked by:\r\n    *\talertify.alert(message);\r\n    *\talertify.alert(title, message);\r\n    *\talertify.alert(message, onok);\r\n    *\talertify.alert(title, message, onok);\r\n     */\r\n    alertify.dialog('alert', function () {\r\n        return {\r\n            main: function (_title, _message, _onok) {\r\n                var title, message, onok;\r\n                switch (arguments.length) {\r\n                case 1:\r\n                    message = _title;\r\n                    break;\r\n                case 2:\r\n                    if (typeof _message === 'function') {\r\n                        message = _title;\r\n                        onok = _message;\r\n                    } else {\r\n                        title = _title;\r\n                        message = _message;\r\n                    }\r\n                    break;\r\n                case 3:\r\n                    title = _title;\r\n                    message = _message;\r\n                    onok = _onok;\r\n                    break;\r\n                }\r\n                this.set('title', title);\r\n                this.set('message', message);\r\n                this.set('onok', onok);\r\n                return this;\r\n            },\r\n            setup: function () {\r\n                return {\r\n                    buttons: [\r\n                        {\r\n                            text: alertify.defaults.glossary.ok,\r\n                            key: keys.ESC,\r\n                            invokeOnClose: true,\r\n                            className: alertify.defaults.theme.ok,\r\n                        }\r\n                    ],\r\n                    focus: {\r\n                        element: 0,\r\n                        select: false\r\n                    },\r\n                    options: {\r\n                        maximizable: false,\r\n                        resizable: false\r\n                    }\r\n                };\r\n            },\r\n            build: function () {\r\n                // nothing\r\n            },\r\n            prepare: function () {\r\n                //nothing\r\n            },\r\n            setMessage: function (message) {\r\n                this.setContent(message);\r\n            },\r\n            settings: {\r\n                message: undefined,\r\n                onok: undefined,\r\n                label: undefined,\r\n            },\r\n            settingUpdated: function (key, oldValue, newValue) {\r\n                switch (key) {\r\n                case 'message':\r\n                    this.setMessage(newValue);\r\n                    break;\r\n                case 'label':\r\n                    if (this.__internal.buttons[0].element) {\r\n                        this.__internal.buttons[0].element.innerHTML = newValue;\r\n                    }\r\n                    break;\r\n                }\r\n            },\r\n            callback: function (closeEvent) {\r\n                if (typeof this.get('onok') === 'function') {\r\n                    var returnValue = this.get('onok').call(this, closeEvent);\r\n                    if (typeof returnValue !== 'undefined') {\r\n                        closeEvent.cancel = !returnValue;\r\n                    }\r\n                }\r\n            }\r\n        };\r\n    });\r\n    /**\r\n     * Confirm dialog object\r\n     *\r\n     *\talertify.confirm(message);\r\n     *\talertify.confirm(message, onok);\r\n     *\talertify.confirm(message, onok, oncancel);\r\n     *\talertify.confirm(title, message, onok, oncancel);\r\n     */\r\n    alertify.dialog('confirm', function () {\r\n\r\n        var autoConfirm = {\r\n            timer: null,\r\n            index: null,\r\n            text: null,\r\n            duration: null,\r\n            task: function (event, self) {\r\n                if (self.isOpen()) {\r\n                    self.__internal.buttons[autoConfirm.index].element.innerHTML = autoConfirm.text + ' (&#8207;' + autoConfirm.duration + '&#8207;) ';\r\n                    autoConfirm.duration -= 1;\r\n                    if (autoConfirm.duration === -1) {\r\n                        clearAutoConfirm(self);\r\n                        var button = self.__internal.buttons[autoConfirm.index];\r\n                        var closeEvent = createCloseEvent(autoConfirm.index, button);\r\n\r\n                        if (typeof self.callback === 'function') {\r\n                            self.callback.apply(self, [closeEvent]);\r\n                        }\r\n                        //close the dialog.\r\n                        if (closeEvent.close !== false) {\r\n                            self.close();\r\n                        }\r\n                    }\r\n                } else {\r\n                    clearAutoConfirm(self);\r\n                }\r\n            }\r\n        };\r\n\r\n        function clearAutoConfirm(self) {\r\n            if (autoConfirm.timer !== null) {\r\n                clearInterval(autoConfirm.timer);\r\n                autoConfirm.timer = null;\r\n                self.__internal.buttons[autoConfirm.index].element.innerHTML = autoConfirm.text;\r\n            }\r\n        }\r\n\r\n        function startAutoConfirm(self, index, duration) {\r\n            clearAutoConfirm(self);\r\n            autoConfirm.duration = duration;\r\n            autoConfirm.index = index;\r\n            autoConfirm.text = self.__internal.buttons[index].element.innerHTML;\r\n            autoConfirm.timer = setInterval(delegate(self, autoConfirm.task), 1000);\r\n            autoConfirm.task(null, self);\r\n        }\r\n\r\n\r\n        return {\r\n            main: function (_title, _message, _onok, _oncancel) {\r\n                var title, message, onok, oncancel;\r\n                switch (arguments.length) {\r\n                case 1:\r\n                    message = _title;\r\n                    break;\r\n                case 2:\r\n                    message = _title;\r\n                    onok = _message;\r\n                    break;\r\n                case 3:\r\n                    message = _title;\r\n                    onok = _message;\r\n                    oncancel = _onok;\r\n                    break;\r\n                case 4:\r\n                    title = _title;\r\n                    message = _message;\r\n                    onok = _onok;\r\n                    oncancel = _oncancel;\r\n                    break;\r\n                }\r\n                this.set('title', title);\r\n                this.set('message', message);\r\n                this.set('onok', onok);\r\n                this.set('oncancel', oncancel);\r\n                return this;\r\n            },\r\n            setup: function () {\r\n                return {\r\n                    buttons: [\r\n                        {\r\n                            text: alertify.defaults.glossary.ok,\r\n                            key: keys.ENTER,\r\n                            className: alertify.defaults.theme.ok,\r\n                        },\r\n                        {\r\n                            text: alertify.defaults.glossary.cancel,\r\n                            key: keys.ESC,\r\n                            invokeOnClose: true,\r\n                            className: alertify.defaults.theme.cancel,\r\n                        }\r\n                    ],\r\n                    focus: {\r\n                        element: 0,\r\n                        select: false\r\n                    },\r\n                    options: {\r\n                        maximizable: false,\r\n                        resizable: false\r\n                    }\r\n                };\r\n            },\r\n            build: function () {\r\n                //nothing\r\n            },\r\n            prepare: function () {\r\n                //nothing\r\n            },\r\n            setMessage: function (message) {\r\n                this.setContent(message);\r\n            },\r\n            settings: {\r\n                message: null,\r\n                labels: null,\r\n                onok: null,\r\n                oncancel: null,\r\n                defaultFocus: null,\r\n                reverseButtons: null,\r\n            },\r\n            settingUpdated: function (key, oldValue, newValue) {\r\n                switch (key) {\r\n                case 'message':\r\n                    this.setMessage(newValue);\r\n                    break;\r\n                case 'labels':\r\n                    if ('ok' in newValue && this.__internal.buttons[0].element) {\r\n                        this.__internal.buttons[0].text = newValue.ok;\r\n                        this.__internal.buttons[0].element.innerHTML = newValue.ok;\r\n                    }\r\n                    if ('cancel' in newValue && this.__internal.buttons[1].element) {\r\n                        this.__internal.buttons[1].text = newValue.cancel;\r\n                        this.__internal.buttons[1].element.innerHTML = newValue.cancel;\r\n                    }\r\n                    break;\r\n                case 'reverseButtons':\r\n                    if (newValue === true) {\r\n                        this.elements.buttons.primary.appendChild(this.__internal.buttons[0].element);\r\n                    } else {\r\n                        this.elements.buttons.primary.appendChild(this.__internal.buttons[1].element);\r\n                    }\r\n                    break;\r\n                case 'defaultFocus':\r\n                    this.__internal.focus.element = newValue === 'ok' ? 0 : 1;\r\n                    break;\r\n                }\r\n            },\r\n            callback: function (closeEvent) {\r\n                clearAutoConfirm(this);\r\n                var returnValue;\r\n                switch (closeEvent.index) {\r\n                case 0:\r\n                    if (typeof this.get('onok') === 'function') {\r\n                        returnValue = this.get('onok').call(this, closeEvent);\r\n                        if (typeof returnValue !== 'undefined') {\r\n                            closeEvent.cancel = !returnValue;\r\n                        }\r\n                    }\r\n                    break;\r\n                case 1:\r\n                    if (typeof this.get('oncancel') === 'function') {\r\n                        returnValue = this.get('oncancel').call(this, closeEvent);\r\n                        if (typeof returnValue !== 'undefined') {\r\n                            closeEvent.cancel = !returnValue;\r\n                        }\r\n                    }\r\n                    break;\r\n                }\r\n            },\r\n            autoOk: function (duration) {\r\n                startAutoConfirm(this, 0, duration);\r\n                return this;\r\n            },\r\n            autoCancel: function (duration) {\r\n                startAutoConfirm(this, 1, duration);\r\n                return this;\r\n            }\r\n        };\r\n    });\r\n    /**\r\n     * Prompt dialog object\r\n     *\r\n     * invoked by:\r\n     *\talertify.prompt(message);\r\n     *\talertify.prompt(message, value);\r\n     *\talertify.prompt(message, value, onok);\r\n     *\talertify.prompt(message, value, onok, oncancel);\r\n     *\talertify.prompt(title, message, value, onok, oncancel);\r\n     */\r\n    alertify.dialog('prompt', function () {\r\n        var input = document.createElement('INPUT');\r\n        var p = document.createElement('P');\r\n        return {\r\n            main: function (_title, _message, _value, _onok, _oncancel) {\r\n                var title, message, value, onok, oncancel;\r\n                switch (arguments.length) {\r\n                case 1:\r\n                    message = _title;\r\n                    break;\r\n                case 2:\r\n                    message = _title;\r\n                    value = _message;\r\n                    break;\r\n                case 3:\r\n                    message = _title;\r\n                    value = _message;\r\n                    onok = _value;\r\n                    break;\r\n                case 4:\r\n                    message = _title;\r\n                    value = _message;\r\n                    onok = _value;\r\n                    oncancel = _onok;\r\n                    break;\r\n                case 5:\r\n                    title = _title;\r\n                    message = _message;\r\n                    value = _value;\r\n                    onok = _onok;\r\n                    oncancel = _oncancel;\r\n                    break;\r\n                }\r\n                this.set('title', title);\r\n                this.set('message', message);\r\n                this.set('value', value);\r\n                this.set('onok', onok);\r\n                this.set('oncancel', oncancel);\r\n                return this;\r\n            },\r\n            setup: function () {\r\n                return {\r\n                    buttons: [\r\n                        {\r\n                            text: alertify.defaults.glossary.ok,\r\n                            key: keys.ENTER,\r\n                            className: alertify.defaults.theme.ok,\r\n                        },\r\n                        {\r\n                            text: alertify.defaults.glossary.cancel,\r\n                            key: keys.ESC,\r\n                            invokeOnClose: true,\r\n                            className: alertify.defaults.theme.cancel,\r\n                        }\r\n                    ],\r\n                    focus: {\r\n                        element: input,\r\n                        select: true\r\n                    },\r\n                    options: {\r\n                        maximizable: false,\r\n                        resizable: false\r\n                    }\r\n                };\r\n            },\r\n            build: function () {\r\n                input.className = alertify.defaults.theme.input;\r\n                input.setAttribute('type', 'text');\r\n                input.value = this.get('value');\r\n                this.elements.content.appendChild(p);\r\n                this.elements.content.appendChild(input);\r\n            },\r\n            prepare: function () {\r\n                //nothing\r\n            },\r\n            setMessage: function (message) {\r\n                if (typeof message === 'string') {\r\n                    clearContents(p);\r\n                    p.innerHTML = message;\r\n                } else if (message instanceof window.HTMLElement && p.firstChild !== message) {\r\n                    clearContents(p);\r\n                    p.appendChild(message);\r\n                }\r\n            },\r\n            settings: {\r\n                message: undefined,\r\n                labels: undefined,\r\n                onok: undefined,\r\n                oncancel: undefined,\r\n                value: '',\r\n                type:'text',\r\n                reverseButtons: undefined,\r\n            },\r\n            settingUpdated: function (key, oldValue, newValue) {\r\n                switch (key) {\r\n                case 'message':\r\n                    this.setMessage(newValue);\r\n                    break;\r\n                case 'value':\r\n                    input.value = newValue;\r\n                    break;\r\n                case 'type':\r\n                    switch (newValue) {\r\n                    case 'text':\r\n                    case 'color':\r\n                    case 'date':\r\n                    case 'datetime-local':\r\n                    case 'email':\r\n                    case 'month':\r\n                    case 'number':\r\n                    case 'password':\r\n                    case 'search':\r\n                    case 'tel':\r\n                    case 'time':\r\n                    case 'week':\r\n                        input.type = newValue;\r\n                        break;\r\n                    default:\r\n                        input.type = 'text';\r\n                        break;\r\n                    }\r\n                    break;\r\n                case 'labels':\r\n                    if (newValue.ok && this.__internal.buttons[0].element) {\r\n                        this.__internal.buttons[0].element.innerHTML = newValue.ok;\r\n                    }\r\n                    if (newValue.cancel && this.__internal.buttons[1].element) {\r\n                        this.__internal.buttons[1].element.innerHTML = newValue.cancel;\r\n                    }\r\n                    break;\r\n                case 'reverseButtons':\r\n                    if (newValue === true) {\r\n                        this.elements.buttons.primary.appendChild(this.__internal.buttons[0].element);\r\n                    } else {\r\n                        this.elements.buttons.primary.appendChild(this.__internal.buttons[1].element);\r\n                    }\r\n                    break;\r\n                }\r\n            },\r\n            callback: function (closeEvent) {\r\n                var returnValue;\r\n                switch (closeEvent.index) {\r\n                case 0:\r\n                    this.settings.value = input.value;\r\n                    if (typeof this.get('onok') === 'function') {\r\n                        returnValue = this.get('onok').call(this, closeEvent, this.settings.value);\r\n                        if (typeof returnValue !== 'undefined') {\r\n                            closeEvent.cancel = !returnValue;\r\n                        }\r\n                    }\r\n                    break;\r\n                case 1:\r\n                    if (typeof this.get('oncancel') === 'function') {\r\n                        returnValue = this.get('oncancel').call(this, closeEvent);\r\n                        if (typeof returnValue !== 'undefined') {\r\n                            closeEvent.cancel = !returnValue;\r\n                        }\r\n                    }\r\n                    if(!closeEvent.cancel){\r\n                        input.value = this.settings.value;\r\n                    }\r\n                    break;\r\n                }\r\n            }\r\n        };\r\n    });\r\n\r\n    // CommonJS\r\n    if (  true && typeof module.exports === 'object' ) {\r\n        module.exports = alertify;\r\n    // AMD\r\n    } else if ( true) {\r\n        !(__WEBPACK_AMD_DEFINE_ARRAY__ = [], __WEBPACK_AMD_DEFINE_RESULT__ = (function () {\r\n            return alertify;\r\n        }).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),\n\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\r\n    // window\r\n    } else {}\r\n\r\n} ( typeof window !== 'undefined' ? window : this ) );\r\n\n\n//# sourceURL=webpack://travel-umroh/./node_modules/alertifyjs/build/alertify.js?");

/***/ }),

/***/ "./src/js/index.js":
/*!*************************!*\
  !*** ./src/js/index.js ***!
  \*************************/
/*! namespace exports */
/*! exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_require__.r, __webpack_exports__, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _scss_index_scss__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../scss/index.scss */ \"./src/scss/index.scss\");\n/* harmony import */ var perfect_scrollbar__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! perfect-scrollbar */ \"./node_modules/perfect-scrollbar/dist/perfect-scrollbar.esm.js\");\n;\n\n\nvar alertify = __webpack_require__(/*! alertifyjs */ \"./node_modules/alertifyjs/build/alertify.js\");\n\nvar queryString = __webpack_require__(/*! query-string */ \"./node_modules/query-string/index.js\");\n\nvar baseURL = window.baseURL;\ndelete window.baseURL;\nvar loggedInUser = window.loggedInUser;\ndelete window.loggedInUser;\n$('#globalVariable').remove();\n\nfunction numberFormat(num) {\n  var d = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n  return num.toFixed(d).replace('.', ',').replace(/(\\d)(?=(\\d{3})+(?!\\d))/g, '$1.');\n}\n\nfunction objToURLParam(data) {\n  var url = Object.keys(data).map(function (k) {\n    return encodeURIComponent(k) + '=' + encodeURIComponent(data[k]);\n  }).join('&');\n  return url;\n}\n\nfunction generateRandomString() {\n  var length = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 8;\n  var symbols = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;\n  var result = '';\n  var chars = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';\n\n  if (symbols) {\n    chars += '~!@#$%^&*()_-+={}[],.<>/?';\n  }\n\n  for (var i = 0; i < length; i++) {\n    result += chars.charAt(Math.floor(Math.random() * chars.length));\n  }\n\n  return result;\n}\n\nfunction base64toBlob(b64Data) {\n  var contentType = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'image/jpeg';\n  var sliceSize = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 2048;\n  var byteCharacters = atob(b64Data);\n  var byteArrays = [];\n\n  for (var offset = 0; offset < byteCharacters.length; offset += sliceSize) {\n    var slice = byteCharacters.slice(offset, offset + sliceSize);\n    var byteNumbers = new Array(slice.length);\n\n    for (var i = 0; i < slice.length; i++) {\n      byteNumbers[i] = slice.charCodeAt(i);\n    }\n\n    var byteArray = new Uint8Array(byteNumbers);\n    byteArrays.push(byteArray);\n  }\n\n  var blob = new Blob(byteArrays, {\n    type: contentType\n  });\n  return blob;\n}\n\nfunction setCSRFToken() {\n  var csrf = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  $('meta[name=\"X-CSRF-TOKEN\"]').attr('content', csrf.token);\n  $('form input[name=\"' + csrf.name + '\"]').val(csrf.token);\n}\n\nfunction getCSRFToken() {\n  var token = $('meta[name=\"X-CSRF-TOKEN\"]').attr('content');\n  return token;\n}\n\nfunction redesignDatatables() {\n  $('div.dataTables_wrapper').addClass('mb-5');\n  $('div.dataTables_filter label').addClass('text-right w-100').find('input').attr('placeholder', \"Cari\").addClass('form-control rounded-pill p-3 w-100').removeClass('form-control-sm');\n}\n\nfunction countSummary($el, valOld, valNew) {\n  var diff = Math.abs(valNew - valOld);\n  var step = Math.pow(10, diff.toString().length - 1);\n  setTimeout(function () {\n    if (valOld > valNew) {\n      valOld = valOld - step;\n      $el.html(numberFormat(valOld));\n    }\n\n    if (valOld < valNew) {\n      valOld = valOld + step;\n      $el.html(numberFormat(valOld));\n    }\n\n    countSummary($el, valOld, valNew);\n  }, 100);\n}\n\nfunction setDataSummary($el, sum) {\n  sum.forEach(function (s, i) {\n    var $_el = $el.find('[data-name=\"' + s.name + '\"]');\n    var value = parseInt($_el.html().replace(/\\./g, ''));\n    var value2 = parseInt(s.value);\n\n    if (value != value2) {\n      countSummary($_el, value, value2);\n    }\n  });\n}\n\nvar metaAlert = $('meta[name=\"alert\"]');\n\nif (metaAlert.length) {\n  var type = metaAlert.attr('data-type');\n  var message = metaAlert.attr('data-message');\n  alertify.set('notifier', 'position', 'top-right');\n  alertify.notify(message, type);\n}\n\nfunction reDrawDataTables() {\n  setTimeout(function () {\n    if ($('#dtAdmin').length) {\n      $('#dtAdmin').DataTable().draw();\n    }\n\n    if ($('#dtStockist').length) {\n      $('#dtStockist').DataTable().draw();\n    }\n\n    if ($('#dtMember').length) {\n      $('#dtMember').DataTable().draw();\n    }\n\n    if ($('#dtSerial').length) {\n      $('#dtSerial').DataTable().draw();\n    }\n\n    if ($('#dtBonus').length) {\n      $('#dtBonus').DataTable().draw();\n    }\n\n    if ($('#dtPayout').length) {\n      $('#dtPayout').DataTable().draw();\n    }\n\n    if ($('#dtPayoutHistory').length) {\n      $('#dtPayoutHistory').DataTable().draw();\n    }\n\n    if ($('#dtReward').length) {\n      $('#dtReward').DataTable().draw();\n    }\n\n    if ($('#dtRewardClaim').length) {\n      $('#dtRewardClaim').DataTable().draw();\n    }\n\n    if ($('#dtBonusLogs').length) {\n      $('#dtBonusLogs').DataTable().draw();\n    }\n\n    if ($('#dtLogsLogin').length) {\n      $('#dtLogsLogin').DataTable().draw();\n    }\n\n    if ($('#dtLogsBonus').length) {\n      $('#dtLogsBonus').DataTable().draw();\n    }\n\n    if ($('#dtLogsSerial').length) {\n      $('#dtLogsSerial').DataTable().draw();\n    }\n\n    if ($('#dtLogsMessage').length) {\n      $('#dtLogsMessage').DataTable().draw();\n    }\n\n    if ($('#dtBlog').length) {\n      $('#dtBlog').DataTable().draw();\n    }\n\n    if ($('#dtBlogCategory').length) {\n      $('#dtBlogCategory').DataTable().draw();\n    }\n\n    if ($('#dtEvent').length) {\n      $('#dtEvent').DataTable().draw();\n    }\n\n    if ($('#dtEventCategory').length) {\n      $('#dtEventCategory').DataTable().draw();\n    }\n\n    if ($('#dtTestimonial').length) {\n      $('#dtTestimonial').DataTable().draw();\n    }\n\n    if ($('#dtSlider').length) {\n      $('#dtSlider').DataTable().draw();\n    }\n\n    if ($('#dtGallery').length) {\n      $('#dtGallery').DataTable().draw();\n    }\n\n    if ($('#dtGalleryCategory').length) {\n      $('#dtGalleryCategory').DataTable().draw();\n    }\n\n    if ($('#dtPackage').length) {\n      $('#dtPackage').DataTable().draw();\n    }\n\n    if ($('#dtBranch').length) {\n      $('#dtBranch').DataTable().draw();\n    }\n  }, 500);\n}\n\n$('[data-toggle=\"sidebar\"]').on('click', function (e) {\n  $('body').toggleClass('toggle-sidebar');\n  reDrawDataTables();\n});\n$(window).resize(function () {// reDrawDataTables()\n});\n\nif ($('#sidebarScrollbar').length) {\n  var sidebarScrollbar = new perfect_scrollbar__WEBPACK_IMPORTED_MODULE_1__.default('#sidebarScrollbar');\n}\n\nvar dtLanguage = {\n  \"sEmptyTable\": \"Tidak ada data yang tersedia pada tabel ini\",\n  \"sProcessing\": \"Sedang memproses...\",\n  \"sLengthMenu\": \"Tampilkan _MENU_ entri\",\n  \"sZeroRecords\": \"Tidak ditemukan data yang sesuai\",\n  \"sInfo\": \"Menampilkan _START_ sampai _END_ dari _TOTAL_ entri\",\n  \"sInfoEmpty\": \"Menampilkan 0 sampai 0 dari 0 entri\",\n  \"sInfoFiltered\": \"(disaring dari _MAX_ entri keseluruhan)\",\n  \"sInfoPostFix\": \"\",\n  \"sSearch\": \"\",\n  \"sUrl\": \"\",\n  \"oPaginate\": {\n    \"sFirst\": \"<<\",\n    \"sPrevious\": \"<\",\n    \"sNext\": \">\",\n    \"sLast\": \">>\"\n  }\n};\n\nif ($('#dtAdmin').length) {\n  var dtAdmin = $('#dtAdmin').DataTable({\n    processing: true,\n    serverSide: true,\n    ajax: baseURL + \"/data/dt-admin\",\n    columns: [{\n      data: \"name\"\n    }, {\n      data: \"username\"\n    }, {\n      data: \"email\"\n    }, {\n      data: \"is_active\"\n    }, {\n      data: \"created_at\"\n    }, {\n      data: \"action\",\n      orderable: false,\n      className: \"cell-action\"\n    }],\n    language: dtLanguage,\n    responsive: true,\n    initComplete: function initComplete(setting, json) {\n      redesignDatatables();\n    },\n    drawCallback: function drawCallback(settings) {\n      var json = settings.json;\n      var sum = [{\n        name: \"total\",\n        value: json.recordsTotal\n      }, {\n        name: \"active\",\n        value: json.active\n      }, {\n        name: \"inactive\",\n        value: json.inactive\n      }];\n      var $el = $('#adminSummary');\n      setDataSummary($el, sum);\n    }\n  });\n  $('#dtAdmin tbody').on('click', '[data-toggle=\"delete\"]', deleteAdmin);\n}\n\nif ($('#dtStockist').length) {\n  var dtStockist = $('#dtStockist').DataTable({\n    processing: true,\n    serverSide: true,\n    ajax: baseURL + \"/data/dt-stockist\",\n    columns: [{\n      data: \"name\"\n    }, {\n      data: \"username\"\n    }, {\n      data: \"email\"\n    }, {\n      data: \"is_active\"\n    }, {\n      data: \"created_at\"\n    }, {\n      data: \"action\",\n      orderable: false,\n      className: \"cell-action\"\n    }],\n    language: dtLanguage,\n    responsive: true,\n    initComplete: function initComplete(setting, json) {\n      redesignDatatables();\n    },\n    drawCallback: function drawCallback(settings) {\n      var json = settings.json;\n      var sum = [{\n        name: \"total\",\n        value: json.recordsTotal\n      }, {\n        name: \"active\",\n        value: json.active\n      }, {\n        name: \"inactive\",\n        value: json.inactive\n      }, {\n        name: \"member\",\n        value: json.member\n      }];\n      var $el = $('#stockistSummary');\n      setDataSummary($el, sum);\n    }\n  });\n  $('#dtStockist tbody').on('click', '[data-toggle=\"delete\"]', deleteStockist);\n}\n\nif ($('#dtMember').length) {\n  var dtMember = $('#dtMember').DataTable({\n    processing: true,\n    serverSide: true,\n    ajax: baseURL + \"/data/dt-member\",\n    columns: [{\n      data: \"name\"\n    }, {\n      data: \"username\"\n    }, {\n      data: \"email\"\n    }, {\n      data: \"is_active\"\n    }, {\n      data: \"created_at\"\n    }, {\n      data: \"action\",\n      orderable: false,\n      className: \"cell-action\"\n    }],\n    language: dtLanguage,\n    responsive: true,\n    initComplete: function initComplete(setting, json) {\n      redesignDatatables();\n    },\n    drawCallback: function drawCallback(settings) {\n      var json = settings.json;\n      var sum = [{\n        name: \"total\",\n        value: json.recordsTotal\n      }, {\n        name: \"active\",\n        value: json.active\n      }, {\n        name: \"inactive\",\n        value: json.inactive\n      }, {\n        name: \"stockist\",\n        value: json.stockist\n      }];\n      var $el = $('#memberSummary');\n      setDataSummary($el, sum);\n    }\n  });\n  $('#dtMember tbody').on('click', '[data-toggle=\"delete\"]', deleteMember);\n}\n\nif ($('#dtSerial').length) {\n  var columns = [{\n    data: \"serial\"\n  }, {\n    data: \"pin\"\n  }];\n\n  if (loggedInUser.role == 'superadmin' || loggedInUser.role == 'admin') {\n    columns.push({\n      data: \"is_used\"\n    }, {\n      data: \"owner\"\n    });\n  }\n\n  columns.push({\n    data: \"action\",\n    orderable: false,\n    className: \"cell-action\"\n  });\n  var dtSerial = $('#dtSerial').DataTable({\n    processing: true,\n    serverSide: true,\n    ajax: {\n      url: baseURL + \"/data/dt-serial\",\n      data: function data(d) {\n        d.filter = {\n          status: $('#filterSerial [name=\"filter_status\"]:checked').val()\n        };\n        return d;\n      }\n    },\n    columns: columns,\n    language: dtLanguage,\n    responsive: true,\n    initComplete: function initComplete(setting, json) {\n      redesignDatatables();\n    },\n    drawCallback: function drawCallback(settings) {\n      if (loggedInUser.role == 'superadmin' || loggedInUser.role == 'admin') {\n        var json = settings.json;\n        var sum = [{\n          name: \"total\",\n          value: json.recordsTotal\n        }, {\n          name: \"available\",\n          value: json.available\n        }, {\n          name: \"used\",\n          value: json.used\n        }, {\n          name: \"owner\",\n          value: json.owner\n        }];\n        var $el = $('#serialSummary');\n        setDataSummary($el, sum);\n      }\n    }\n  });\n  $('#dtSerial tbody').on('click', '[data-toggle=\"transfer\"]', transferSerial);\n\n  if (loggedInUser.role == 'superadmin' || loggedInUser.role == 'admin') {\n    $('#dtSerial tbody').on('click', '[data-toggle=\"delete\"]', deleteSerial);\n  }\n}\n\n$('#filterSerial [name=\"filter_status\"]').change(function (e) {\n  $('#dtSerial').DataTable().draw();\n});\n\nif ($('#dtBonus').length) {\n  var dtBonus = $('#dtBonus').DataTable({\n    processing: true,\n    serverSide: true,\n    ajax: baseURL + \"/data/dt-bonus\",\n    columns: [{\n      data: \"name\"\n    }, {\n      data: \"sponsor\"\n    }, {\n      data: \"pairing\"\n    }, {\n      data: \"matching\"\n    }, {\n      data: \"total\"\n    }, {\n      data: \"reward\"\n    }],\n    language: dtLanguage,\n    responsive: true,\n    initComplete: function initComplete(setting, json) {\n      redesignDatatables();\n    },\n    drawCallback: function drawCallback(settings) {},\n    order: [[4, 'desc']]\n  });\n}\n\nif ($('#dtBonusSponsor').length) {\n  var url = new URL(window.location.href);\n  var username = url.searchParams.get(\"user\");\n  var dtBonusSponsor = $('#dtBonusSponsor').DataTable({\n    processing: true,\n    serverSide: true,\n    ajax: baseURL + \"/data/dt-bonus-sponsor?user=\" + username,\n    columns: [{\n      data: \"date\"\n    }, {\n      data: \"member\"\n    }, {\n      data: \"amount\"\n    }],\n    language: dtLanguage,\n    responsive: true,\n    initComplete: function initComplete(setting, json) {\n      redesignDatatables();\n    },\n    drawCallback: function drawCallback(settings) {},\n    order: [[0, 'desc']]\n  });\n}\n\nif ($('#dtBonusPairing').length) {\n  var _url = new URL(window.location.href);\n\n  var _username = _url.searchParams.get(\"user\");\n\n  var dtBonusPairing = $('#dtBonusPairing').DataTable({\n    processing: true,\n    serverSide: true,\n    ajax: baseURL + \"/data/dt-bonus-pairing?user=\" + _username,\n    columns: [{\n      data: \"date\"\n    }, {\n      data: \"member\"\n    }, {\n      data: \"amount\"\n    }, {\n      data: \"position\"\n    }],\n    language: dtLanguage,\n    responsive: true,\n    initComplete: function initComplete(setting, json) {\n      redesignDatatables();\n    },\n    drawCallback: function drawCallback(settings) {},\n    order: [[0, 'desc']]\n  });\n}\n\nif ($('#dtBonusMatching').length) {\n  var _url2 = new URL(window.location.href);\n\n  var _username2 = _url2.searchParams.get(\"user\");\n\n  var dtBonusMatching = $('#dtBonusMatching').DataTable({\n    processing: true,\n    serverSide: true,\n    ajax: baseURL + \"/data/dt-bonus-matching?user=\" + _username2,\n    columns: [{\n      data: \"date\"\n    }, {\n      data: \"member\"\n    }, {\n      data: \"amount\"\n    }, {\n      data: \"generation\"\n    }],\n    language: dtLanguage,\n    responsive: true,\n    initComplete: function initComplete(setting, json) {\n      redesignDatatables();\n    },\n    drawCallback: function drawCallback(settings) {},\n    order: [[0, 'desc']]\n  });\n}\n\nif ($('#dtBonusReward').length) {\n  var _url3 = new URL(window.location.href);\n\n  var _username3 = _url3.searchParams.get(\"user\");\n\n  var dtBonusReward = $('#dtBonusReward').DataTable({\n    processing: true,\n    serverSide: true,\n    ajax: baseURL + \"/data/dt-bonus-reward?user=\" + _username3,\n    columns: [{\n      data: \"date\"\n    }, {\n      data: \"member\"\n    }, {\n      data: \"amount\"\n    }],\n    language: dtLanguage,\n    responsive: true,\n    initComplete: function initComplete(setting, json) {\n      redesignDatatables();\n    },\n    drawCallback: function drawCallback(settings) {},\n    order: [[0, 'desc']]\n  });\n}\n\nfunction addPayout(e) {\n  e.preventDefault();\n  var $this = $(this);\n  $('#addPayoutForm').attr('action', $this.attr('href'));\n  $('#addPayoutForm [name=\"amount\"]').attr('max', $this.attr('data-max'));\n  $('#addPayoutForm [data-element=\"payment-detail\"]').html($this.find('[data-element=\"payment-detail\"]').html());\n  $('#addPayoutModal').modal('show');\n}\n\nif ($('#dtPayout').length) {\n  var dtPayout = $('#dtPayout').DataTable({\n    processing: true,\n    serverSide: true,\n    ajax: baseURL + \"/data/dt-payout\",\n    columns: [{\n      data: \"member\"\n    }, {\n      data: \"total_amount\"\n    }, {\n      data: \"total_paid\"\n    }, {\n      data: \"total_pending\"\n    }, {\n      data: \"outstanding\"\n    }, {\n      data: \"action\",\n      orderable: false\n    }],\n    language: dtLanguage,\n    responsive: true,\n    initComplete: function initComplete(setting, json) {\n      redesignDatatables();\n    },\n    drawCallback: function drawCallback(settings) {\n      var json = settings.json;\n      var sum = [{\n        name: \"total_amount\",\n        value: json.total_amount\n      }, {\n        name: \"total_paid\",\n        value: json.total_paid\n      }, {\n        name: \"total_pending\",\n        value: json.total_pending\n      }, {\n        name: \"outstanding\",\n        value: json.outstanding\n      }];\n      var $el = $('#payoutSummary');\n      setDataSummary($el, sum);\n    },\n    order: [[3, 'desc']]\n  });\n  $('#dtPayout tbody').on('click', '[data-toggle=\"add-payout\"]', addPayout);\n}\n\n$('#addPayoutForm').submit(function (e) {\n  e.preventDefault();\n  var $this = $(this);\n  $this.find('[type=\"submit\"]').prop('disabled', true);\n  var formData = new FormData(this);\n  $.ajax({\n    url: $this.attr('action'),\n    data: formData,\n    method: 'POST',\n    contentType: false,\n    processData: false,\n    dataType: 'json',\n    headers: {\n      'X-Requested-With': 'XMLHttpRequest'\n    },\n    error: function error(xhr, status, _error) {\n      if (xhr.responseJSON && xhr.responseJSON.errors) {\n        var errors = xhr.responseJSON.errors;\n        var keys = Object.keys(errors);\n        keys.forEach(function (val, i) {\n          $('<small class=\"text-danger\" data-type=\"error\" data-name=\"' + val + '\">' + errors[val] + '</small>').insertAfter('#addAdminForm [name=\"' + val + '\"]');\n        });\n      }\n\n      if (xhr.responseJSON && xhr.responseJSON.message) {\n        alertify.set('notifier', 'position', 'top-right');\n        alertify.notify(xhr.responseJSON.message.text, xhr.responseJSON.message.type);\n      }\n    },\n    success: function success(data, status, xhr) {\n      Swal.fire({\n        icon: 'success',\n        title: 'Success!',\n        text: 'Data berhasil disimpan'\n      }).then(function (result) {\n        window.location.reload();\n      });\n    },\n    complete: function complete(xhr, status) {\n      $this.find('[type=\"submit\"]').prop('disabled', false);\n\n      if (xhr.responseJSON && xhr.responseJSON.csrf) {\n        setCSRFToken(xhr.responseJSON.csrf);\n        reDrawDataTables();\n      } else {\n        Swal.fire({\n          icon: 'error',\n          title: 'Oops...',\n          text: 'Something went wrong!'\n        }).then(function (result) {\n          window.location.reload();\n        });\n      }\n    }\n  });\n});\n\nfunction confirmPayout(e) {\n  e.preventDefault();\n  var $this = $(this);\n  Swal.fire({\n    title: \"Konfirmasi pembayaran ini?\",\n    text: \"Pembayaran akan dinyatakan berhasil.\",\n    icon: 'warning',\n    showCancelButton: true,\n    confirmButtonText: 'Ya, Konfirmasi!',\n    cancelButtonText: 'Batalkan',\n    customClass: {\n      confirmButton: 'btn btn-info mr-2',\n      cancelButton: 'btn btn-secondary ml-2'\n    },\n    buttonsStyling: false\n  }).then(function (result) {\n    if (result.isConfirmed) {\n      $.ajax({\n        url: $this.attr('href'),\n        method: 'POST',\n        dataType: 'json',\n        headers: {\n          'X-CSRF-TOKEN': getCSRFToken(),\n          'X-Requested-With': 'XMLHttpRequest'\n        },\n        error: function error(xhr, status, _error2) {\n          if (xhr.responseJSON && xhr.responseJSON.message) {\n            alertify.set('notifier', 'position', 'top-right');\n            alertify.notify(xhr.responseJSON.message.text, xhr.responseJSON.message.type);\n          }\n        },\n        success: function success(data, status, xhr) {\n          Swal.fire({\n            icon: 'success',\n            title: 'Success!',\n            text: 'Pembayaran berhasil dikonfirmasi'\n          });\n        },\n        complete: function complete(xhr, status) {\n          if (xhr.responseJSON && xhr.responseJSON.csrf) {\n            setCSRFToken(xhr.responseJSON.csrf);\n            reDrawDataTables();\n          } else {\n            Swal.fire({\n              icon: 'error',\n              title: 'Oops...',\n              text: 'Something went wrong!'\n            }).then(function (result) {\n              window.location.reload();\n            });\n          }\n        }\n      });\n    }\n  });\n}\n\nif ($('#dtPayoutHistory').length) {\n  var dtPayoutHistory = $('#dtPayoutHistory').DataTable({\n    processing: true,\n    serverSide: true,\n    ajax: {\n      url: baseURL + \"/data/dt-payout-history\",\n      data: function data(d) {\n        d.member = $('#dtPayoutHistory').attr('data-id');\n        return d;\n      }\n    },\n    columns: [{\n      data: \"admin\"\n    }, {\n      data: \"type\"\n    }, {\n      data: \"paid\"\n    }, {\n      data: \"paid_date\"\n    }, {\n      data: \"status\"\n    }],\n    language: dtLanguage,\n    responsive: true,\n    initComplete: function initComplete(setting, json) {\n      redesignDatatables();\n    },\n    drawCallback: function drawCallback(settings) {\n      var json = settings.json;\n      var sum = [{\n        name: \"total_amount\",\n        value: json.total_amount\n      }, {\n        name: \"total_paid\",\n        value: json.total_paid\n      }, {\n        name: \"total_pending\",\n        value: json.total_pending\n      }, {\n        name: \"outstanding\",\n        value: json.outstanding\n      }];\n      var $el = $('#payoutSummary');\n      setDataSummary($el, sum);\n    },\n    order: [[2, 'desc']]\n  });\n  $('#dtPayoutHistory tbody').on('click', '[data-toggle=\"confirm-payout\"]', confirmPayout);\n}\n\nif ($('#dtReward').length) {\n  var dtReward = $('#dtReward').DataTable({\n    processing: true,\n    serverSide: true,\n    ajax: baseURL + \"/data/dt-reward\",\n    columns: [{\n      data: \"image\",\n      orderable: false\n    }, {\n      data: \"name\",\n      className: 'align-middle'\n    }, {\n      data: \"point\",\n      className: 'align-middle'\n    }, {\n      data: \"action\",\n      orderable: false,\n      className: 'align-middle text-right'\n    }],\n    language: dtLanguage,\n    responsive: true,\n    initComplete: function initComplete(setting, json) {\n      redesignDatatables();\n    },\n    drawCallback: function drawCallback(settings) {},\n    order: [[2, 'asc']]\n  });\n}\n\n$('#addRewardForm').submit(function (e) {\n  e.preventDefault();\n  var $this = $(this);\n  $this.find('[type=\"submit\"]').prop('disabled', true);\n  $('#addRewardForm [data-type=\"error\"]').remove();\n  var formData = new FormData(this);\n  var $imgTag = $('#rewardImagePreview img');\n\n  if ($imgTag.data('upload')) {\n    var imgSrc = $imgTag.attr('src');\n    var base64Image = imgSrc.replace(/^data:image\\/jpeg;base64,/, \"\");\n    var blobImage = base64toBlob(base64Image);\n    formData.append('reward_image', blobImage, $imgTag.data('filename'));\n  }\n\n  $.ajax({\n    data: formData,\n    type: 'POST',\n    contentType: false,\n    processData: false,\n    dataType: 'json',\n    headers: {\n      'X-Requested-With': 'XMLHttpRequest'\n    },\n    error: function error(xhr, status, _error3) {\n      if (xhr.responseJSON && xhr.responseJSON.errors) {\n        var errors = xhr.responseJSON.errors;\n        var keys = Object.keys(errors);\n        keys.forEach(function (val, i) {\n          $('<small class=\"text-danger\" data-type=\"error\" data-name=\"' + val + '\">' + errors[val] + '</small>').insertAfter('#addRewardForm [name=\"' + val + '\"]');\n        });\n      }\n\n      if (xhr.responseJSON && xhr.responseJSON.message) {\n        alertify.set('notifier', 'position', 'top-right');\n        alertify.notify(xhr.responseJSON.message.text, xhr.responseJSON.message.type);\n      }\n    },\n    success: function success(data, status, xhr) {\n      Swal.fire({\n        icon: 'success',\n        title: 'Success!',\n        text: 'Data berhasil disimpan'\n      }).then(function (result) {\n        window.location.reload();\n      });\n    },\n    complete: function complete(xhr, status) {\n      $this.find('[type=\"submit\"]').prop('disabled', false);\n\n      if (xhr.responseJSON && xhr.responseJSON.csrf) {\n        setCSRFToken(xhr.responseJSON.csrf);\n      } else {\n        Swal.fire({\n          icon: 'error',\n          title: 'Oops...',\n          text: 'Something went wrong!'\n        }).then(function (result) {\n          window.location.reload();\n        });\n      }\n    }\n  });\n});\n$('#editRewardForm').submit(function (e) {\n  e.preventDefault();\n  var $this = $(this);\n  $this.find('[type=\"submit\"]').prop('disabled', false);\n  $('#editRewardForm [data-type=\"error\"]').remove();\n  var formData = new FormData(this);\n  var $imgTag = $('#rewardImagePreview img');\n\n  if ($imgTag.data('upload') && !$imgTag.data('delete')) {\n    var imgSrc = $imgTag.attr('src');\n    var base64Image = imgSrc.replace(/^data:image\\/jpeg;base64,/, \"\");\n    var blobImage = base64toBlob(base64Image);\n    formData.append('reward_image', blobImage, $imgTag.data('filename'));\n  }\n\n  if (!$imgTag.data('upload') && $imgTag.data('delete')) {\n    formData.append('delete_image', true);\n  }\n\n  $.ajax({\n    data: formData,\n    type: 'POST',\n    contentType: false,\n    processData: false,\n    dataType: 'json',\n    headers: {\n      'X-Requested-With': 'XMLHttpRequest'\n    },\n    error: function error(xhr, status, _error4) {\n      if (xhr.responseJSON && xhr.responseJSON.errors) {\n        var errors = xhr.responseJSON.errors;\n        var keys = Object.keys(errors);\n        keys.forEach(function (val, i) {\n          $('<small class=\"text-danger\" data-type=\"error\" data-name=\"' + val + '\">' + errors[val] + '</small>').insertAfter('#editRewardForm [name=\"' + val + '\"]');\n        });\n      }\n\n      if (xhr.responseJSON && xhr.responseJSON.message) {\n        alertify.set('notifier', 'position', 'top-right');\n        alertify.notify(xhr.responseJSON.message.text, xhr.responseJSON.message.type);\n      }\n    },\n    success: function success(data, status, xhr) {\n      Swal.fire({\n        icon: 'success',\n        title: 'Success!',\n        text: 'Data berhasil disimpan'\n      }).then(function (result) {\n        window.location.reload();\n      });\n    },\n    complete: function complete(xhr, status) {\n      $this.find('[type=\"submit\"]').prop('disabled', false);\n\n      if (xhr.responseJSON && xhr.responseJSON.csrf) {\n        setCSRFToken(xhr.responseJSON.csrf);\n      } else {\n        Swal.fire({\n          icon: 'error',\n          title: 'Oops...',\n          text: 'Something went wrong!'\n        }).then(function (result) {\n          window.location.reload();\n        });\n      }\n    }\n  });\n});\n\nfunction resetRewardPoint(e) {\n  e.preventDefault();\n  var $this = $(this);\n  Swal.fire({\n    title: \"Reset poin member ini?\",\n    html: \"Poin akan direset menjadi:<br />\" + $this.attr('data-user-point') + \" - \" + $this.attr('data-highest-point') + \" = <strong>\" + (parseInt($this.attr('data-user-point')) - parseInt($this.attr('data-highest-point'))) + \" Poin</strong>\",\n    icon: 'warning',\n    showCancelButton: true,\n    confirmButtonText: 'Ya, reset!',\n    cancelButtonText: 'Batalkan',\n    customClass: {\n      confirmButton: 'btn btn-info mr-2',\n      cancelButton: 'btn btn-secondary ml-2'\n    },\n    buttonsStyling: false\n  }).then(function (result) {\n    if (result.isConfirmed) {\n      $.ajax({\n        url: $this.attr('href'),\n        method: 'POST',\n        dataType: 'json',\n        headers: {\n          'X-CSRF-TOKEN': getCSRFToken(),\n          'X-Requested-With': 'XMLHttpRequest'\n        },\n        error: function error(xhr, status, _error5) {\n          if (xhr.responseJSON && xhr.responseJSON.message) {\n            alertify.set('notifier', 'position', 'top-right');\n            alertify.notify(xhr.responseJSON.message.text, xhr.responseJSON.message.type);\n          }\n        },\n        success: function success(data, status, xhr) {\n          Swal.fire({\n            icon: 'success',\n            title: 'Success!',\n            text: 'Poin berhasil direset',\n            timer: 3000,\n            showConfirmButton: false\n          }).then(function (result) {\n            window.location.reload();\n          });\n        },\n        complete: function complete(xhr, status) {\n          if (xhr.responseJSON && xhr.responseJSON.csrf) {\n            setCSRFToken(xhr.responseJSON.csrf);\n            reDrawDataTables();\n          } else {\n            Swal.fire({\n              icon: 'error',\n              title: 'Oops...',\n              text: 'Something went wrong!'\n            }).then(function (result) {\n              window.location.reload();\n            });\n          }\n        }\n      });\n    }\n  });\n}\n\nif ($('#dtRewardClaim').length) {\n  var dtRewardClaim = $('#dtRewardClaim').DataTable({\n    processing: true,\n    serverSide: true,\n    ajax: baseURL + \"/data/dt-reward-claim\",\n    columns: [{\n      data: \"name\",\n      className: 'align-middle'\n    }, {\n      data: \"point\",\n      className: 'align-middle'\n    }, {\n      data: \"claim\",\n      orderable: false,\n      className: 'align-middle'\n    }, {\n      data: \"outstanding\",\n      orderable: false,\n      className: 'align-middle'\n    }],\n    language: dtLanguage,\n    responsive: true,\n    initComplete: function initComplete(setting, json) {\n      redesignDatatables();\n    },\n    drawCallback: function drawCallback(settings) {\n      var json = settings.json;\n      var sum = [{\n        name: \"totalPoint\",\n        value: json.totalPoint\n      }, {\n        name: \"totalValue\",\n        value: json.totalValue\n      }, {\n        name: \"claimedPoint\",\n        value: json.claimedPoint\n      }, {\n        name: \"claimedValue\",\n        value: json.claimedValue\n      }, {\n        name: \"unclaimedPoint\",\n        value: json.unclaimedPoint\n      }, {\n        name: \"unclaimedValue\",\n        value: json.unclaimedValue\n      }];\n      var $el = $('#rewardSummary');\n      setDataSummary($el, sum);\n    },\n    order: [[1, 'desc']]\n  });\n  $('#dtRewardClaim tbody').on('click', '[data-toggle=\"reset-reward-point\"]', resetRewardPoint);\n}\n\n$('[data-toggle=\"claim-reward\"]').click(function (e) {\n  e.preventDefault();\n  var $this = $(this);\n  Swal.fire({\n    title: \"Ajukan klaim reward ini?\",\n    text: \"Klaim akan dikirim ke admin untuk ditindaklanjuti!\",\n    icon: 'warning',\n    showCancelButton: true,\n    confirmButtonText: 'Ya, ajukan!',\n    cancelButtonText: 'Batalkan',\n    customClass: {\n      confirmButton: 'btn btn-info mr-2',\n      cancelButton: 'btn btn-secondary ml-2'\n    },\n    buttonsStyling: false\n  }).then(function (result) {\n    if (result.isConfirmed) {\n      $.ajax({\n        url: $this.attr('href'),\n        method: 'POST',\n        dataType: 'json',\n        headers: {\n          'X-CSRF-TOKEN': getCSRFToken(),\n          'X-Requested-With': 'XMLHttpRequest'\n        },\n        error: function error(xhr, status, _error6) {\n          if (xhr.responseJSON && xhr.responseJSON.message) {\n            alertify.set('notifier', 'position', 'top-right');\n            alertify.notify(xhr.responseJSON.message.text, xhr.responseJSON.message.type);\n          }\n        },\n        success: function success(data, status, xhr) {\n          Swal.fire({\n            icon: 'success',\n            title: 'Success!',\n            text: 'Pengajuan berhasil dikirim',\n            timer: 3000,\n            showConfirmButton: false\n          }).then(function (result) {\n            window.location.reload();\n          });\n        },\n        complete: function complete(xhr, status) {\n          if (xhr.responseJSON && xhr.responseJSON.csrf) {\n            setCSRFToken(xhr.responseJSON.csrf);\n            reDrawDataTables();\n          } else {\n            Swal.fire({\n              icon: 'error',\n              title: 'Oops...',\n              text: 'Something went wrong!'\n            }).then(function (result) {\n              window.location.reload();\n            });\n          }\n        }\n      });\n    }\n  });\n});\n$('[data-toggle=\"change-claim-status\"]').click(function (e) {\n  e.preventDefault();\n  var $this = $(this);\n  var status = $this.attr('data-status');\n  $this.addClass('disabled');\n  Swal.fire({\n    title: \"Ganti status klaim ini?\",\n    text: \"Status klaim akan diganti menjadi \\\"\" + status + \"\\\"!\",\n    icon: 'warning',\n    showCancelButton: true,\n    confirmButtonText: 'Ya, ganti!',\n    cancelButtonText: 'Batalkan',\n    customClass: {\n      confirmButton: 'btn btn-info mr-2',\n      cancelButton: 'btn btn-secondary ml-2'\n    },\n    buttonsStyling: false\n  }).then(function (result) {\n    if (result.isConfirmed) {\n      $.ajax({\n        url: $this.attr('href'),\n        method: 'POST',\n        dataType: 'json',\n        headers: {\n          'X-CSRF-TOKEN': getCSRFToken(),\n          'X-Requested-With': 'XMLHttpRequest'\n        },\n        error: function error(xhr, status, _error7) {\n          if (xhr.responseJSON && xhr.responseJSON.message) {\n            alertify.set('notifier', 'position', 'top-right');\n            alertify.notify(xhr.responseJSON.message.text, xhr.responseJSON.message.type);\n          }\n        },\n        success: function success(data, status, xhr) {\n          Swal.fire({\n            icon: 'success',\n            title: 'Success!',\n            text: 'Status klaim berhasil diganti',\n            timer: 3000,\n            showConfirmButton: false\n          }).then(function (result) {\n            window.location.reload();\n          });\n        },\n        complete: function complete(xhr, status) {\n          $this.removeClass('disabled');\n\n          if (xhr.responseJSON && xhr.responseJSON.csrf) {\n            setCSRFToken(xhr.responseJSON.csrf);\n            reDrawDataTables();\n          } else {\n            Swal.fire({\n              icon: 'error',\n              title: 'Oops...',\n              text: 'Something went wrong!'\n            }).then(function (result) {\n              window.location.reload();\n            });\n          }\n        }\n      });\n    } else {\n      $this.removeClass('disabled');\n    }\n  });\n});\n\nif ($('#dtBonusLogs').length) {\n  var dtBonusLogs = $('#dtBonusLogs').DataTable({\n    processing: true,\n    serverSide: true,\n    ajax: baseURL + \"/data/dt-bonus-logs\",\n    columns: [{\n      data: \"date\"\n    }, {\n      data: \"type\"\n    }, {\n      data: \"member\"\n    }, {\n      data: \"amount\"\n    }],\n    language: dtLanguage,\n    responsive: true,\n    initComplete: function initComplete(setting, json) {\n      redesignDatatables();\n    },\n    drawCallback: function drawCallback(settings) {\n      var json = settings.json;\n      var sum = [{\n        name: \"sponsor\",\n        value: json.sponsor\n      }, {\n        name: \"pairing\",\n        value: json.pairing\n      }, {\n        name: \"matching\",\n        value: json.matching\n      }, {\n        name: \"reward\",\n        value: json.reward\n      }];\n      var $el = $('#bonusLogsSummary');\n      setDataSummary($el, sum);\n    },\n    order: [[0, 'desc']]\n  });\n}\n\n$('[data-toggle=\"generateRandomPassword\"]').on('click', function (e) {\n  var randStr = generateRandomString();\n  var target = $(this).attr('data-target');\n  $(target).val(randStr);\n});\n\nfunction deleteAdmin(e) {\n  e.preventDefault();\n  var $this = $(this);\n  Swal.fire({\n    title: \"Hapus data ini?\",\n    text: \"Data akan dihapus selamanya!\",\n    icon: 'warning',\n    showCancelButton: true,\n    confirmButtonText: 'Ya, Hapus!',\n    cancelButtonText: 'Batalkan',\n    customClass: {\n      confirmButton: 'btn btn-danger mr-2',\n      cancelButton: 'btn btn-secondary ml-2'\n    },\n    buttonsStyling: false\n  }).then(function (result) {\n    if (result.isConfirmed) {\n      $.ajax({\n        url: $this.attr('href'),\n        method: 'POST',\n        dataType: 'json',\n        headers: {\n          'X-CSRF-TOKEN': getCSRFToken(),\n          'X-Requested-With': 'XMLHttpRequest'\n        },\n        error: function error(xhr, status, _error8) {\n          if (xhr.responseJSON && xhr.responseJSON.message) {\n            alertify.set('notifier', 'position', 'top-right');\n            alertify.notify(xhr.responseJSON.message.text, xhr.responseJSON.message.type);\n          }\n        },\n        success: function success(data, status, xhr) {\n          Swal.fire({\n            icon: 'success',\n            title: 'Success!',\n            text: 'Data berhasil dihapus'\n          });\n        },\n        complete: function complete(xhr, status) {\n          if (xhr.responseJSON && xhr.responseJSON.csrf) {\n            setCSRFToken(xhr.responseJSON.csrf);\n            reDrawDataTables();\n          } else {\n            Swal.fire({\n              icon: 'error',\n              title: 'Oops...',\n              text: 'Something went wrong!'\n            }).then(function (result) {\n              window.location.reload();\n            });\n          }\n        }\n      });\n    }\n  });\n}\n\nfunction deleteStockist(e) {\n  e.preventDefault();\n  var $this = $(this);\n  Swal.fire({\n    title: \"Hapus data ini?\",\n    text: \"Data akan dihapus selamanya!\",\n    icon: 'warning',\n    showCancelButton: true,\n    confirmButtonText: 'Ya, Hapus!',\n    cancelButtonText: 'Batalkan',\n    customClass: {\n      confirmButton: 'btn btn-danger mr-2',\n      cancelButton: 'btn btn-secondary ml-2'\n    },\n    buttonsStyling: false\n  }).then(function (result) {\n    if (result.isConfirmed) {\n      $.ajax({\n        url: $this.attr('href'),\n        method: 'POST',\n        dataType: 'json',\n        headers: {\n          'X-CSRF-TOKEN': getCSRFToken(),\n          'X-Requested-With': 'XMLHttpRequest'\n        },\n        error: function error(xhr, status, _error9) {\n          if (xhr.responseJSON && xhr.responseJSON.message) {\n            alertify.set('notifier', 'position', 'top-right');\n            alertify.notify(xhr.responseJSON.message.text, xhr.responseJSON.message.type);\n          }\n        },\n        success: function success(data, status, xhr) {\n          Swal.fire({\n            icon: 'success',\n            title: 'Success!',\n            text: 'Data berhasil dihapus'\n          });\n        },\n        complete: function complete(xhr, status) {\n          if (xhr.responseJSON && xhr.responseJSON.csrf) {\n            setCSRFToken(xhr.responseJSON.csrf);\n            reDrawDataTables();\n          } else {\n            Swal.fire({\n              icon: 'error',\n              title: 'Oops...',\n              text: 'Something went wrong!'\n            }).then(function (result) {\n              window.location.reload();\n            });\n          }\n        }\n      });\n    }\n  });\n}\n\nfunction deleteMember(e) {\n  e.preventDefault();\n  var $this = $(this);\n  Swal.fire({\n    title: \"Hapus data ini?\",\n    text: \"Data akan dihapus selamanya!\",\n    icon: 'warning',\n    showCancelButton: true,\n    confirmButtonText: 'Ya, Hapus!',\n    cancelButtonText: 'Batalkan',\n    customClass: {\n      confirmButton: 'btn btn-danger mr-2',\n      cancelButton: 'btn btn-secondary ml-2'\n    },\n    buttonsStyling: false\n  }).then(function (result) {\n    if (result.isConfirmed) {\n      $.ajax({\n        url: $this.attr('href'),\n        method: 'POST',\n        dataType: 'json',\n        headers: {\n          'X-CSRF-TOKEN': getCSRFToken(),\n          'X-Requested-With': 'XMLHttpRequest'\n        },\n        error: function error(xhr, status, _error10) {\n          if (xhr.responseJSON && xhr.responseJSON.message) {\n            alertify.set('notifier', 'position', 'top-right');\n            alertify.notify(xhr.responseJSON.message.text, xhr.responseJSON.message.type);\n          }\n        },\n        success: function success(data, status, xhr) {\n          Swal.fire({\n            icon: 'success',\n            title: 'Success!',\n            text: 'Data berhasil dihapus'\n          });\n        },\n        complete: function complete(xhr, status) {\n          if (xhr.responseJSON && xhr.responseJSON.csrf) {\n            setCSRFToken(xhr.responseJSON.csrf);\n            reDrawDataTables();\n          } else {\n            Swal.fire({\n              icon: 'error',\n              title: 'Oops...',\n              text: 'Something went wrong!'\n            }).then(function (result) {\n              window.location.reload();\n            });\n          }\n        }\n      });\n    }\n  });\n}\n\nvar userImage = null;\n\nfunction readUserImageFile(input) {\n  if (input.files && input.files[0]) {\n    $('#userImageModal').modal('show');\n    var reader = new FileReader();\n\n    reader.onload = function (e) {\n      setTimeout(function () {\n        userImage = new Croppie(document.getElementById('userImageCropper'), {\n          viewport: {\n            width: 240,\n            height: 240,\n            type: 'square'\n          },\n          boundary: {\n            width: 320,\n            height: 320\n          },\n          url: e.target.result,\n          enableExif: true\n        });\n      }, 500);\n    };\n\n    reader.readAsDataURL(input.files[0]);\n  }\n}\n\n$('#inputUserImage').on('change', function () {\n  readUserImageFile(this);\n});\n$('#userImageModal').on('hide.bs.modal', function (e) {\n  userImage.destroy();\n  $('#inputUserImage').val('');\n});\n$('#userImageModal [data-toggle=\"crop-image\"]').on('click', function (e) {\n  userImage.result({\n    type: 'base64',\n    format: 'jpeg',\n    size: {\n      width: 320,\n      height: 320\n    }\n  }).then(function (resp) {\n    $('#userImagePreview img').attr({\n      src: resp,\n      'data-upload': true,\n      'data-filename': $('#inputUserImage')[0].files[0].name\n    });\n    $('[data-toggle=\"reset-user-image\"]').removeClass('d-none');\n    $('[data-toggle=\"reset-user-image\"]').removeClass('d-none');\n    $('#userImageModal').modal('hide');\n  });\n});\n\nfunction resetUserImage() {\n  var $imgTag = $('#userImagePreview img');\n  $imgTag.attr({\n    src: $imgTag.data('original'),\n    'data-upload': false,\n    'data-filename': '',\n    'data-delete': false\n  });\n  $('[data-toggle=\"reset-user-image\"]').addClass('d-none');\n  $('[data-toggle=\"delete-user-image\"]').removeClass('d-none');\n}\n\nfunction deleteUserImage() {\n  var $imgTag = $('#userImagePreview img');\n  $imgTag.attr({\n    src: $imgTag.data('placeholder'),\n    'data-upload': false,\n    'data-filename': '',\n    'data-delete': true\n  });\n  $('[data-toggle=\"reset-user-image\"]').removeClass('d-none');\n  $('[data-toggle=\"delete-user-image\"]').addClass('d-none');\n}\n\n$('[data-toggle=\"reset-user-image\"]').click(resetUserImage);\n$('[data-toggle=\"delete-user-image\"]').click(deleteUserImage);\nvar rewardImage = null;\n\nfunction readRewardImageFile(input) {\n  if (input.files && input.files[0]) {\n    $('#rewardImageModal').modal('show');\n    var reader = new FileReader();\n\n    reader.onload = function (e) {\n      setTimeout(function () {\n        rewardImage = new Croppie(document.getElementById('rewardImageCropper'), {\n          viewport: {\n            width: 300,\n            height: 225,\n            type: 'square'\n          },\n          boundary: {\n            width: 320,\n            height: 240\n          },\n          url: e.target.result,\n          enableExif: true\n        });\n      }, 500);\n    };\n\n    reader.readAsDataURL(input.files[0]);\n  }\n}\n\n$('#inputRewardImage').on('change', function () {\n  readRewardImageFile(this);\n});\n$('#rewardImageModal').on('hide.bs.modal', function (e) {\n  rewardImage.destroy();\n  $('#inputRewardImage').val('');\n});\n$('#rewardImageModal [data-toggle=\"crop-image\"]').on('click', function (e) {\n  rewardImage.result({\n    type: 'base64',\n    format: 'jpeg',\n    size: {\n      width: 640,\n      height: 480\n    }\n  }).then(function (resp) {\n    $('#rewardImagePreview img').attr({\n      src: resp,\n      'data-upload': true,\n      'data-filename': $('#inputRewardImage')[0].files[0].name\n    });\n    $('[data-toggle=\"reset-reward-image\"]').removeClass('d-none');\n    $('[data-toggle=\"delete-reward-image\"]').removeClass('d-none');\n    $('#rewardImageModal').modal('hide');\n  });\n});\n\nfunction resetRewardImage() {\n  var $imgTag = $('#rewardImagePreview img');\n  $imgTag.attr({\n    src: $imgTag.data('original'),\n    'data-upload': false,\n    'data-filename': '',\n    'data-delete': false\n  });\n  $('[data-toggle=\"reset-reward-image\"]').addClass('d-none');\n  $('[data-toggle=\"delete-reward-image\"]').removeClass('d-none');\n}\n\nfunction deleteRewardImage() {\n  var $imgTag = $('#rewardImagePreview img');\n  $imgTag.attr({\n    src: $imgTag.data('placeholder'),\n    'data-upload': false,\n    'data-filename': '',\n    'data-delete': true\n  });\n  $('[data-toggle=\"reset-reward-image\"]').removeClass('d-none');\n  $('[data-toggle=\"delete-reward-image\"]').addClass('d-none');\n}\n\n$('[data-toggle=\"reset-reward-image\"]').click(resetRewardImage);\n$('[data-toggle=\"delete-reward-image\"]').click(deleteRewardImage);\n$('#addAdminForm').submit(function (e) {\n  e.preventDefault();\n  var $this = $(this);\n  $this.find('[type=\"submit\"]').prop('disabled', true);\n  $('#addAdminForm [data-type=\"error\"]').remove();\n  var formData = new FormData(this);\n  var $imgTag = $('#userImagePreview img');\n\n  if ($imgTag.data('upload')) {\n    var imgSrc = $imgTag.attr('src');\n    var base64Image = imgSrc.replace(/^data:image\\/jpeg;base64,/, \"\");\n    var blobImage = base64toBlob(base64Image);\n    formData.append('user_image', blobImage, $imgTag.data('filename'));\n  }\n\n  $.ajax({\n    data: formData,\n    type: 'POST',\n    contentType: false,\n    processData: false,\n    dataType: 'json',\n    headers: {\n      'X-Requested-With': 'XMLHttpRequest'\n    },\n    error: function error(xhr, status, _error11) {\n      if (xhr.responseJSON && xhr.responseJSON.errors) {\n        var errors = xhr.responseJSON.errors;\n        var keys = Object.keys(errors);\n        keys.forEach(function (val, i) {\n          $('<small class=\"text-danger\" data-type=\"error\" data-name=\"' + val + '\">' + errors[val] + '</small>').insertAfter('#addAdminForm [name=\"' + val + '\"]');\n        });\n      }\n\n      if (xhr.responseJSON && xhr.responseJSON.message) {\n        alertify.set('notifier', 'position', 'top-right');\n        alertify.notify(xhr.responseJSON.message.text, xhr.responseJSON.message.type);\n      }\n    },\n    success: function success(data, status, xhr) {\n      Swal.fire({\n        icon: 'success',\n        title: 'Success!',\n        text: 'Data berhasil disimpan'\n      }).then(function (result) {\n        window.location.reload();\n      });\n    },\n    complete: function complete(xhr, status) {\n      $this.find('[type=\"submit\"]').prop('disabled', false);\n\n      if (xhr.responseJSON && xhr.responseJSON.csrf) {\n        setCSRFToken(xhr.responseJSON.csrf);\n      } else {\n        Swal.fire({\n          icon: 'error',\n          title: 'Oops...',\n          text: 'Something went wrong!'\n        }).then(function (result) {\n          window.location.reload();\n        });\n      }\n    }\n  });\n});\n$('#editAdminForm').submit(function (e) {\n  e.preventDefault();\n  var $this = $(this);\n  $this.find('[type=\"submit\"]').prop('disabled', false);\n  $('#editAdminForm [data-type=\"error\"]').remove();\n  var formData = new FormData(this);\n  var $imgTag = $('#userImagePreview img');\n\n  if ($imgTag.data('upload') && !$imgTag.data('delete')) {\n    var imgSrc = $imgTag.attr('src');\n    var base64Image = imgSrc.replace(/^data:image\\/jpeg;base64,/, \"\");\n    var blobImage = base64toBlob(base64Image);\n    formData.append('user_image', blobImage, $imgTag.data('filename'));\n  }\n\n  if (!$imgTag.data('upload') && $imgTag.data('delete')) {\n    formData.append('delete_image', true);\n  }\n\n  $.ajax({\n    data: formData,\n    type: 'POST',\n    contentType: false,\n    processData: false,\n    dataType: 'json',\n    headers: {\n      'X-Requested-With': 'XMLHttpRequest'\n    },\n    error: function error(xhr, status, _error12) {\n      if (xhr.responseJSON && xhr.responseJSON.errors) {\n        var errors = xhr.responseJSON.errors;\n        var keys = Object.keys(errors);\n        keys.forEach(function (val, i) {\n          $('<small class=\"text-danger\" data-type=\"error\" data-name=\"' + val + '\">' + errors[val] + '</small>').insertAfter('#editAdminForm [name=\"' + val + '\"]');\n        });\n      }\n\n      if (xhr.responseJSON && xhr.responseJSON.message) {\n        alertify.set('notifier', 'position', 'top-right');\n        alertify.notify(xhr.responseJSON.message.text, xhr.responseJSON.message.type);\n      }\n    },\n    success: function success(data, status, xhr) {\n      Swal.fire({\n        icon: 'success',\n        title: 'Success!',\n        text: 'Data berhasil disimpan'\n      }).then(function (result) {\n        window.location.reload();\n      });\n    },\n    complete: function complete(xhr, status) {\n      $this.find('[type=\"submit\"]').prop('disabled', false);\n\n      if (xhr.responseJSON && xhr.responseJSON.csrf) {\n        setCSRFToken(xhr.responseJSON.csrf);\n      } else {\n        Swal.fire({\n          icon: 'error',\n          title: 'Oops...',\n          text: 'Something went wrong!'\n        }).then(function (result) {\n          window.location.reload();\n        });\n      }\n    }\n  });\n});\n$('#changePasswordForm').submit(function (e) {\n  e.preventDefault();\n  var $this = $(this);\n  $this.find('[type=\"submit\"]').prop('disabled', true);\n  $('#changePasswordForm [data-type=\"error\"]').remove();\n  var formData = new FormData(this);\n  $.ajax({\n    data: formData,\n    type: 'POST',\n    contentType: false,\n    processData: false,\n    dataType: 'json',\n    headers: {\n      'X-Requested-With': 'XMLHttpRequest'\n    },\n    error: function error(xhr, status, _error13) {\n      if (xhr.responseJSON && xhr.responseJSON.errors) {\n        var errors = xhr.responseJSON.errors;\n        var keys = Object.keys(errors);\n        keys.forEach(function (val, i) {\n          $('<small class=\"text-danger\" data-type=\"error\" data-name=\"' + val + '\">' + errors[val] + '</small>').insertAfter('#changePasswordForm [name=\"' + val + '\"]');\n        });\n      }\n\n      if (xhr.responseJSON && xhr.responseJSON.message) {\n        alertify.set('notifier', 'position', 'top-right');\n        alertify.notify(xhr.responseJSON.message.text, xhr.responseJSON.message.type);\n      }\n    },\n    success: function success(data, status, xhr) {\n      Swal.fire({\n        icon: 'success',\n        title: 'Success!',\n        text: 'Password berhasil disimpan'\n      }).then(function (result) {\n        window.location.reload();\n      });\n    },\n    complete: function complete(xhr, status) {\n      $this.find('[type=\"submit\"]').prop('disabled', false);\n\n      if (xhr.responseJSON && xhr.responseJSON.csrf) {\n        setCSRFToken(xhr.responseJSON.csrf);\n      } else {\n        Swal.fire({\n          icon: 'error',\n          title: 'Oops...',\n          text: 'Something went wrong!'\n        }).then(function (result) {\n          window.location.reload();\n        });\n      }\n    }\n  });\n});\n$('#addStockistForm').submit(function (e) {\n  e.preventDefault();\n  var $this = $(this);\n  $this.find('[type=\"submit\"]').prop('disabled', true);\n  $('#addStockistForm [data-type=\"error\"]').remove();\n  var formData = new FormData(this);\n  var $imgTag = $('#userImagePreview img');\n\n  if ($imgTag.data('upload')) {\n    var imgSrc = $imgTag.attr('src');\n    var base64Image = imgSrc.replace(/^data:image\\/jpeg;base64,/, \"\");\n    var blobImage = base64toBlob(base64Image);\n    formData.append('user_image', blobImage, $imgTag.data('filename'));\n  }\n\n  $.ajax({\n    data: formData,\n    type: 'POST',\n    contentType: false,\n    processData: false,\n    dataType: 'json',\n    headers: {\n      'X-Requested-With': 'XMLHttpRequest'\n    },\n    error: function error(xhr, status, _error14) {\n      if (xhr.responseJSON && xhr.responseJSON.errors) {\n        var errors = xhr.responseJSON.errors;\n        var keys = Object.keys(errors);\n        keys.forEach(function (val, i) {\n          $('<small class=\"text-danger\" data-type=\"error\" data-name=\"' + val + '\">' + errors[val] + '</small>').insertAfter('#addStockistForm [name=\"' + val + '\"]');\n        });\n      }\n\n      if (xhr.responseJSON && xhr.responseJSON.message) {\n        alertify.set('notifier', 'position', 'top-right');\n        alertify.notify(xhr.responseJSON.message.text, xhr.responseJSON.message.type);\n      }\n    },\n    success: function success(data, status, xhr) {\n      Swal.fire({\n        icon: 'success',\n        title: 'Success!',\n        text: 'Data berhasil disimpan'\n      }).then(function (result) {\n        window.location.reload();\n      });\n    },\n    complete: function complete(xhr, status) {\n      $this.find('[type=\"submit\"]').prop('disabled', false);\n\n      if (xhr.responseJSON && xhr.responseJSON.csrf) {\n        setCSRFToken(xhr.responseJSON.csrf);\n      } else {\n        Swal.fire({\n          icon: 'error',\n          title: 'Oops...',\n          text: 'Something went wrong!'\n        }).then(function (result) {\n          window.location.reload();\n        });\n      }\n    }\n  });\n});\n$('#editStockistForm').submit(function (e) {\n  e.preventDefault();\n  var $this = $(this);\n  $this.find('[type=\"submit\"]').prop('disabled', true);\n  $('#editStockistForm [data-type=\"error\"]').remove();\n  var formData = new FormData(this);\n  var $imgTag = $('#userImagePreview img');\n\n  if ($imgTag.data('upload') && !$imgTag.data('delete')) {\n    var imgSrc = $imgTag.attr('src');\n    var base64Image = imgSrc.replace(/^data:image\\/jpeg;base64,/, \"\");\n    var blobImage = base64toBlob(base64Image);\n    formData.append('user_image', blobImage, $imgTag.data('filename'));\n  }\n\n  if (!$imgTag.data('upload') && $imgTag.data('delete')) {\n    formData.append('delete_image', true);\n  }\n\n  $.ajax({\n    data: formData,\n    type: 'POST',\n    contentType: false,\n    processData: false,\n    dataType: 'json',\n    headers: {\n      'X-Requested-With': 'XMLHttpRequest'\n    },\n    error: function error(xhr, status, _error15) {\n      if (xhr.responseJSON && xhr.responseJSON.errors) {\n        var errors = xhr.responseJSON.errors;\n        var keys = Object.keys(errors);\n        keys.forEach(function (val, i) {\n          $('<small class=\"text-danger\" data-type=\"error\" data-name=\"' + val + '\">' + errors[val] + '</small>').insertAfter('#editStockistForm [name=\"' + val + '\"]');\n        });\n      }\n\n      if (xhr.responseJSON && xhr.responseJSON.message) {\n        alertify.set('notifier', 'position', 'top-right');\n        alertify.notify(xhr.responseJSON.message.text, xhr.responseJSON.message.type);\n      }\n    },\n    success: function success(data, status, xhr) {\n      Swal.fire({\n        icon: 'success',\n        title: 'Success!',\n        text: 'Data berhasil disimpan'\n      }).then(function (result) {\n        window.location.reload();\n      });\n    },\n    complete: function complete(xhr, status) {\n      $this.find('[type=\"submit\"]').prop('disabled', false);\n\n      if (xhr.responseJSON && xhr.responseJSON.csrf) {\n        setCSRFToken(xhr.responseJSON.csrf);\n      } else {\n        Swal.fire({\n          icon: 'error',\n          title: 'Oops...',\n          text: 'Something went wrong!'\n        }).then(function (result) {\n          window.location.reload();\n        });\n      }\n    }\n  });\n});\n$('#addMemberForm [name=\"is_free\"]').change(function (e) {\n  var value = e.target.value;\n\n  if (value == \"1\") {\n    $('#addMemberForm [data-member=\"non-free\"]').addClass('d-none');\n    $('#addMemberForm [data-toggle=\"open-sponsor-tree\"]').prop('disabled', false);\n  } else {\n    $('#addMemberForm [data-member=\"non-free\"]').removeClass('d-none');\n    $('#addMemberForm [data-toggle=\"open-sponsor-tree\"]').prop('disabled', true);\n  }\n\n  $('#addMemberForm [name=\"serial\"]').val('');\n  $('#addMemberForm [data-input=\"serial\"]').html('');\n  $('#addMemberForm [data-input=\"pin\"]').html('');\n  $('#addMemberForm [name=\"sponsor\"]').val('');\n  $('#addMemberForm [data-input=\"sponsor\"]').html('Pilih Sponsor');\n  selectedSerial = null;\n});\n$('#addMemberForm').submit(function (e) {\n  e.preventDefault();\n  var $this = $(this);\n  $this.find('[type=\"submit\"]').prop('disabled', true);\n  var serialID = $('#addMemberForm [name=\"serial\"]').val();\n  var isFree = $('#addMemberForm [name=\"is_free\"]:checked').val();\n\n  if (!serialID && isFree != '1') {\n    Swal.fire({\n      icon: 'error',\n      title: 'Oops...',\n      text: 'Silahkan pilih Serial & PIN terlebih dahulu!'\n    }).then(function (result) {\n      $this.find('[type=\"submit\"]').prop('disabled', false);\n      $('#addMemberForm [data-toggle=\"open-serial-modal\"]').trigger('click');\n    });\n  } else {\n    $('#addMemberForm [data-type=\"error\"]').remove();\n    var formData = new FormData(this);\n    var $imgTag = $('#userImagePreview img');\n\n    if ($imgTag.data('upload')) {\n      var imgSrc = $imgTag.attr('src');\n      var base64Image = imgSrc.replace(/^data:image\\/jpeg;base64,/, \"\");\n      var blobImage = base64toBlob(base64Image);\n      formData.append('user_image', blobImage, $imgTag.data('filename'));\n    }\n\n    $.ajax({\n      url: baseURL + \"/member/add\",\n      data: formData,\n      type: 'POST',\n      contentType: false,\n      processData: false,\n      dataType: 'json',\n      headers: {\n        'X-Requested-With': 'XMLHttpRequest'\n      },\n      error: function error(xhr, status, _error16) {\n        if (xhr.responseJSON && xhr.responseJSON.errors) {\n          var errors = xhr.responseJSON.errors;\n          var keys = Object.keys(errors);\n          keys.forEach(function (val, i) {\n            $('<small class=\"text-danger\" data-type=\"error\" data-name=\"' + val + '\">' + errors[val] + '</small>').insertAfter('#addMemberForm [name=\"' + val + '\"]');\n          });\n        }\n\n        if (xhr.responseJSON && xhr.responseJSON.message) {\n          alertify.set('notifier', 'position', 'top-right');\n          alertify.notify(xhr.responseJSON.message.text, xhr.responseJSON.message.type);\n        }\n      },\n      success: function success(data, status, xhr) {\n        Swal.fire({\n          icon: 'success',\n          title: 'Success!',\n          text: 'Data berhasil disimpan'\n        }).then(function (result) {\n          window.location.reload();\n        });\n      },\n      complete: function complete(xhr, status) {\n        $this.find('[type=\"submit\"]').prop('disabled', false);\n\n        if (xhr.responseJSON && xhr.responseJSON.csrf) {\n          setCSRFToken(xhr.responseJSON.csrf);\n        } else {\n          Swal.fire({\n            icon: 'error',\n            title: 'Oops...',\n            text: 'Something went wrong!'\n          }).then(function (result) {\n            window.location.reload();\n          });\n        }\n      }\n    });\n  }\n});\n$('#editMemberForm').submit(function (e) {\n  e.preventDefault();\n  var $this = $(this);\n  $this.find('[type=\"submit\"]').prop('disabled', true);\n  $('#editMemberForm [data-type=\"error\"]').remove();\n  var formData = new FormData(this);\n  var $imgTag = $('#userImagePreview img');\n\n  if ($imgTag.data('upload') && !$imgTag.data('delete')) {\n    var imgSrc = $imgTag.attr('src');\n    var base64Image = imgSrc.replace(/^data:image\\/jpeg;base64,/, \"\");\n    var blobImage = base64toBlob(base64Image);\n    formData.append('user_image', blobImage, $imgTag.data('filename'));\n  }\n\n  if (!$imgTag.data('upload') && $imgTag.data('delete')) {\n    formData.append('delete_image', true);\n  }\n\n  $.ajax({\n    data: formData,\n    type: 'POST',\n    contentType: false,\n    processData: false,\n    dataType: 'json',\n    headers: {\n      'X-Requested-With': 'XMLHttpRequest'\n    },\n    error: function error(xhr, status, _error17) {\n      if (xhr.responseJSON && xhr.responseJSON.errors) {\n        var errors = xhr.responseJSON.errors;\n        var keys = Object.keys(errors);\n        keys.forEach(function (val, i) {\n          $('<small class=\"text-danger\" data-type=\"error\" data-name=\"' + val + '\">' + errors[val] + '</small>').insertAfter('#editMemberForm [name=\"' + val + '\"]');\n        });\n      }\n\n      if (xhr.responseJSON && xhr.responseJSON.message) {\n        alertify.set('notifier', 'position', 'top-right');\n        alertify.notify(xhr.responseJSON.message.text, xhr.responseJSON.message.type);\n      }\n    },\n    success: function success(data, status, xhr) {\n      Swal.fire({\n        icon: 'success',\n        title: 'Success!',\n        text: 'Data berhasil disimpan'\n      }).then(function (result) {\n        window.location.reload();\n      });\n    },\n    complete: function complete(xhr, status) {\n      $this.find('[type=\"submit\"]').prop('disabled', false);\n\n      if (xhr.responseJSON && xhr.responseJSON.csrf) {\n        setCSRFToken(xhr.responseJSON.csrf);\n      } else {\n        Swal.fire({\n          icon: 'error',\n          title: 'Oops...',\n          text: 'Something went wrong!'\n        }).then(function (result) {\n          window.location.reload();\n        });\n      }\n    }\n  });\n});\n\nfunction deleteSerial(e) {\n  e.preventDefault();\n  var $this = $(this);\n  Swal.fire({\n    title: \"Hapus data ini?\",\n    text: \"Data akan dihapus selamanya!\",\n    icon: 'warning',\n    showCancelButton: true,\n    confirmButtonText: 'Ya, Hapus!',\n    cancelButtonText: 'Batalkan',\n    customClass: {\n      confirmButton: 'btn btn-danger mr-2',\n      cancelButton: 'btn btn-secondary ml-2'\n    },\n    buttonsStyling: false\n  }).then(function (result) {\n    if (result.isConfirmed) {\n      $.ajax({\n        url: $this.attr('href'),\n        method: 'POST',\n        dataType: 'json',\n        headers: {\n          'X-CSRF-TOKEN': getCSRFToken(),\n          'X-Requested-With': 'XMLHttpRequest'\n        },\n        error: function error(xhr, status, _error18) {\n          if (xhr.responseJSON && xhr.responseJSON.message) {\n            alertify.set('notifier', 'position', 'top-right');\n            alertify.notify(xhr.responseJSON.message.text, xhr.responseJSON.message.type);\n          }\n        },\n        success: function success(data, status, xhr) {\n          Swal.fire({\n            icon: 'success',\n            title: 'Success!',\n            text: 'Data berhasil dihapus'\n          });\n        },\n        complete: function complete(xhr, status) {\n          if (xhr.responseJSON && xhr.responseJSON.csrf) {\n            setCSRFToken(xhr.responseJSON.csrf);\n            reDrawDataTables();\n          } else {\n            Swal.fire({\n              icon: 'error',\n              title: 'Oops...',\n              text: 'Something went wrong!'\n            }).then(function (result) {\n              window.location.reload();\n            });\n          }\n        }\n      });\n    }\n  });\n}\n\nfunction transferSerial(e) {\n  e.preventDefault();\n  var $this = $(this);\n  $('#selectMemberModal [name=\"url\"]').val($this.attr('href'));\n  $('#selectMemberModal [name=\"user\"]').val($this.data('user'));\n  $('#selectMemberModal').modal('show');\n  $('#dtSelectMember').DataTable().draw();\n}\n\nvar selectedStockist = null;\n\nfunction resetSelectedStockist() {\n  $('#dtSelectStockist tr').each(function (i) {\n    $(this).find('.dt-select-option').removeClass('selected');\n  });\n}\n\nfunction setSelectedStockist() {\n  if (selectedStockist) {\n    $('#dtSelectStockist tr').each(function (i) {\n      var $dtSelectOption = $(this).find('.dt-select-option');\n      var stockistID = $dtSelectOption.data('id');\n      var selectedID = $(selectedStockist).data('id');\n\n      if (stockistID == selectedID) {\n        $dtSelectOption.addClass('selected');\n      }\n    });\n  }\n}\n\nfunction selectStockist(e) {\n  resetSelectedStockist();\n\n  if (selectedStockist) {\n    if ($(selectedStockist).data('id') === $(this).data('id')) {\n      selectedStockist = null;\n      $('[data-toggle=\"select-stockist\"]').prop('disabled', true);\n    } else {\n      selectedStockist = this;\n      $('[data-toggle=\"select-stockist\"]').prop('disabled', false);\n      $(this).addClass('selected');\n    }\n  } else {\n    selectedStockist = this;\n    $('[data-toggle=\"select-stockist\"]').prop('disabled', false);\n    $(this).addClass('selected');\n  }\n}\n\nif ($('#dtSelectStockist').length) {\n  var dtSelectStockist = $('#dtSelectStockist').DataTable({\n    processing: true,\n    serverSide: true,\n    ajax: baseURL + \"/data/dt-select-stockist\",\n    columns: [{\n      data: \"name\"\n    }],\n    language: dtLanguage,\n    responsive: true,\n    info: false,\n    paging: false,\n    lengthChange: false,\n    initComplete: function initComplete(setting, json) {\n      redesignDatatables();\n      $('#dtSelectStockist_filter').parent().removeClass('col-md-6');\n    },\n    drawCallback: function drawCallback(setting) {\n      setSelectedStockist();\n    }\n  });\n  $('#dtSelectStockist tbody').on('click', '[data-toggle=\"dt-select\"]', selectStockist);\n}\n\n$('[data-toggle=\"select-stockist\"]').click(function (e) {\n  $('#selectedStockist').html(selectedStockist);\n  $('#addSerialForm [name=\"stockist_id\"]').val($(selectedStockist).data('id'));\n  $('#selectStockistModal').modal('hide');\n});\n$('#addSerialForm').submit(function (e) {\n  e.preventDefault();\n  var $this = $(this);\n  $this.find('[type=\"submit\"]').prop('disabled', true);\n  $('#editMemberForm [data-type=\"error\"]').remove();\n  var stockistID = $(this).find('[name=\"stockist_id\"]').val();\n\n  if (!stockistID) {\n    $this.find('[type=\"submit\"]').prop('disabled', false);\n    $('<small class=\"text-danger\" data-type=\"error\" data-name=\"stockist_id\">Pilih stockist terlebih dahulu</small>').insertAfter('#addSerialForm [name=\"' + val + '\"]');\n  } else {\n    var formData = new FormData(this);\n    $.ajax({\n      data: formData,\n      type: 'POST',\n      contentType: false,\n      processData: false,\n      dataType: 'json',\n      headers: {\n        'X-Requested-With': 'XMLHttpRequest'\n      },\n      error: function error(xhr, status, _error19) {\n        if (xhr.responseJSON && xhr.responseJSON.errors) {\n          var errors = xhr.responseJSON.errors;\n          var keys = Object.keys(errors);\n          keys.forEach(function (val, i) {\n            $('<small class=\"text-danger\" data-type=\"error\" data-name=\"' + val + '\">' + errors[val] + '</small>').insertAfter('#addSerialForm [name=\"' + val + '\"]');\n          });\n        }\n\n        if (xhr.responseJSON && xhr.responseJSON.message) {\n          alertify.set('notifier', 'position', 'top-right');\n          alertify.notify(xhr.responseJSON.message.text, xhr.responseJSON.message.type);\n        }\n      },\n      success: function success(data, status, xhr) {\n        Swal.fire({\n          icon: 'info',\n          title: 'Tambah Serial',\n          html: '<div class=\"row\"><div class=\"col text-center\"><p>Sukses:</p><p class=\"font-weight-bold text-success\">' + data.success + '</p></div><div class=\"col text-center\"><p>Error:</p><p class=\"font-weight-bold text-danger\">' + data.error + '</p></div></div>'\n        });\n      },\n      complete: function complete(xhr, status) {\n        $this.find('[type=\"submit\"]').prop('disabled', false);\n\n        if (xhr.responseJSON && xhr.responseJSON.csrf) {\n          setCSRFToken(xhr.responseJSON.csrf);\n        } else {\n          Swal.fire({\n            icon: 'error',\n            title: 'Oops...',\n            text: 'Something went wrong!'\n          }).then(function (result) {\n            window.location.reload();\n          });\n        }\n      }\n    });\n  }\n});\n$('[data-toggle=\"logout\"]').click(function (e) {\n  e.preventDefault();\n  var $this = $(this);\n  $.ajax({\n    url: $this.attr('href'),\n    method: 'POST',\n    dataType: 'json',\n    headers: {\n      'X-CSRF-TOKEN': getCSRFToken(),\n      'X-Requested-With': 'XMLHttpRequest'\n    },\n    complete: function complete(xhr, status) {\n      window.location.reload();\n    }\n  });\n});\nvar selectedSerial = null;\n\nfunction resetSelectedSerial() {\n  $('#dtSelectSerial tr').each(function (i) {\n    $(this).find('.dt-select-option').removeClass('selected');\n  });\n}\n\nfunction setSelectedSerial() {\n  if (selectedSerial) {\n    $('#dtSelectSerial tr').each(function (i) {\n      var $dtSelectOption = $(this).find('.dt-select-option');\n      var serialID = $dtSelectOption.data('id');\n      var selectedID = $(selectedSerial).data('id');\n\n      if (serialID == selectedID) {\n        $dtSelectOption.addClass('selected');\n      }\n    });\n  }\n}\n\nfunction selectSerial(e) {\n  resetSelectedSerial();\n\n  if (selectedSerial) {\n    if ($(selectedSerial).data('id') === $(this).data('id')) {\n      selectedSerial = null;\n      $('[data-toggle=\"select-serial\"]').prop('disabled', true);\n      $('[data-toggle=\"select-prospect-serial\"]').prop('disabled', true);\n    } else {\n      selectedSerial = this;\n      $('[data-toggle=\"select-serial\"]').prop('disabled', false);\n      $('[data-toggle=\"select-prospect-serial\"]').prop('disabled', false);\n      $(this).addClass('selected');\n    }\n  } else {\n    selectedSerial = this;\n    $('[data-toggle=\"select-serial\"]').prop('disabled', false);\n    $('[data-toggle=\"select-prospect-serial\"]').prop('disabled', false);\n    $(this).addClass('selected');\n  }\n}\n\nif ($('#dtSelectSerial').length) {\n  var dtSelectSerial = $('#dtSelectSerial').DataTable({\n    processing: true,\n    serverSide: true,\n    ajax: {\n      url: baseURL + \"/data/dt-select-serial\",\n      data: function data(d) {\n        d.upline = $('#addMemberForm [name=\"upline\"]').val();\n        return d;\n      }\n    },\n    columns: [{\n      data: \"name\"\n    }],\n    language: dtLanguage,\n    responsive: true,\n    info: false,\n    paging: false,\n    lengthChange: false,\n    initComplete: function initComplete(setting, json) {\n      redesignDatatables();\n      $('#dtSelectSerial_filter').parent().removeClass('col-md-6');\n    },\n    drawCallback: function drawCallback(setting) {\n      setSelectedSerial();\n    }\n  });\n  $('#dtSelectSerial tbody').on('click', '[data-toggle=\"dt-select\"]', selectSerial);\n}\n\n$('[data-toggle=\"select-serial\"]').click(function (e) {\n  var $this = $(this);\n  var $selected = $(selectedSerial);\n  $('#addMemberForm [name=\"serial\"]').val($selected.data('id'));\n  $('#addMemberForm [data-input=\"serial\"]').html($selected.find('[data-name=\"serial\"]').data('value'));\n  $('#addMemberForm [data-input=\"pin\"]').html($selected.find('[data-name=\"pin\"]').data('value'));\n\n  if (!$this.data('autofill')) {\n    $('#addMemberForm [name=\"sponsor\"]').val($selected.find('[data-name=\"sponsor\"]').data('value'));\n    $('#addMemberForm [data-input=\"upline\"]').attr('data-sponsor', $selected.find('[data-name=\"sponsor\"]').data('value'));\n\n    if ($selected.find('[data-name=\"sponsor\"]').data('show')) {\n      $('#addMemberForm [data-input=\"sponsor\"]').html($selected.find('[data-name=\"sponsor\"]').html());\n      $('#addMemberForm [name=\"position\"]').prop('disabled', false);\n      $('#addMemberForm [data-toggle=\"open-member-tree\"]').html('Pilih Upline').prop('disabled', false);\n    } else {\n      $('#addMemberForm [data-input=\"sponsor\"]').html('Member Top Line');\n      $('#addMemberForm [name=\"position\"]').prop('disabled', true);\n      $('#addMemberForm [data-toggle=\"open-member-tree\"]').html('Member Top Line').prop('disabled', true);\n    }\n  }\n\n  if (loggedInUser.role == 'superadmin' || loggedInUser.role == 'admin') {\n    $('#addMemberForm [name=\"sponsor\"]').val($selected.find('[data-name=\"sponsor\"]').data('value'));\n\n    if ($selected.find('[data-name=\"sponsor\"]').data('show')) {\n      $('#addMemberForm [data-input=\"sponsor\"]').html($selected.find('[data-name=\"sponsor\"]').html());\n    } else {\n      $('#addMemberForm [data-input=\"sponsor\"]').html('Member Top Line');\n    }\n  }\n\n  $('#selectSerialModal').modal('hide');\n});\n\nif ($('#treeSelectUpline').length) {\n  $('#treeSelectUpline').jstree({\n    'core': {\n      'data': [],\n      \"multiple\": false\n    },\n    \"plugins\": ['themes'],\n    \"themes\": {\n      \"theme\": \"classic\",\n      \"dots\": true,\n      \"icons\": true\n    }\n  });\n}\n\nif ($('#treeSelectSponsor').length) {\n  $('#treeSelectSponsor').jstree({\n    'core': {\n      'data': [],\n      \"multiple\": false\n    },\n    \"plugins\": ['themes'],\n    \"themes\": {\n      \"theme\": \"classic\",\n      \"dots\": true,\n      \"icons\": true\n    }\n  });\n}\n\n$('#addMemberForm [data-toggle=\"open-member-tree\"]').click(function (e) {\n  var $self = $(this);\n  var serialID = $('#addMemberForm [name=\"serial\"]').val();\n\n  if (!serialID) {\n    Swal.fire({\n      icon: 'error',\n      title: 'Oops...',\n      text: 'Silahkan pilih Serial & PIN terlebih dahulu!'\n    }).then(function (result) {\n      $('#addMemberForm [data-toggle=\"open-serial-modal\"]').trigger('click');\n    });\n  } else {\n    var $selected = $(selectedSerial);\n    var serial = $selected.find('[data-name=\"serial\"]').data('value');\n    var sponsor = $selected.find('[data-name=\"sponsor\"]').data('value');\n    var data = {\n      serial: serial,\n      sponsor: sponsor\n    };\n    $.ajax({\n      url: baseURL + \"/data/get-downline-tree?\" + objToURLParam(data),\n      method: 'GET',\n      dataType: 'json',\n      headers: {\n        'X-Requested-With': 'XMLHttpRequest'\n      },\n      error: function error(xhr, status, _error20) {\n        if (xhr.responseJSON && xhr.responseJSON.message) {\n          alertify.set('notifier', 'position', 'top-right');\n          alertify.notify(xhr.responseJSON.message.text, xhr.responseJSON.message.type);\n        }\n      },\n      success: function success(data, status, xhr) {\n        if (!data.id) {\n          $self.html('Member Top Line');\n        } else {\n          $('#treeSelectUpline').jstree(true).settings.core.data = data;\n          $('#treeSelectUpline').jstree(true).refresh();\n          $('#selectUplineModal').modal('show');\n        }\n      }\n    });\n  }\n});\n$('#addMemberForm [data-toggle=\"open-sponsor-tree\"]').click(function (e) {\n  var $self = $(this);\n  var uplineID = $('#addMemberForm [name=\"upline\"]').val();\n  $.ajax({\n    url: baseURL + \"/data/get-sponsor-tree?upline=\" + uplineID,\n    method: 'GET',\n    dataType: 'json',\n    headers: {\n      'X-Requested-With': 'XMLHttpRequest'\n    },\n    error: function error(xhr, status, _error21) {\n      if (xhr.responseJSON && xhr.responseJSON.message) {\n        alertify.set('notifier', 'position', 'top-right');\n        alertify.notify(xhr.responseJSON.message.text, xhr.responseJSON.message.type);\n      }\n    },\n    success: function success(data, status, xhr) {\n      if (!data.length) {\n        $self.html('Member Top Line');\n      } else {\n        $('#treeSelectSponsor').jstree(true).settings.core.data = data;\n        $('#treeSelectSponsor').jstree(true).refresh();\n        $('#selectSponsorModal').modal('show');\n      }\n    }\n  });\n});\n$('#addMemberForm [data-toggle=\"open-serial-modal\"]').click(function (e) {\n  $('#dtSelectSerial').DataTable().draw();\n  $('#selectSerialModal').modal('show');\n});\nvar selectedMember = null;\n\nfunction resetSelectedMember() {\n  $('#dtSelectMember tr').each(function (i) {\n    $(this).find('.dt-select-option').removeClass('selected');\n  });\n}\n\nfunction setSelectedMember() {\n  if (selectedMember) {\n    $('#dtSelectMember tr').each(function (i) {\n      var $dtSelectOption = $(this).find('.dt-select-option');\n      var memberID = $dtSelectOption.data('id');\n      var selectedID = $(selectedMember).data('id');\n\n      if (memberID == selectedID) {\n        $dtSelectOption.addClass('selected');\n      }\n    });\n  }\n}\n\nfunction selectMember(e) {\n  resetSelectedMember();\n\n  if (selectedMember) {\n    if ($(selectedMember).data('id') === $(this).data('id')) {\n      selectedMember = null;\n      $('[data-button=\"select-member\"]').prop('disabled', true);\n    } else {\n      selectedMember = this;\n      $('[data-button=\"select-member\"]').prop('disabled', false);\n      $(this).addClass('selected');\n    }\n  } else {\n    selectedMember = this;\n    $('[data-button=\"select-member\"]').prop('disabled', false);\n    $(this).addClass('selected');\n  }\n}\n\nif ($('#dtSelectMember').length) {\n  var data = function data(d) {\n    if ($('#selectMemberModal [name=\"user\"]').length) {\n      d.user = $('#selectMemberModal [name=\"user\"]').val();\n    }\n\n    if ($('#selectMemberModal [name=\"stockist\"]').length) {\n      d.stockist = $('#selectMemberModal [name=\"stockist\"]').val();\n    }\n\n    return d;\n  };\n\n  var dtSelectMember = $('#dtSelectMember').DataTable({\n    processing: true,\n    serverSide: true,\n    ajax: {\n      url: baseURL + \"/data/dt-select-member\",\n      data: data\n    },\n    columns: [{\n      data: \"name\"\n    }],\n    language: dtLanguage,\n    responsive: true,\n    info: false,\n    paging: false,\n    lengthChange: false,\n    initComplete: function initComplete(setting, json) {\n      redesignDatatables();\n      $('#dtSelectMember_filter').parent().removeClass('col-md-6');\n    },\n    drawCallback: function drawCallback(setting) {\n      setSelectedMember();\n    }\n  });\n  $('#dtSelectMember tbody').on('click', '[data-toggle=\"dt-select\"]', selectMember);\n}\n\n$('[data-toggle=\"set-as-stockist\"]').click(function (e) {\n  var memberID = $(selectedMember).data('id');\n  var formData = new FormData();\n  formData.append('csrf_token', getCSRFToken());\n  formData.append('member', memberID);\n  $.ajax({\n    url: baseURL + \"/stockist/set-as-stockist\",\n    data: formData,\n    type: 'POST',\n    contentType: false,\n    processData: false,\n    dataType: 'json',\n    headers: {\n      'X-Requested-With': 'XMLHttpRequest'\n    },\n    error: function error(xhr, status, _error22) {\n      if (xhr.responseJSON && xhr.responseJSON.message) {\n        alertify.set('notifier', 'position', 'top-right');\n        alertify.notify(xhr.responseJSON.message.text, xhr.responseJSON.message.type);\n      }\n    },\n    success: function success(data, status, xhr) {\n      Swal.fire({\n        icon: 'success',\n        title: 'Success!',\n        text: 'Data berhasil disimpan'\n      });\n      selectedMember = null;\n      $('#dtSelectMember').DataTable().draw();\n    },\n    complete: function complete(xhr, status) {\n      $('#selectMemberModal').modal('hide');\n\n      if (xhr.responseJSON && xhr.responseJSON.csrf) {\n        setCSRFToken(xhr.responseJSON.csrf);\n        reDrawDataTables();\n      } else {\n        Swal.fire({\n          icon: 'error',\n          title: 'Oops...',\n          text: 'Something went wrong!'\n        }).then(function (result) {\n          window.location.reload();\n        });\n      }\n    }\n  });\n});\n$('[data-toggle=\"transfer-serial\"]').click(function (e) {\n  var url = $('#selectMemberModal [name=\"url\"]').val();\n  var memberID = $(selectedMember).data('id');\n  var formData = new FormData();\n  formData.append('csrf_token', getCSRFToken());\n  formData.append('member', memberID);\n  $.ajax({\n    url: url,\n    data: formData,\n    type: 'POST',\n    contentType: false,\n    processData: false,\n    dataType: 'json',\n    headers: {\n      'X-Requested-With': 'XMLHttpRequest'\n    },\n    error: function error(xhr, status, _error23) {\n      if (xhr.responseJSON && xhr.responseJSON.message) {\n        alertify.set('notifier', 'position', 'top-right');\n        alertify.notify(xhr.responseJSON.message.text, xhr.responseJSON.message.type);\n      }\n    },\n    success: function success(data, status, xhr) {\n      Swal.fire({\n        icon: 'success',\n        title: 'Success!',\n        text: 'Data berhasil disimpan'\n      });\n      selectedMember = null;\n      $('#dtSerial').DataTable().draw();\n    },\n    complete: function complete(xhr, status) {\n      $('#selectMemberModal').modal('hide');\n\n      if (xhr.responseJSON && xhr.responseJSON.csrf) {\n        setCSRFToken(xhr.responseJSON.csrf);\n        reDrawDataTables();\n      } else {\n        Swal.fire({\n          icon: 'error',\n          title: 'Oops...',\n          text: 'Something went wrong!'\n        }).then(function (result) {\n          window.location.reload();\n        });\n      }\n    }\n  });\n});\n$('#selectSponsorModal [data-toggle=\"select-sponsor\"]').click(function (e) {\n  var ids = $('#treeSelectSponsor').jstree(\"get_selected\");\n  var data = $('#treeSelectSponsor').jstree(true).get_json('#', {\n    flat: true\n  });\n\n  if (!ids.length) {\n    Swal.fire({\n      icon: 'error',\n      title: 'Oops...',\n      text: 'Silahkan pilih salah satu sponsor!'\n    });\n  } else {\n    var id = ids[0];\n    var _data = null;\n    data.map(function (d, i) {\n      if (d.id == id) {\n        _data = d;\n      }\n    });\n    $('#addMemberForm [name=\"sponsor\"]').val(id);\n    $('#addMemberForm [data-input=\"sponsor\"]').html('<div class=\"row\"><div class=\"col\" style=\"max-width: 50px;\"><img src=\"' + _data.data.thumb + '\" class=\"bg-secondary rounded-circle border\"></div><div class=\"col\"><div>' + _data.text + '</div><div class=\"text-secondary\" style=\"font-size: 80%;\">' + _data.data.username + '</div></div></div>');\n    $('#selectSponsorModal').modal('hide');\n  }\n});\n\nif ($('#sponsorTree').length) {\n  $('#sponsorTree').jstree({\n    'core': {\n      'data': []\n    },\n    \"plugins\": ['themes'],\n    \"themes\": {\n      \"theme\": \"classic\",\n      \"dots\": true,\n      \"icons\": true\n    }\n  });\n  $.ajax({\n    url: baseURL + \"/sponsor-tree/get-sponsors-tree\",\n    method: 'GET',\n    dataType: 'json',\n    headers: {\n      'X-Requested-With': 'XMLHttpRequest'\n    },\n    error: function error(xhr, status, _error24) {\n      if (xhr.responseJSON && xhr.responseJSON.message) {\n        alertify.set('notifier', 'position', 'top-right');\n        alertify.notify(xhr.responseJSON.message.text, xhr.responseJSON.message.type);\n      }\n    },\n    success: function success(data, status, xhr) {\n      if (data) {\n        $('#sponsorTree').jstree(true).settings.core.data = data;\n        $('#sponsorTree').jstree(true).refresh();\n      }\n    }\n  });\n}\n\n$('#selectUplineModal [data-toggle=\"select-upline\"]').click(function (e) {\n  var ids = $('#treeSelectUpline').jstree(\"get_selected\");\n  var data = $('#treeSelectUpline').jstree(true).get_json('#', {\n    flat: true\n  });\n\n  if (!ids.length) {\n    Swal.fire({\n      icon: 'error',\n      title: 'Oops...',\n      text: 'Silahkan pilih salah satu upline!'\n    });\n  } else {\n    var id = ids[0];\n    var _data = null;\n    data.map(function (d, i) {\n      if (d.id == id) {\n        _data = d;\n      }\n    });\n    var optSelected = false;\n    $('#addMemberForm [name=\"position\"]').children().map(function (i) {\n      var $this = $(this);\n\n      if (_data.data.position.includes($this.val()) == true || !$this.val()) {\n        $this.prop('disabled', true);\n        $this.prop('selected', false);\n      } else {\n        $this.prop('disabled', false);\n        $this.prop('selected', !optSelected);\n        optSelected = true;\n      }\n    });\n    $('#addMemberForm [name=\"upline\"]').val(id);\n    $('#addMemberForm [data-input=\"upline\"]').html('<div class=\"row\"><div class=\"col\" style=\"max-width: 50px;\"><img src=\"' + _data.data.user_image.thumb + '\" class=\"bg-secondary rounded-circle border\"></div><div class=\"col\"><div>' + _data.text + '</div><div class=\"text-secondary\" style=\"font-size: 80%;\">' + _data.data.username + '</div></div></div>');\n    $('#selectUplineModal').modal('hide');\n  }\n});\n\nif ($('#downlineTree').length) {\n  $('#downlineTree').jstree({\n    'core': {\n      'data': []\n    },\n    \"plugins\": ['themes'],\n    \"themes\": {\n      \"theme\": \"classic\",\n      \"dots\": true,\n      \"icons\": true\n    }\n  });\n  $.ajax({\n    url: baseURL + \"/downline-tree/get-downlines-tree\",\n    method: 'GET',\n    dataType: 'json',\n    headers: {\n      'X-Requested-With': 'XMLHttpRequest'\n    },\n    error: function error(xhr, status, _error25) {\n      if (xhr.responseJSON && xhr.responseJSON.message) {\n        alertify.set('notifier', 'position', 'top-right');\n        alertify.notify(xhr.responseJSON.message.text, xhr.responseJSON.message.type);\n      }\n    },\n    success: function success(data, status, xhr) {\n      if (data) {\n        $('#downlineTree').jstree(true).settings.core.data = data;\n        $('#downlineTree').jstree(true).refresh();\n      }\n    }\n  });\n}\n\n$('#downlineTree').on(\"select_node.jstree\", function (e, data) {\n  if (data.node.data && data.node.data.upline) {\n    var parent = data.instance.get_node(data.node.parent);\n    $('#addMemberForm [name=\"upline\"]').val(parent.original.id);\n    $('#addMemberForm [data-input=\"upline\"]').html('<div class=\"row\"><div class=\"col\" style=\"max-width: 50px;\"><img src=\"' + parent.original.icon + '\" class=\"bg-secondary rounded-circle border\"></div><div class=\"col\"><div>' + parent.original.text + '</div><div class=\"text-secondary\" style=\"font-size: 80%;\">' + parent.original.username + '</div></div></div>');\n    $('#addMemberForm [name=\"position\"]').val(data.node.data.position);\n    $('#addMemberForm [data-input=\"position\"]').html(data.node.data.position == 'left' ? 'KIRI' : data.node.data.position == 'right' ? 'KANAN' : '');\n    $('#addMemberModal').modal('show');\n  }\n});\n$('#containerDownlineTree').on('click', '[data-toggle=\"add-member-modal\"]', function (e) {\n  var $this = $(this);\n  $('#addMemberForm [name=\"upline\"]').val($this.data('upline'));\n  $('#addMemberForm [data-input=\"upline\"]').html('<div class=\"row\"><div class=\"col\" style=\"max-width: 50px;\"><img src=\"' + $this.data('img') + '\" class=\"bg-secondary rounded-circle border\"></div><div class=\"col\"><div>' + $this.data('name') + '</div><div class=\"text-secondary\" style=\"font-size: 80%;\">' + $this.data('username') + '</div></div></div>');\n  $('#addMemberForm [name=\"position\"]').val($this.data('position'));\n  $('#addMemberForm [data-input=\"position\"]').html($this.data('position') == 'left' ? 'KIRI' : $this.data('position') == 'right' ? 'KANAN' : '');\n  $('#addMemberModal').modal('show');\n});\n$('[data-toggle=\"downline-tree\"]').change(function (e) {\n  window.location.href = window.location.href.split('?')[0] + \"?member=\" + e.target.value;\n});\n$('.select-payment').select2({\n  theme: 'bootstrap4'\n});\n$('.select-province').select2({\n  ajax: {\n    url: baseURL + '/data/get-select-province',\n    dataType: 'json'\n  },\n  theme: 'bootstrap4'\n});\n$('.select-regency').select2({\n  ajax: {\n    url: baseURL + '/data/get-select-regency',\n    dataType: 'json'\n  },\n  theme: 'bootstrap4'\n});\n$('.select-district').select2({\n  ajax: {\n    url: baseURL + '/data/get-select-district',\n    dataType: 'json'\n  },\n  theme: 'bootstrap4'\n});\n$('.select-downline-tree').select2({\n  theme: 'bootstrap4'\n});\nvar selectedStockistMember = null;\n\nfunction resetSelectedStockistMember() {\n  $('#dtSelectStockistMember tr').each(function (i) {\n    $(this).find('.dt-select-option').removeClass('selected');\n  });\n}\n\nfunction setSelectedStockistMember() {\n  if (selectedStockistMember) {\n    $('#dtSelectStockistMember tr').each(function (i) {\n      var $dtSelectOption = $(this).find('.dt-select-option');\n      var memberID = $dtSelectOption.data('id');\n      var selectedID = $(selectedStockistMember).data('id');\n\n      if (memberID == selectedID) {\n        $dtSelectOption.addClass('selected');\n      }\n    });\n  }\n}\n\nfunction selectStockistMember(e) {\n  resetSelectedStockistMember();\n\n  if (selectedStockistMember) {\n    if ($(selectedStockistMember).data('id') === $(this).data('id')) {\n      selectedStockistMember = null;\n      $('[data-toggle=\"select-stockist-member\"]').prop('disabled', true);\n    } else {\n      selectedStockistMember = this;\n      $('[data-toggle=\"select-stockist-member\"]').prop('disabled', false);\n      $(this).addClass('selected');\n    }\n  } else {\n    selectedStockistMember = this;\n    $('[data-toggle=\"select-stockist-member\"]').prop('disabled', false);\n    $(this).addClass('selected');\n  }\n}\n\nif ($('#dtSelectStockistMember').length) {\n  var _data2 = function _data2(d) {\n    d.type = $('[data-toggle=\"select-stockist-member\"]').attr('data-type');\n\n    if ($('#transferSerialsForm [name=\"from\"]').val()) {\n      d.from = $('#transferSerialsForm [name=\"from\"]').val();\n    }\n\n    if ($('#transferSerialsForm [name=\"to\"]').val()) {\n      d.to = $('#transferSerialsForm [name=\"to\"]').val();\n    }\n\n    return d;\n  };\n\n  var dtSelectStockistMember = $('#dtSelectStockistMember').DataTable({\n    processing: true,\n    serverSide: true,\n    ajax: {\n      url: baseURL + \"/data/dt-select-stockist-member\",\n      data: _data2\n    },\n    columns: [{\n      data: \"name\"\n    }],\n    language: dtLanguage,\n    responsive: true,\n    info: false,\n    paging: false,\n    lengthChange: false,\n    initComplete: function initComplete(setting, json) {\n      redesignDatatables();\n      $('#dtSelectMember_filter').parent().removeClass('col-md-6');\n    },\n    drawCallback: function drawCallback(setting) {\n      setSelectedMember();\n    }\n  });\n  $('#dtSelectStockistMember tbody').on('click', '[data-toggle=\"dt-select\"]', selectStockistMember);\n}\n\n$('[data-toggle=\"select-from-modal\"]').click(function (e) {\n  $('[data-toggle=\"select-stockist-member\"]').attr('data-type', 'from');\n  $('#selectStockistMemberModal').modal('show');\n});\n$('[data-toggle=\"select-to-modal\"]').click(function (e) {\n  $('[data-toggle=\"select-stockist-member\"]').attr('data-type', 'to');\n  $('#selectStockistMemberModal').modal('show');\n});\n$('#selectStockistMemberModal').on('shown.bs.modal', function (e) {\n  $('#dtSelectStockistMember').DataTable().draw();\n});\n$('[data-toggle=\"select-stockist-member\"]').click(function (e) {\n  var $this = $(this);\n\n  if ($this.attr('data-type') == 'from') {\n    var max = $(selectedStockistMember).attr('data-max');\n    $('#transferSerialsForm [name=\"amount\"]').attr('max', max);\n\n    if ($('#transferSerialsForm [name=\"amount\"]').val() > max) {\n      $('#transferSerialsForm [name=\"amount\"]').val(max);\n    }\n\n    $('#transferSerialsForm [name=\"from\"]').val($(selectedStockistMember).attr('data-id'));\n    $('#selectedFrom').html(selectedStockistMember);\n  }\n\n  if ($this.attr('data-type') == 'to') {\n    $('#transferSerialsForm [name=\"to\"]').val($(selectedStockistMember).attr('data-id'));\n    $('#selectedTo').html(selectedStockistMember);\n  }\n\n  selectedStockistMember = null;\n  $('#selectStockistMemberModal').modal('hide');\n});\n$('#transferSerialsForm').submit(function (e) {\n  e.preventDefault();\n  var $this = $(this);\n  $this.find('[type=\"submit\"]').prop('disabled', true);\n  $('#transferSerialsForm [data-type=\"error\"]').remove();\n  var doSubmit = true;\n  $(this).find('input').each(function () {\n    if ($(this).prop('required') && !$(this).val()) {\n      $('<small class=\"text-danger\" data-type=\"error\" data-name=\"' + $(this).attr('name') + '\">Bidang ini diperlukan</small>').insertAfter('#transferSerialsForm [name=\"' + $(this).attr('name') + '\"]');\n      doSubmit = false;\n    }\n  });\n\n  if (doSubmit) {\n    var formData = new FormData(this);\n    $.ajax({\n      url: $(this).attr('action'),\n      data: formData,\n      type: 'POST',\n      contentType: false,\n      processData: false,\n      dataType: 'json',\n      headers: {\n        'X-Requested-With': 'XMLHttpRequest'\n      },\n      error: function error(xhr, status, _error26) {\n        if (xhr.responseJSON && xhr.responseJSON.errors) {\n          var errors = xhr.responseJSON.errors;\n          var keys = Object.keys(errors);\n          keys.forEach(function (val, i) {\n            $('<small class=\"text-danger\" data-type=\"error\" data-name=\"' + val + '\">' + errors[val] + '</small>').insertAfter('#addAdminForm [name=\"' + val + '\"]');\n          });\n        }\n\n        if (xhr.responseJSON && xhr.responseJSON.message) {\n          alertify.set('notifier', 'position', 'top-right');\n          alertify.notify(xhr.responseJSON.message.text, xhr.responseJSON.message.type);\n        }\n      },\n      success: function success(data, status, xhr) {\n        Swal.fire({\n          icon: 'info',\n          title: 'Transfer Serial',\n          html: '<div class=\"row\"><div class=\"col text-center\"><p>Sukses:</p><p class=\"font-weight-bold text-success\">' + data.success + '</p></div><div class=\"col text-center\"><p>Error:</p><p class=\"font-weight-bold text-danger\">' + data.error + '</p></div></div>'\n        }).then(function (result) {\n          window.location.reload();\n        });\n      },\n      complete: function complete(xhr, status) {\n        $this.find('[type=\"submit\"]').prop('disabled', false);\n\n        if (xhr.responseJSON && xhr.responseJSON.csrf) {\n          setCSRFToken(xhr.responseJSON.csrf);\n        } else {\n          Swal.fire({\n            icon: 'error',\n            title: 'Oops...',\n            text: 'Something went wrong!'\n          }).then(function (result) {\n            window.location.reload();\n          });\n        }\n      }\n    });\n  } else {\n    $this.find('[type=\"submit\"]').prop('disabled', false);\n  }\n});\n$('[data-toggle=\"login-as\"]').click(function (e) {\n  e.preventDefault();\n  var $this = $(this);\n  Swal.fire({\n    title: \"Login sebagai member ini?\",\n    // text: \"Data akan dihapus selamanya!\",\n    icon: 'warning',\n    showCancelButton: true,\n    confirmButtonText: 'Ya, lanjutkan!',\n    cancelButtonText: 'Batalkan',\n    customClass: {\n      confirmButton: 'btn btn-info mr-2',\n      cancelButton: 'btn btn-secondary ml-2'\n    },\n    buttonsStyling: false\n  }).then(function (result) {\n    if (result.isConfirmed) {\n      $.ajax({\n        url: $this.attr('href'),\n        method: 'POST',\n        dataType: 'json',\n        headers: {\n          'X-CSRF-TOKEN': getCSRFToken(),\n          'X-Requested-With': 'XMLHttpRequest'\n        },\n        success: function success(data, status, xhr) {\n          Swal.fire({\n            icon: 'success',\n            title: 'Success!',\n            text: 'Login berhasil',\n            timer: 3000,\n            showConfirmButton: false\n          }).then(function (result) {\n            window.location.href = baseURL + '/dashboard';\n          });\n        }\n      });\n    }\n  });\n});\n\nif ($('#dtLogsLogin').length) {\n  var dtLogsLogin = $('#dtLogsLogin').DataTable({\n    processing: true,\n    serverSide: true,\n    ajax: baseURL + \"/logs/dt-logs-login\",\n    columns: [{\n      data: \"date\"\n    }, {\n      data: \"username\"\n    }, {\n      data: \"user_agent\"\n    }, {\n      data: \"ip_address\"\n    }, {\n      data: \"status\"\n    }],\n    language: dtLanguage,\n    responsive: true,\n    initComplete: function initComplete(setting, json) {\n      redesignDatatables();\n    },\n    drawCallback: function drawCallback(settings) {},\n    order: [[0, 'desc']]\n  });\n}\n\nif ($('#dtLogsBonus').length) {\n  var dtLogsBonus = $('#dtLogsBonus').DataTable({\n    processing: true,\n    serverSide: true,\n    ajax: baseURL + \"/logs/dt-logs-bonus\",\n    columns: [{\n      data: \"date\"\n    }, {\n      data: \"name\"\n    }, {\n      data: \"from_name\"\n    }, {\n      data: \"type\"\n    }, {\n      data: \"amount\"\n    }],\n    language: dtLanguage,\n    responsive: true,\n    initComplete: function initComplete(setting, json) {\n      redesignDatatables();\n    },\n    drawCallback: function drawCallback(settings) {},\n    order: [[0, 'desc']]\n  });\n}\n\nif ($('#dtLogsSerial').length) {\n  var dtLogsSerial = $('#dtLogsSerial').DataTable({\n    processing: true,\n    serverSide: true,\n    ajax: baseURL + \"/logs/dt-logs-serial\",\n    columns: [{\n      data: \"date\"\n    }, {\n      data: \"type\"\n    }, {\n      data: \"serial\"\n    }, {\n      data: \"from_name\"\n    }, {\n      data: \"to_name\"\n    }, {\n      data: \"status\"\n    }],\n    language: dtLanguage,\n    responsive: true,\n    initComplete: function initComplete(setting, json) {\n      redesignDatatables();\n    },\n    drawCallback: function drawCallback(settings) {},\n    order: [[0, 'desc']]\n  });\n}\n\nfunction resendMessage(e) {\n  e.preventDefault();\n  var $this = $(this);\n  $this.addClass('disabled');\n  $.ajax({\n    url: $this.attr('href'),\n    type: 'POST',\n    dataType: 'json',\n    headers: {\n      'X-CSRF-TOKEN': getCSRFToken(),\n      'X-Requested-With': 'XMLHttpRequest'\n    },\n    error: function error(xhr, status, _error27) {\n      if (xhr.responseJSON && xhr.responseJSON.message) {\n        alertify.set('notifier', 'position', 'top-right');\n        alertify.notify(xhr.responseJSON.message.text, xhr.responseJSON.message.type);\n      }\n    },\n    success: function success(data, status, xhr) {\n      Swal.fire({\n        icon: 'success',\n        title: 'Success!',\n        text: 'Pesan akan dikirim ulang'\n      }).then(function (result) {\n        $('#dtLogsMessage').DataTable().draw();\n      });\n    },\n    complete: function complete(xhr, status) {\n      $this.removeClass('disabled');\n\n      if (xhr.responseJSON && xhr.responseJSON.csrf) {\n        setCSRFToken(xhr.responseJSON.csrf);\n      } else {\n        Swal.fire({\n          icon: 'error',\n          title: 'Oops...',\n          text: 'Something went wrong!'\n        }).then(function (result) {\n          window.location.reload();\n        });\n      }\n    }\n  });\n}\n\nif ($('#dtLogsMessage').length) {\n  var dtLogsMessage = $('#dtLogsMessage').DataTable({\n    processing: true,\n    serverSide: true,\n    ajax: baseURL + \"/logs/dt-logs-message\",\n    columns: [{\n      data: \"date\"\n    }, {\n      data: \"service\"\n    }, {\n      data: \"receiver_name\"\n    }, {\n      data: \"receiver\"\n    }, {\n      data: \"status\"\n    }, {\n      data: \"message\"\n    }, {\n      data: \"description\"\n    }, {\n      data: \"action\",\n      orderable: false\n    }],\n    language: dtLanguage,\n    responsive: true,\n    initComplete: function initComplete(setting, json) {\n      redesignDatatables();\n    },\n    drawCallback: function drawCallback(settings) {},\n    order: [[0, 'desc']]\n  });\n  $('#dtLogsMessage tbody').on('click', '[data-toggle=\"resend\"]', resendMessage);\n}\n\n$('#forgotPasswordForm [name=\"type\"]').change(function (e) {\n  var type = e.target.value;\n\n  if (type == 'wa') {\n    $('[data-name=\"wa\"]').removeClass('d-none');\n    $('[data-name=\"wa\"]').prop('required', true);\n    $('[data-name=\"email\"]').addClass('d-none');\n    $('[data-name=\"email\"]').prop('required', false);\n  }\n\n  if (type == 'email') {\n    $('[data-name=\"email\"]').removeClass('d-none');\n    $('[data-name=\"email\"]').prop('required', true);\n    $('[data-name=\"wa\"]').addClass('d-none');\n    $('[data-name=\"wa\"]').prop('required', false);\n  }\n});\nvar messageType = $('#forgotPasswordForm [name=\"type\"]:checked').val();\n\nif (messageType == 'wa') {\n  $('[data-name=\"wa\"]').removeClass('d-none');\n  $('[data-name=\"wa\"]').prop('required', true);\n  $('[data-name=\"email\"]').addClass('d-none');\n  $('[data-name=\"email\"]').prop('required', false);\n}\n\nif (messageType == 'email') {\n  $('[data-name=\"email\"]').removeClass('d-none');\n  $('[data-name=\"email\"]').prop('required', true);\n  $('[data-name=\"wa\"]').addClass('d-none');\n  $('[data-name=\"wa\"]').prop('required', false);\n}\n\n$('.datepicker').datepicker({\n  uiLibrary: 'bootstrap4',\n  format: 'yyyy-mm-dd'\n});\n$('#userImageModal [data-toggle=\"upload-image\"]').on('click', function (e) {\n  var $this = $(this);\n  userImage.result({\n    type: 'blob',\n    format: 'jpeg',\n    size: {\n      width: 320,\n      height: 320\n    }\n  }).then(function (blob) {\n    var formData = new FormData();\n    formData.append('user_image', blob, $('#inputUserImage')[0].files[0].name);\n    $.ajax({\n      url: baseURL + \"/profile/\" + $this.attr('data-username') + \"/upload-image\",\n      data: formData,\n      type: 'POST',\n      contentType: false,\n      processData: false,\n      dataType: 'json',\n      headers: {\n        'X-CSRF-TOKEN': getCSRFToken(),\n        'X-Requested-With': 'XMLHttpRequest'\n      },\n      error: function error(xhr, status, _error28) {\n        if (xhr.responseJSON && xhr.responseJSON.message) {\n          alertify.set('notifier', 'position', 'top-right');\n          alertify.notify(xhr.responseJSON.message.text, xhr.responseJSON.message.type);\n        }\n      },\n      success: function success(data, status, xhr) {\n        Swal.fire({\n          icon: 'success',\n          title: 'Success!',\n          text: 'Data berhasil disimpan'\n        }).then(function (result) {\n          window.location.reload();\n        });\n      },\n      complete: function complete(xhr, status) {\n        if (xhr.responseJSON && xhr.responseJSON.csrf) {\n          setCSRFToken(xhr.responseJSON.csrf);\n        } else {\n          Swal.fire({\n            icon: 'error',\n            title: 'Oops...',\n            text: 'Something went wrong!'\n          }).then(function (result) {\n            window.location.reload();\n          });\n        }\n      }\n    });\n    $('#userImageModal').modal('hide');\n  });\n});\n$('[data-toggle=\"delete-profile-image\"]').click(function (e) {\n  e.preventDefault();\n  var $this = $(this);\n  Swal.fire({\n    title: \"Hapus gambar ini?\",\n    text: \"Gambar akan dihapus selamanya!\",\n    icon: 'warning',\n    showCancelButton: true,\n    confirmButtonText: 'Ya, Hapus!',\n    cancelButtonText: 'Batalkan',\n    customClass: {\n      confirmButton: 'btn btn-danger mr-2',\n      cancelButton: 'btn btn-secondary ml-2'\n    },\n    buttonsStyling: false\n  }).then(function (result) {\n    if (result.isConfirmed) {\n      $.ajax({\n        url: $this.attr('href'),\n        method: 'POST',\n        dataType: 'json',\n        headers: {\n          'X-CSRF-TOKEN': getCSRFToken(),\n          'X-Requested-With': 'XMLHttpRequest'\n        },\n        error: function error(xhr, status, _error29) {\n          if (xhr.responseJSON && xhr.responseJSON.message) {\n            alertify.set('notifier', 'position', 'top-right');\n            alertify.notify(xhr.responseJSON.message.text, xhr.responseJSON.message.type);\n          }\n        },\n        success: function success(data, status, xhr) {\n          window.location.reload();\n        },\n        complete: function complete(xhr, status) {\n          if (xhr.responseJSON && xhr.responseJSON.csrf) {\n            setCSRFToken(xhr.responseJSON.csrf);\n            reDrawDataTables();\n          } else {\n            Swal.fire({\n              icon: 'error',\n              title: 'Oops...',\n              text: 'Something went wrong!'\n            }).then(function (result) {\n              window.location.reload();\n            });\n          }\n        }\n      });\n    }\n  });\n});\n$('[data-toggle=\"delete-family\"]').click(function (e) {\n  e.preventDefault();\n  var $this = $(this);\n  Swal.fire({\n    title: \"Hapus data ini?\",\n    text: \"Data akan dihapus selamanya!\",\n    icon: 'warning',\n    showCancelButton: true,\n    confirmButtonText: 'Ya, Hapus!',\n    cancelButtonText: 'Batalkan',\n    customClass: {\n      confirmButton: 'btn btn-danger mr-2',\n      cancelButton: 'btn btn-secondary ml-2'\n    },\n    buttonsStyling: false\n  }).then(function (result) {\n    if (result.isConfirmed) {\n      $.ajax({\n        url: $this.attr('href'),\n        method: 'POST',\n        dataType: 'json',\n        headers: {\n          'X-CSRF-TOKEN': getCSRFToken(),\n          'X-Requested-With': 'XMLHttpRequest'\n        },\n        error: function error(xhr, status, _error30) {\n          if (xhr.responseJSON && xhr.responseJSON.message) {\n            alertify.set('notifier', 'position', 'top-right');\n            alertify.notify(xhr.responseJSON.message.text, xhr.responseJSON.message.type);\n          }\n        },\n        success: function success(data, status, xhr) {\n          window.location.reload();\n        },\n        complete: function complete(xhr, status) {\n          if (xhr.responseJSON && xhr.responseJSON.csrf) {\n            setCSRFToken(xhr.responseJSON.csrf);\n            reDrawDataTables();\n          } else {\n            Swal.fire({\n              icon: 'error',\n              title: 'Oops...',\n              text: 'Something went wrong!'\n            }).then(function (result) {\n              window.location.reload();\n            });\n          }\n        }\n      });\n    }\n  });\n});\n\nif ($('#chartNewMember').length) {\n  var $el = $('#chartNewMember');\n  var _data3 = [$el.attr('data-nonfree'), $el.attr('data-free')];\n  var chartNewMember = new Chart($el, {\n    type: 'doughnut',\n    data: {\n      labels: ['Non Free Member', 'Free Member'],\n      datasets: [{\n        data: _data3,\n        backgroundColor: ['rgba(255, 99, 132, 0.2)', 'rgba(54, 162, 235, 0.2)'],\n        borderColor: ['rgba(255, 99, 132, 1)', 'rgba(54, 162, 235, 1)'],\n        borderWidth: 1\n      }]\n    }\n  });\n}\n\nif ($('#chartAllMember').length) {\n  var _$el = $('#chartAllMember');\n\n  var _data4 = [_$el.attr('data-nonfree'), _$el.attr('data-free')];\n  var chartAllMember = new Chart(_$el, {\n    type: 'doughnut',\n    data: {\n      labels: ['Non Free Member', 'Free Member'],\n      datasets: [{\n        data: _data4,\n        backgroundColor: ['rgba(255, 99, 132, 0.2)', 'rgba(54, 162, 235, 0.2)'],\n        borderColor: ['rgba(255, 99, 132, 1)', 'rgba(54, 162, 235, 1)'],\n        borderWidth: 1\n      }]\n    }\n  });\n}\n\nif ($('#chartTotalBonus').length) {\n  var _$el2 = $('#chartTotalBonus');\n\n  var _data5 = [_$el2.attr('data-sponsor'), _$el2.attr('data-pairing'), _$el2.attr('data-matching')];\n  var labels = ['Sponsor', 'Pairing', 'Matching'];\n  var backgroundColor = ['rgba(255, 99, 132, 0.2)', 'rgba(54, 162, 235, 0.2)', 'rgba(255, 206, 86, 0.2)'];\n  var borderColor = ['rgba(255, 99, 132, 1)', 'rgba(54, 162, 235, 1)', 'rgba(255, 206, 86, 1)'];\n\n  if (_$el2.attr('data-reward')) {\n    _data5.push(_$el2.attr('data-reward'));\n\n    labels.push('Reward');\n    backgroundColor.push('rgba(75, 192, 192, 0.2)');\n    borderColor.push('rgba(75, 192, 192, 1)');\n  }\n\n  var chartTotalBonus = new Chart(_$el2, {\n    type: 'doughnut',\n    data: {\n      labels: labels,\n      datasets: [{\n        data: _data5,\n        backgroundColor: backgroundColor,\n        borderColor: borderColor,\n        borderWidth: 1\n      }]\n    }\n  });\n}\n\nif ($('#chartAllTotalBonus').length) {\n  var _$el3 = $('#chartAllTotalBonus');\n\n  var _data6 = [_$el3.attr('data-sponsor'), _$el3.attr('data-pairing'), _$el3.attr('data-matching')];\n  var _labels = ['Sponsor', 'Pairing', 'Matching'];\n  var _backgroundColor = ['rgba(255, 99, 132, 0.2)', 'rgba(54, 162, 235, 0.2)', 'rgba(255, 206, 86, 0.2)'];\n  var _borderColor = ['rgba(255, 99, 132, 1)', 'rgba(54, 162, 235, 1)', 'rgba(255, 206, 86, 1)'];\n\n  if (_$el3.attr('data-reward')) {\n    _data6.push(_$el3.attr('data-reward'));\n\n    _labels.push('Reward');\n\n    _backgroundColor.push('rgba(75, 192, 192, 0.2)');\n\n    _borderColor.push('rgba(75, 192, 192, 1)');\n  }\n\n  var chartAllTotalBonus = new Chart(_$el3, {\n    type: 'doughnut',\n    data: {\n      labels: _labels,\n      datasets: [{\n        data: _data6,\n        backgroundColor: _backgroundColor,\n        borderColor: _borderColor,\n        borderWidth: 1\n      }]\n    }\n  });\n}\n\nif ($('#chartMember10Day').length) {\n  var _$el4 = $('#chartMember10Day');\n\n  var dataKeys = _$el4.attr('data-keys').split(',');\n\n  var dataFree = _$el4.attr('data-free').split(',');\n\n  var dataNonfree = _$el4.attr('data-nonfree').split(',');\n\n  var _data7 = {\n    labels: dataKeys,\n    datasets: [{\n      label: 'Non Free Member',\n      borderColor: ['rgba(255, 99, 132, 1)'],\n      backgroundColor: ['rgba(255, 99, 132, 0.2)'],\n      fill: false,\n      data: dataNonfree\n    }, {\n      label: 'Free Member',\n      borderColor: ['rgba(54, 162, 235, 1)'],\n      backgroundColor: ['rgba(54, 162, 235, 0.2)'],\n      fill: false,\n      data: dataFree\n    }]\n  };\n  var chartMember10Day = new Chart(_$el4, {\n    type: 'line',\n    data: _data7\n  });\n}\n\nif ($('#chartBonus10Day').length) {\n  var _$el5 = $('#chartBonus10Day');\n\n  var _dataKeys = _$el5.attr('data-keys').split(',');\n\n  var dataSponsor = _$el5.attr('data-sponsor').split(',');\n\n  var dataPairing = _$el5.attr('data-pairing').split(',');\n\n  var dataMatching = _$el5.attr('data-matching').split(',');\n\n  var dataReward = _$el5.attr('data-reward').split(',');\n\n  var _data8 = {\n    labels: _dataKeys,\n    datasets: [{\n      label: 'Sponsor',\n      borderColor: ['rgba(255, 99, 132, 1)'],\n      backgroundColor: ['rgba(255, 99, 132, 0.2)'],\n      fill: false,\n      data: dataSponsor\n    }, {\n      label: 'Pairing',\n      borderColor: ['rgba(54, 162, 235, 1)'],\n      backgroundColor: ['rgba(54, 162, 235, 0.2)'],\n      fill: false,\n      data: dataPairing\n    }, {\n      label: 'Matching',\n      borderColor: ['rgba(255, 206, 86, 1)'],\n      backgroundColor: ['rgba(255, 206, 86, 0.2)'],\n      fill: false,\n      data: dataMatching\n    }, {\n      label: 'Reward',\n      borderColor: ['rgba(75, 192, 192, 1)'],\n      backgroundColor: ['rgba(75, 192, 192, 0.2)'],\n      fill: false,\n      data: dataReward\n    }]\n  };\n  var chartBonus10Day = new Chart(_$el5, {\n    type: 'line',\n    data: _data8\n  });\n}\n\n$('#addPayoutForm [name=\"amount\"]').keyup(function (e) {\n  var amount = e.target.value || 0;\n  var transferAmount = amount * 0.9;\n  var adminFee = amount * 0.1;\n  $('#addPayoutForm [data-input=\"transfer-amount\"]').html(numberFormat(transferAmount, 2));\n  $('#addPayoutForm [data-input=\"admin-fee\"]').html(numberFormat(adminFee, 2));\n});\n$('.setting-form').submit(function (e) {\n  e.preventDefault();\n  var $this = $(this);\n  $this.find('[type=\"submit\"]').prop('disabled', true);\n  $this.find('[data-type=\"error\"]').remove();\n  var formData = new FormData(this);\n  var tab = $this.find('[name=\"tab\"]').val();\n\n  if (tab == 'quote') {\n    var $imgTag = $('#testimonialImagePreview img');\n\n    if ($imgTag.data('upload') && !$imgTag.data('delete')) {\n      var imgSrc = $imgTag.attr('src');\n      var base64Image = imgSrc.replace(/^data:image\\/jpeg;base64,/, \"\");\n      var blobImage = base64toBlob(base64Image);\n      formData.append('quote_image', blobImage, $imgTag.data('filename'));\n    }\n\n    if (!$imgTag.data('upload') && $imgTag.data('delete')) {\n      formData.append('delete_image', true);\n    }\n  }\n\n  $.ajax({\n    url: $this.attr('action'),\n    data: formData,\n    method: 'POST',\n    contentType: false,\n    processData: false,\n    dataType: 'json',\n    headers: {\n      'X-Requested-With': 'XMLHttpRequest'\n    },\n    error: function error(xhr, status, _error31) {\n      if (xhr.responseJSON && xhr.responseJSON.errors) {\n        var errors = xhr.responseJSON.errors;\n        var keys = Object.keys(errors);\n        keys.forEach(function (val, i) {\n          $('<small class=\"text-danger\" data-type=\"error\" data-name=\"' + val + '\">' + errors[val] + '</small>').insertAfter($this.find('[name=\"' + val + '\"]'));\n        });\n      }\n\n      if (xhr.responseJSON && xhr.responseJSON.message) {\n        alertify.set('notifier', 'position', 'top-right');\n        alertify.notify(xhr.responseJSON.message.text, xhr.responseJSON.message.type);\n      }\n    },\n    success: function success(data, status, xhr) {\n      Swal.fire({\n        icon: 'success',\n        title: 'Success!',\n        text: 'Data berhasil disimpan'\n      }).then(function (result) {\n        window.location.reload();\n      });\n    },\n    complete: function complete(xhr, status) {\n      $this.find('[type=\"submit\"]').prop('disabled', false);\n\n      if (xhr.responseJSON && xhr.responseJSON.csrf) {\n        setCSRFToken(xhr.responseJSON.csrf);\n        reDrawDataTables();\n      } else {\n        Swal.fire({\n          icon: 'error',\n          title: 'Oops...',\n          text: 'Something went wrong!'\n        }).then(function (result) {\n          window.location.reload();\n        });\n      }\n    }\n  });\n});\n\nfunction deleteBlog(e) {\n  e.preventDefault();\n  var $this = $(this);\n  Swal.fire({\n    title: \"Hapus data ini?\",\n    text: \"Data akan dihapus selamanya!\",\n    icon: 'warning',\n    showCancelButton: true,\n    confirmButtonText: 'Ya, Hapus!',\n    cancelButtonText: 'Batalkan',\n    customClass: {\n      confirmButton: 'btn btn-danger mr-2',\n      cancelButton: 'btn btn-secondary ml-2'\n    },\n    buttonsStyling: false\n  }).then(function (result) {\n    if (result.isConfirmed) {\n      $.ajax({\n        url: $this.attr('href'),\n        method: 'POST',\n        dataType: 'json',\n        headers: {\n          'X-CSRF-TOKEN': getCSRFToken(),\n          'X-Requested-With': 'XMLHttpRequest'\n        },\n        error: function error(xhr, status, _error32) {\n          if (xhr.responseJSON && xhr.responseJSON.message) {\n            alertify.set('notifier', 'position', 'top-right');\n            alertify.notify(xhr.responseJSON.message.text, xhr.responseJSON.message.type);\n          }\n        },\n        success: function success(data, status, xhr) {\n          Swal.fire({\n            icon: 'success',\n            title: 'Success!',\n            text: 'Data berhasil dihapus'\n          });\n        },\n        complete: function complete(xhr, status) {\n          if (xhr.responseJSON && xhr.responseJSON.csrf) {\n            setCSRFToken(xhr.responseJSON.csrf);\n            reDrawDataTables();\n          } else {\n            Swal.fire({\n              icon: 'error',\n              title: 'Oops...',\n              text: 'Something went wrong!'\n            }).then(function (result) {\n              window.location.reload();\n            });\n          }\n        }\n      });\n    }\n  });\n}\n\nif ($('#dtBlog').length) {\n  var dtBlog = $('#dtBlog').DataTable({\n    processing: true,\n    serverSide: true,\n    ajax: baseURL + \"/data/dt-blog\",\n    columns: [{\n      data: \"title\"\n    }, {\n      data: \"category\"\n    }, {\n      data: \"created_at\"\n    }, {\n      data: \"action\",\n      orderable: false,\n      className: 'text-right'\n    }],\n    language: dtLanguage,\n    responsive: true,\n    initComplete: function initComplete(setting, json) {\n      redesignDatatables();\n    },\n    drawCallback: function drawCallback(settings) {}\n  });\n  $('#dtBlog tbody').on('click', '[data-toggle=\"delete\"]', deleteBlog);\n}\n\nvar blogImage = null;\n\nfunction readBlogImageFile(input) {\n  if (input.files && input.files[0]) {\n    $('#blogImageModal').modal('show');\n    var reader = new FileReader();\n\n    reader.onload = function (e) {\n      setTimeout(function () {\n        blogImage = new Croppie(document.getElementById('blogImageCropper'), {\n          viewport: {\n            width: 320,\n            height: 240,\n            type: 'square'\n          },\n          boundary: {\n            width: 360,\n            height: 280\n          },\n          url: e.target.result,\n          enableExif: true\n        });\n      }, 500);\n    };\n\n    reader.readAsDataURL(input.files[0]);\n  }\n}\n\n$('#inputBlogImage').on('change', function () {\n  readBlogImageFile(this);\n});\n$('#blogImageModal').on('hide.bs.modal', function (e) {\n  blogImage.destroy();\n  $('#inputBlogImage').val('');\n});\n$('#blogImageModal [data-toggle=\"crop-image\"]').on('click', function (e) {\n  blogImage.result({\n    type: 'base64',\n    format: 'jpeg',\n    size: {\n      width: 800,\n      height: 600\n    }\n  }).then(function (resp) {\n    $('#blogImagePreview img').attr({\n      src: resp,\n      'data-upload': true,\n      'data-filename': $('#inputBlogImage')[0].files[0].name\n    });\n    $('[data-toggle=\"reset-blog-image\"]').removeClass('d-none');\n    $('[data-toggle=\"reset-blog-image\"]').removeClass('d-none');\n    $('#blogImageModal').modal('hide');\n  });\n});\n\nfunction resetBlogImage() {\n  var $imgTag = $('#blogImagePreview img');\n  $imgTag.attr({\n    src: $imgTag.data('original'),\n    'data-upload': false,\n    'data-delete': false\n  });\n  $('[data-toggle=\"reset-blog-image\"]').addClass('d-none');\n  $('[data-toggle=\"delete-blog-image\"]').removeClass('d-none');\n}\n\nfunction deleteBlogImage() {\n  var $imgTag = $('#blogImagePreview img');\n  $imgTag.attr({\n    src: $imgTag.data('placeholder'),\n    'data-upload': false,\n    'data-delete': true\n  });\n  $('[data-toggle=\"reset-blog-image\"]').removeClass('d-none');\n  $('[data-toggle=\"delete-blog-image\"]').addClass('d-none');\n}\n\n$('[data-toggle=\"reset-blog-image\"]').click(resetBlogImage);\n$('[data-toggle=\"delete-blog-image\"]').click(deleteBlogImage);\n$('#formAddBlog').submit(function (e) {\n  e.preventDefault();\n  var $this = $(this);\n  $this.find('[type=\"submit\"]').prop('disabled', true);\n  $this.find('[data-type=\"error\"]').remove();\n  var formData = new FormData(this);\n  var $imgTag = $('#blogImagePreview img');\n\n  if ($imgTag.data('upload')) {\n    var imgSrc = $imgTag.attr('src');\n    var base64Image = imgSrc.replace(/^data:image\\/jpeg;base64,/, \"\");\n    var blobImage = base64toBlob(base64Image);\n    formData.append('blog_image', blobImage, $imgTag.data('filename'));\n  }\n\n  var content = editor.getData();\n\n  if (!content.length) {\n    $('<small class=\"text-danger\" data-type=\"error\" data-name=\"content\">Konten tidak boleh kosong</small>').insertAfter($this.find('.ck-editor'));\n    editor.focus();\n    $this.find('[type=\"submit\"]').prop('disabled', false);\n  } else {\n    formData.append('content', content);\n    $.ajax({\n      data: formData,\n      type: 'POST',\n      contentType: false,\n      processData: false,\n      dataType: 'json',\n      headers: {\n        'X-Requested-With': 'XMLHttpRequest'\n      },\n      error: function error(xhr, status, _error33) {\n        if (xhr.responseJSON && xhr.responseJSON.errors) {\n          var errors = xhr.responseJSON.errors;\n          var keys = Object.keys(errors);\n          keys.forEach(function (val, i) {\n            $('<small class=\"text-danger\" data-type=\"error\" data-name=\"' + val + '\">' + errors[val] + '</small>').insertAfter($this.find('[name=\"' + val + '\"]'));\n          });\n        }\n\n        if (xhr.responseJSON && xhr.responseJSON.message) {\n          alertify.set('notifier', 'position', 'top-right');\n          alertify.notify(xhr.responseJSON.message.text, xhr.responseJSON.message.type);\n        }\n      },\n      success: function success(data, status, xhr) {\n        Swal.fire({\n          icon: 'success',\n          title: 'Success!',\n          text: 'Data berhasil disimpan'\n        }).then(function (result) {\n          window.location.reload();\n        });\n      },\n      complete: function complete(xhr, status) {\n        $this.find('[type=\"submit\"]').prop('disabled', false);\n\n        if (xhr.responseJSON && xhr.responseJSON.csrf) {\n          setCSRFToken(xhr.responseJSON.csrf);\n        } else {\n          Swal.fire({\n            icon: 'error',\n            title: 'Oops...',\n            text: 'Something went wrong!'\n          }).then(function (result) {\n            window.location.reload();\n          });\n        }\n      }\n    });\n  }\n});\n$('#formEditBlog').submit(function (e) {\n  e.preventDefault();\n  var $this = $(this);\n  $this.find('[type=\"submit\"]').prop('disabled', false);\n  $this.find('[data-type=\"error\"]').remove();\n  var formData = new FormData(this);\n  var $imgTag = $('#blogImagePreview img');\n\n  if ($imgTag.data('upload') && !$imgTag.data('delete')) {\n    var imgSrc = $imgTag.attr('src');\n    var base64Image = imgSrc.replace(/^data:image\\/jpeg;base64,/, \"\");\n    var blobImage = base64toBlob(base64Image);\n    formData.append('blog_image', blobImage, $imgTag.data('filename'));\n  }\n\n  if (!$imgTag.data('upload') && $imgTag.data('delete')) {\n    formData.append('delete_image', true);\n  }\n\n  var content = editor.getData();\n\n  if (!content.length) {\n    $('<small class=\"text-danger\" data-type=\"error\" data-name=\"content\">Konten tidak boleh kosong</small>').insertAfter($this.find('.ck-editor'));\n    editor.focus();\n    $this.find('[type=\"submit\"]').prop('disabled', false);\n  } else {\n    formData.append('content', content);\n    $.ajax({\n      data: formData,\n      type: 'POST',\n      contentType: false,\n      processData: false,\n      dataType: 'json',\n      headers: {\n        'X-Requested-With': 'XMLHttpRequest'\n      },\n      error: function error(xhr, status, _error34) {\n        if (xhr.responseJSON && xhr.responseJSON.errors) {\n          var errors = xhr.responseJSON.errors;\n          var keys = Object.keys(errors);\n          keys.forEach(function (val, i) {\n            $('<small class=\"text-danger\" data-type=\"error\" data-name=\"' + val + '\">' + errors[val] + '</small>').insertAfter($this.find('[name=\"' + val + '\"]'));\n          });\n        }\n\n        if (xhr.responseJSON && xhr.responseJSON.message) {\n          alertify.set('notifier', 'position', 'top-right');\n          alertify.notify(xhr.responseJSON.message.text, xhr.responseJSON.message.type);\n        }\n      },\n      success: function success(data, status, xhr) {\n        Swal.fire({\n          icon: 'success',\n          title: 'Success!',\n          text: 'Data berhasil disimpan'\n        }).then(function (result) {\n          window.location.reload();\n        });\n      },\n      complete: function complete(xhr, status) {\n        $this.find('[type=\"submit\"]').prop('disabled', false);\n\n        if (xhr.responseJSON && xhr.responseJSON.csrf) {\n          setCSRFToken(xhr.responseJSON.csrf);\n        } else {\n          Swal.fire({\n            icon: 'error',\n            title: 'Oops...',\n            text: 'Something went wrong!'\n          }).then(function (result) {\n            window.location.reload();\n          });\n        }\n      }\n    });\n  }\n});\n\nfunction deleteBlogCategory(e) {\n  e.preventDefault();\n  var $this = $(this);\n  Swal.fire({\n    title: \"Hapus data ini?\",\n    text: \"Data akan dihapus selamanya!\",\n    icon: 'warning',\n    showCancelButton: true,\n    confirmButtonText: 'Ya, Hapus!',\n    cancelButtonText: 'Batalkan',\n    customClass: {\n      confirmButton: 'btn btn-danger mr-2',\n      cancelButton: 'btn btn-secondary ml-2'\n    },\n    buttonsStyling: false\n  }).then(function (result) {\n    if (result.isConfirmed) {\n      $.ajax({\n        url: $this.attr('href'),\n        method: 'POST',\n        dataType: 'json',\n        headers: {\n          'X-CSRF-TOKEN': getCSRFToken(),\n          'X-Requested-With': 'XMLHttpRequest'\n        },\n        error: function error(xhr, status, _error35) {\n          if (xhr.responseJSON && xhr.responseJSON.message) {\n            alertify.set('notifier', 'position', 'top-right');\n            alertify.notify(xhr.responseJSON.message.text, xhr.responseJSON.message.type);\n          }\n        },\n        success: function success(data, status, xhr) {\n          Swal.fire({\n            icon: 'success',\n            title: 'Success!',\n            text: 'Data berhasil dihapus'\n          });\n        },\n        complete: function complete(xhr, status) {\n          if (xhr.responseJSON && xhr.responseJSON.csrf) {\n            setCSRFToken(xhr.responseJSON.csrf);\n            reDrawDataTables();\n          } else {\n            Swal.fire({\n              icon: 'error',\n              title: 'Oops...',\n              text: 'Something went wrong!'\n            }).then(function (result) {\n              window.location.reload();\n            });\n          }\n        }\n      });\n    }\n  });\n}\n\nif ($('#dtBlogCategory').length) {\n  var dtBlogCategory = $('#dtBlogCategory').DataTable({\n    processing: true,\n    serverSide: true,\n    ajax: baseURL + \"/data/dt-blog-category\",\n    columns: [{\n      data: \"name\"\n    }, {\n      data: \"total_blog\"\n    }, {\n      data: \"description\"\n    }, {\n      data: \"action\",\n      orderable: false,\n      className: 'text-right'\n    }],\n    language: dtLanguage,\n    responsive: true,\n    initComplete: function initComplete(setting, json) {\n      redesignDatatables();\n    },\n    drawCallback: function drawCallback(settings) {}\n  });\n  $('#dtBlogCategory tbody').on('click', '[data-toggle=\"delete\"]', deleteBlogCategory);\n}\n\n$('#formAddBlogCategory').submit(function (e) {\n  e.preventDefault();\n  var $this = $(this);\n  $this.find('[type=\"submit\"]').prop('disabled', true);\n  $this.find('[data-type=\"error\"]').remove();\n  var formData = new FormData(this);\n  $.ajax({\n    url: $this.attr('action'),\n    data: formData,\n    method: 'POST',\n    contentType: false,\n    processData: false,\n    dataType: 'json',\n    headers: {\n      'X-Requested-With': 'XMLHttpRequest'\n    },\n    error: function error(xhr, status, _error36) {\n      if (xhr.responseJSON && xhr.responseJSON.errors) {\n        var errors = xhr.responseJSON.errors;\n        var keys = Object.keys(errors);\n        keys.forEach(function (val, i) {\n          $('<small class=\"text-danger\" data-type=\"error\" data-name=\"' + val + '\">' + errors[val] + '</small>').insertAfter($this.find('[name=\"' + val + '\"]'));\n        });\n      }\n\n      if (xhr.responseJSON && xhr.responseJSON.message) {\n        alertify.set('notifier', 'position', 'top-right');\n        alertify.notify(xhr.responseJSON.message.text, xhr.responseJSON.message.type);\n      }\n    },\n    success: function success(data, status, xhr) {\n      Swal.fire({\n        icon: 'success',\n        title: 'Success!',\n        text: 'Data berhasil disimpan'\n      }).then(function (result) {\n        window.location.reload();\n      });\n    },\n    complete: function complete(xhr, status) {\n      $this.find('[type=\"submit\"]').prop('disabled', false);\n\n      if (xhr.responseJSON && xhr.responseJSON.csrf) {\n        setCSRFToken(xhr.responseJSON.csrf);\n        reDrawDataTables();\n      } else {\n        Swal.fire({\n          icon: 'error',\n          title: 'Oops...',\n          text: 'Something went wrong!'\n        }).then(function (result) {\n          window.location.reload();\n        });\n      }\n    }\n  });\n});\n$('#formEditBlogCategory').submit(function (e) {\n  e.preventDefault();\n  var $this = $(this);\n  $this.find('[type=\"submit\"]').prop('disabled', true);\n  $this.find('[data-type=\"error\"]').remove();\n  var formData = new FormData(this);\n  $.ajax({\n    url: $this.attr('action'),\n    data: formData,\n    method: 'POST',\n    contentType: false,\n    processData: false,\n    dataType: 'json',\n    headers: {\n      'X-Requested-With': 'XMLHttpRequest'\n    },\n    error: function error(xhr, status, _error37) {\n      if (xhr.responseJSON && xhr.responseJSON.errors) {\n        var errors = xhr.responseJSON.errors;\n        var keys = Object.keys(errors);\n        keys.forEach(function (val, i) {\n          $('<small class=\"text-danger\" data-type=\"error\" data-name=\"' + val + '\">' + errors[val] + '</small>').insertAfter($this.find('[name=\"' + val + '\"]'));\n        });\n      }\n\n      if (xhr.responseJSON && xhr.responseJSON.message) {\n        alertify.set('notifier', 'position', 'top-right');\n        alertify.notify(xhr.responseJSON.message.text, xhr.responseJSON.message.type);\n      }\n    },\n    success: function success(data, status, xhr) {\n      Swal.fire({\n        icon: 'success',\n        title: 'Success!',\n        text: 'Data berhasil disimpan'\n      }).then(function (result) {\n        window.location.reload();\n      });\n    },\n    complete: function complete(xhr, status) {\n      $this.find('[type=\"submit\"]').prop('disabled', false);\n\n      if (xhr.responseJSON && xhr.responseJSON.csrf) {\n        setCSRFToken(xhr.responseJSON.csrf);\n        reDrawDataTables();\n      } else {\n        Swal.fire({\n          icon: 'error',\n          title: 'Oops...',\n          text: 'Something went wrong!'\n        }).then(function (result) {\n          window.location.reload();\n        });\n      }\n    }\n  });\n});\n\nfunction deleteEvent(e) {\n  e.preventDefault();\n  var $this = $(this);\n  Swal.fire({\n    title: \"Hapus data ini?\",\n    text: \"Data akan dihapus selamanya!\",\n    icon: 'warning',\n    showCancelButton: true,\n    confirmButtonText: 'Ya, Hapus!',\n    cancelButtonText: 'Batalkan',\n    customClass: {\n      confirmButton: 'btn btn-danger mr-2',\n      cancelButton: 'btn btn-secondary ml-2'\n    },\n    buttonsStyling: false\n  }).then(function (result) {\n    if (result.isConfirmed) {\n      $.ajax({\n        url: $this.attr('href'),\n        method: 'POST',\n        dataType: 'json',\n        headers: {\n          'X-CSRF-TOKEN': getCSRFToken(),\n          'X-Requested-With': 'XMLHttpRequest'\n        },\n        error: function error(xhr, status, _error38) {\n          if (xhr.responseJSON && xhr.responseJSON.message) {\n            alertify.set('notifier', 'position', 'top-right');\n            alertify.notify(xhr.responseJSON.message.text, xhr.responseJSON.message.type);\n          }\n        },\n        success: function success(data, status, xhr) {\n          Swal.fire({\n            icon: 'success',\n            title: 'Success!',\n            text: 'Data berhasil dihapus'\n          });\n        },\n        complete: function complete(xhr, status) {\n          if (xhr.responseJSON && xhr.responseJSON.csrf) {\n            setCSRFToken(xhr.responseJSON.csrf);\n            reDrawDataTables();\n          } else {\n            Swal.fire({\n              icon: 'error',\n              title: 'Oops...',\n              text: 'Something went wrong!'\n            }).then(function (result) {\n              window.location.reload();\n            });\n          }\n        }\n      });\n    }\n  });\n}\n\nif ($('#dtEvent').length) {\n  var dtEvent = $('#dtEvent').DataTable({\n    processing: true,\n    serverSide: true,\n    ajax: baseURL + \"/data/dt-event\",\n    columns: [{\n      data: \"title\"\n    }, {\n      data: \"category\"\n    }, {\n      data: \"created_at\"\n    }, {\n      data: \"action\",\n      orderable: false,\n      className: 'text-right'\n    }],\n    language: dtLanguage,\n    responsive: true,\n    initComplete: function initComplete(setting, json) {\n      redesignDatatables();\n    },\n    drawCallback: function drawCallback(settings) {}\n  });\n  $('#dtEvent tbody').on('click', '[data-toggle=\"delete\"]', deleteEvent);\n}\n\nvar eventImage = null;\n\nfunction readEventImageFile(input) {\n  if (input.files && input.files[0]) {\n    $('#eventImageModal').modal('show');\n    var reader = new FileReader();\n\n    reader.onload = function (e) {\n      setTimeout(function () {\n        eventImage = new Croppie(document.getElementById('eventImageCropper'), {\n          viewport: {\n            width: 320,\n            height: 240,\n            type: 'square'\n          },\n          boundary: {\n            width: 360,\n            height: 280\n          },\n          url: e.target.result,\n          enableExif: true\n        });\n      }, 500);\n    };\n\n    reader.readAsDataURL(input.files[0]);\n  }\n}\n\n$('#inputEventImage').on('change', function () {\n  readEventImageFile(this);\n});\n$('#eventImageModal').on('hide.bs.modal', function (e) {\n  eventImage.destroy();\n  $('#inputEventImage').val('');\n});\n$('#eventImageModal [data-toggle=\"crop-image\"]').on('click', function (e) {\n  eventImage.result({\n    type: 'base64',\n    format: 'jpeg',\n    size: {\n      width: 800,\n      height: 600\n    }\n  }).then(function (resp) {\n    $('#eventImagePreview img').attr({\n      src: resp,\n      'data-upload': true,\n      'data-filename': $('#inputEventImage')[0].files[0].name\n    });\n    $('[data-toggle=\"reset-event-image\"]').removeClass('d-none');\n    $('[data-toggle=\"reset-event-image\"]').removeClass('d-none');\n    $('#eventImageModal').modal('hide');\n  });\n});\n\nfunction resetEventImage() {\n  var $imgTag = $('#eventImagePreview img');\n  $imgTag.attr({\n    src: $imgTag.data('original'),\n    'data-upload': false,\n    'data-delete': false\n  });\n  $('[data-toggle=\"reset-event-image\"]').addClass('d-none');\n  $('[data-toggle=\"delete-event-image\"]').removeClass('d-none');\n}\n\nfunction deleteEventImage() {\n  var $imgTag = $('#eventImagePreview img');\n  $imgTag.attr({\n    src: $imgTag.data('placeholder'),\n    'data-upload': false,\n    'data-delete': true\n  });\n  $('[data-toggle=\"reset-event-image\"]').removeClass('d-none');\n  $('[data-toggle=\"delete-event-image\"]').addClass('d-none');\n}\n\n$('[data-toggle=\"reset-event-image\"]').click(resetEventImage);\n$('[data-toggle=\"delete-event-image\"]').click(deleteEventImage);\n$('#formAddEvent').submit(function (e) {\n  e.preventDefault();\n  var $this = $(this);\n  $this.find('[type=\"submit\"]').prop('disabled', true);\n  $this.find('[data-type=\"error\"]').remove();\n  var formData = new FormData(this);\n  var $imgTag = $('#eventImagePreview img');\n\n  if ($imgTag.data('upload')) {\n    var imgSrc = $imgTag.attr('src');\n    var base64Image = imgSrc.replace(/^data:image\\/jpeg;base64,/, \"\");\n    var blobImage = base64toBlob(base64Image);\n    formData.append('event_image', blobImage, $imgTag.data('filename'));\n  }\n\n  var content = editor.getData();\n\n  if (!content.length) {\n    $('<small class=\"text-danger\" data-type=\"error\" data-name=\"content\">Konten tidak boleh kosong</small>').insertAfter($this.find('.ck-editor'));\n    editor.focus();\n    $this.find('[type=\"submit\"]').prop('disabled', false);\n  } else {\n    formData.append('content', content);\n    $.ajax({\n      data: formData,\n      type: 'POST',\n      contentType: false,\n      processData: false,\n      dataType: 'json',\n      headers: {\n        'X-Requested-With': 'XMLHttpRequest'\n      },\n      error: function error(xhr, status, _error39) {\n        if (xhr.responseJSON && xhr.responseJSON.errors) {\n          var errors = xhr.responseJSON.errors;\n          var keys = Object.keys(errors);\n          keys.forEach(function (val, i) {\n            $('<small class=\"text-danger\" data-type=\"error\" data-name=\"' + val + '\">' + errors[val] + '</small>').insertAfter($this.find('[name=\"' + val + '\"]'));\n          });\n        }\n\n        if (xhr.responseJSON && xhr.responseJSON.message) {\n          alertify.set('notifier', 'position', 'top-right');\n          alertify.notify(xhr.responseJSON.message.text, xhr.responseJSON.message.type);\n        }\n      },\n      success: function success(data, status, xhr) {\n        Swal.fire({\n          icon: 'success',\n          title: 'Success!',\n          text: 'Data berhasil disimpan'\n        }).then(function (result) {\n          window.location.reload();\n        });\n      },\n      complete: function complete(xhr, status) {\n        $this.find('[type=\"submit\"]').prop('disabled', false);\n\n        if (xhr.responseJSON && xhr.responseJSON.csrf) {\n          setCSRFToken(xhr.responseJSON.csrf);\n        } else {\n          Swal.fire({\n            icon: 'error',\n            title: 'Oops...',\n            text: 'Something went wrong!'\n          }).then(function (result) {\n            window.location.reload();\n          });\n        }\n      }\n    });\n  }\n});\n$('#formEditEvent').submit(function (e) {\n  e.preventDefault();\n  var $this = $(this);\n  $this.find('[type=\"submit\"]').prop('disabled', false);\n  $this.find('[data-type=\"error\"]').remove();\n  var formData = new FormData(this);\n  var $imgTag = $('#eventImagePreview img');\n\n  if ($imgTag.data('upload') && !$imgTag.data('delete')) {\n    var imgSrc = $imgTag.attr('src');\n    var base64Image = imgSrc.replace(/^data:image\\/jpeg;base64,/, \"\");\n    var blobImage = base64toBlob(base64Image);\n    formData.append('event_image', blobImage, $imgTag.data('filename'));\n  }\n\n  if (!$imgTag.data('upload') && $imgTag.data('delete')) {\n    formData.append('delete_image', true);\n  }\n\n  var content = editor.getData();\n\n  if (!content.length) {\n    $('<small class=\"text-danger\" data-type=\"error\" data-name=\"content\">Konten tidak boleh kosong</small>').insertAfter($this.find('.ck-editor'));\n    editor.focus();\n    $this.find('[type=\"submit\"]').prop('disabled', false);\n  } else {\n    formData.append('content', content);\n    $.ajax({\n      data: formData,\n      type: 'POST',\n      contentType: false,\n      processData: false,\n      dataType: 'json',\n      headers: {\n        'X-Requested-With': 'XMLHttpRequest'\n      },\n      error: function error(xhr, status, _error40) {\n        if (xhr.responseJSON && xhr.responseJSON.errors) {\n          var errors = xhr.responseJSON.errors;\n          var keys = Object.keys(errors);\n          keys.forEach(function (val, i) {\n            $('<small class=\"text-danger\" data-type=\"error\" data-name=\"' + val + '\">' + errors[val] + '</small>').insertAfter($this.find('[name=\"' + val + '\"]'));\n          });\n        }\n\n        if (xhr.responseJSON && xhr.responseJSON.message) {\n          alertify.set('notifier', 'position', 'top-right');\n          alertify.notify(xhr.responseJSON.message.text, xhr.responseJSON.message.type);\n        }\n      },\n      success: function success(data, status, xhr) {\n        Swal.fire({\n          icon: 'success',\n          title: 'Success!',\n          text: 'Data berhasil disimpan'\n        }).then(function (result) {\n          window.location.reload();\n        });\n      },\n      complete: function complete(xhr, status) {\n        $this.find('[type=\"submit\"]').prop('disabled', false);\n\n        if (xhr.responseJSON && xhr.responseJSON.csrf) {\n          setCSRFToken(xhr.responseJSON.csrf);\n        } else {\n          Swal.fire({\n            icon: 'error',\n            title: 'Oops...',\n            text: 'Something went wrong!'\n          }).then(function (result) {\n            window.location.reload();\n          });\n        }\n      }\n    });\n  }\n});\n\nfunction deleteEventCategory(e) {\n  e.preventDefault();\n  var $this = $(this);\n  Swal.fire({\n    title: \"Hapus data ini?\",\n    text: \"Data akan dihapus selamanya!\",\n    icon: 'warning',\n    showCancelButton: true,\n    confirmButtonText: 'Ya, Hapus!',\n    cancelButtonText: 'Batalkan',\n    customClass: {\n      confirmButton: 'btn btn-danger mr-2',\n      cancelButton: 'btn btn-secondary ml-2'\n    },\n    buttonsStyling: false\n  }).then(function (result) {\n    if (result.isConfirmed) {\n      $.ajax({\n        url: $this.attr('href'),\n        method: 'POST',\n        dataType: 'json',\n        headers: {\n          'X-CSRF-TOKEN': getCSRFToken(),\n          'X-Requested-With': 'XMLHttpRequest'\n        },\n        error: function error(xhr, status, _error41) {\n          if (xhr.responseJSON && xhr.responseJSON.message) {\n            alertify.set('notifier', 'position', 'top-right');\n            alertify.notify(xhr.responseJSON.message.text, xhr.responseJSON.message.type);\n          }\n        },\n        success: function success(data, status, xhr) {\n          Swal.fire({\n            icon: 'success',\n            title: 'Success!',\n            text: 'Data berhasil dihapus'\n          });\n        },\n        complete: function complete(xhr, status) {\n          if (xhr.responseJSON && xhr.responseJSON.csrf) {\n            setCSRFToken(xhr.responseJSON.csrf);\n            reDrawDataTables();\n          } else {\n            Swal.fire({\n              icon: 'error',\n              title: 'Oops...',\n              text: 'Something went wrong!'\n            }).then(function (result) {\n              window.location.reload();\n            });\n          }\n        }\n      });\n    }\n  });\n}\n\nif ($('#dtEventCategory').length) {\n  var dtEventCategory = $('#dtEventCategory').DataTable({\n    processing: true,\n    serverSide: true,\n    ajax: baseURL + \"/data/dt-event-category\",\n    columns: [{\n      data: \"name\"\n    }, {\n      data: \"total_event\"\n    }, {\n      data: \"description\"\n    }, {\n      data: \"action\",\n      orderable: false,\n      className: 'text-right'\n    }],\n    language: dtLanguage,\n    responsive: true,\n    initComplete: function initComplete(setting, json) {\n      redesignDatatables();\n    },\n    drawCallback: function drawCallback(settings) {}\n  });\n  $('#dtEventCategory tbody').on('click', '[data-toggle=\"delete\"]', deleteEventCategory);\n}\n\n$('#formAddEventCategory').submit(function (e) {\n  e.preventDefault();\n  var $this = $(this);\n  $this.find('[type=\"submit\"]').prop('disabled', true);\n  $this.find('[data-type=\"error\"]').remove();\n  var formData = new FormData(this);\n  $.ajax({\n    url: $this.attr('action'),\n    data: formData,\n    method: 'POST',\n    contentType: false,\n    processData: false,\n    dataType: 'json',\n    headers: {\n      'X-Requested-With': 'XMLHttpRequest'\n    },\n    error: function error(xhr, status, _error42) {\n      if (xhr.responseJSON && xhr.responseJSON.errors) {\n        var errors = xhr.responseJSON.errors;\n        var keys = Object.keys(errors);\n        keys.forEach(function (val, i) {\n          $('<small class=\"text-danger\" data-type=\"error\" data-name=\"' + val + '\">' + errors[val] + '</small>').insertAfter($this.find('[name=\"' + val + '\"]'));\n        });\n      }\n\n      if (xhr.responseJSON && xhr.responseJSON.message) {\n        alertify.set('notifier', 'position', 'top-right');\n        alertify.notify(xhr.responseJSON.message.text, xhr.responseJSON.message.type);\n      }\n    },\n    success: function success(data, status, xhr) {\n      Swal.fire({\n        icon: 'success',\n        title: 'Success!',\n        text: 'Data berhasil disimpan'\n      }).then(function (result) {\n        window.location.reload();\n      });\n    },\n    complete: function complete(xhr, status) {\n      $this.find('[type=\"submit\"]').prop('disabled', false);\n\n      if (xhr.responseJSON && xhr.responseJSON.csrf) {\n        setCSRFToken(xhr.responseJSON.csrf);\n        reDrawDataTables();\n      } else {\n        Swal.fire({\n          icon: 'error',\n          title: 'Oops...',\n          text: 'Something went wrong!'\n        }).then(function (result) {\n          window.location.reload();\n        });\n      }\n    }\n  });\n});\n$('#formEditEventCategory').submit(function (e) {\n  e.preventDefault();\n  var $this = $(this);\n  $this.find('[type=\"submit\"]').prop('disabled', true);\n  $this.find('[data-type=\"error\"]').remove();\n  var formData = new FormData(this);\n  $.ajax({\n    url: $this.attr('action'),\n    data: formData,\n    method: 'POST',\n    contentType: false,\n    processData: false,\n    dataType: 'json',\n    headers: {\n      'X-Requested-With': 'XMLHttpRequest'\n    },\n    error: function error(xhr, status, _error43) {\n      if (xhr.responseJSON && xhr.responseJSON.errors) {\n        var errors = xhr.responseJSON.errors;\n        var keys = Object.keys(errors);\n        keys.forEach(function (val, i) {\n          $('<small class=\"text-danger\" data-type=\"error\" data-name=\"' + val + '\">' + errors[val] + '</small>').insertAfter($this.find('[name=\"' + val + '\"]'));\n        });\n      }\n\n      if (xhr.responseJSON && xhr.responseJSON.message) {\n        alertify.set('notifier', 'position', 'top-right');\n        alertify.notify(xhr.responseJSON.message.text, xhr.responseJSON.message.type);\n      }\n    },\n    success: function success(data, status, xhr) {\n      Swal.fire({\n        icon: 'success',\n        title: 'Success!',\n        text: 'Data berhasil disimpan'\n      }).then(function (result) {\n        window.location.reload();\n      });\n    },\n    complete: function complete(xhr, status) {\n      $this.find('[type=\"submit\"]').prop('disabled', false);\n\n      if (xhr.responseJSON && xhr.responseJSON.csrf) {\n        setCSRFToken(xhr.responseJSON.csrf);\n        reDrawDataTables();\n      } else {\n        Swal.fire({\n          icon: 'error',\n          title: 'Oops...',\n          text: 'Something went wrong!'\n        }).then(function (result) {\n          window.location.reload();\n        });\n      }\n    }\n  });\n});\n\nfunction deleteTestimonial(e) {\n  e.preventDefault();\n  var $this = $(this);\n  Swal.fire({\n    title: \"Hapus data ini?\",\n    text: \"Data akan dihapus selamanya!\",\n    icon: 'warning',\n    showCancelButton: true,\n    confirmButtonText: 'Ya, Hapus!',\n    cancelButtonText: 'Batalkan',\n    customClass: {\n      confirmButton: 'btn btn-danger mr-2',\n      cancelButton: 'btn btn-secondary ml-2'\n    },\n    buttonsStyling: false\n  }).then(function (result) {\n    if (result.isConfirmed) {\n      $.ajax({\n        url: $this.attr('href'),\n        method: 'POST',\n        dataType: 'json',\n        headers: {\n          'X-CSRF-TOKEN': getCSRFToken(),\n          'X-Requested-With': 'XMLHttpRequest'\n        },\n        error: function error(xhr, status, _error44) {\n          if (xhr.responseJSON && xhr.responseJSON.message) {\n            alertify.set('notifier', 'position', 'top-right');\n            alertify.notify(xhr.responseJSON.message.text, xhr.responseJSON.message.type);\n          }\n        },\n        success: function success(data, status, xhr) {\n          Swal.fire({\n            icon: 'success',\n            title: 'Success!',\n            text: 'Data berhasil dihapus'\n          });\n        },\n        complete: function complete(xhr, status) {\n          if (xhr.responseJSON && xhr.responseJSON.csrf) {\n            setCSRFToken(xhr.responseJSON.csrf);\n            reDrawDataTables();\n          } else {\n            Swal.fire({\n              icon: 'error',\n              title: 'Oops...',\n              text: 'Something went wrong!'\n            }).then(function (result) {\n              window.location.reload();\n            });\n          }\n        }\n      });\n    }\n  });\n}\n\nif ($('#dtTestimonial').length) {\n  var dtTestimonial = $('#dtTestimonial').DataTable({\n    processing: true,\n    serverSide: true,\n    ajax: baseURL + \"/data/dt-testimonial\",\n    columns: [{\n      data: \"name\"\n    }, {\n      data: \"title\"\n    }, {\n      data: \"message\"\n    }, {\n      data: \"created_at\"\n    }, {\n      data: \"action\",\n      orderable: false,\n      className: 'text-right'\n    }],\n    language: dtLanguage,\n    responsive: true,\n    initComplete: function initComplete(setting, json) {\n      redesignDatatables();\n    },\n    drawCallback: function drawCallback(settings) {}\n  });\n  $('#dtTestimonial tbody').on('click', '[data-toggle=\"delete\"]', deleteTestimonial);\n}\n\nvar testimonialImage = null;\n\nfunction readTestimonialImageFile(input) {\n  if (input.files && input.files[0]) {\n    $('#testimonialImageModal').modal('show');\n    var reader = new FileReader();\n\n    reader.onload = function (e) {\n      setTimeout(function () {\n        testimonialImage = new Croppie(document.getElementById('testimonialImageCropper'), {\n          viewport: {\n            width: 240,\n            height: 240,\n            type: 'square'\n          },\n          boundary: {\n            width: 280,\n            height: 280\n          },\n          url: e.target.result,\n          enableExif: true\n        });\n      }, 500);\n    };\n\n    reader.readAsDataURL(input.files[0]);\n  }\n}\n\n$('#inputTestimonialImage').on('change', function () {\n  readTestimonialImageFile(this);\n});\n$('#testimonialImageModal').on('hide.bs.modal', function (e) {\n  testimonialImage.destroy();\n  $('#inputTestimonialImage').val('');\n});\n$('#testimonialImageModal [data-toggle=\"crop-image\"]').on('click', function (e) {\n  testimonialImage.result({\n    type: 'base64',\n    format: 'jpeg',\n    size: {\n      width: 240,\n      height: 240\n    }\n  }).then(function (resp) {\n    $('#testimonialImagePreview img').attr({\n      src: resp,\n      'data-upload': true,\n      'data-filename': $('#inputTestimonialImage')[0].files[0].name\n    });\n    $('[data-toggle=\"reset-testimonial-image\"]').removeClass('d-none');\n    $('[data-toggle=\"reset-testimonial-image\"]').removeClass('d-none');\n    $('#testimonialImageModal').modal('hide');\n  });\n});\n\nfunction resetTestimonialImage() {\n  var $imgTag = $('#testimonialImagePreview img');\n  $imgTag.attr({\n    src: $imgTag.data('original'),\n    'data-upload': false,\n    'data-delete': false\n  });\n  $('[data-toggle=\"reset-testimonial-image\"]').addClass('d-none');\n  $('[data-toggle=\"delete-testimonial-image\"]').removeClass('d-none');\n}\n\nfunction deleteTestimonialImage() {\n  var $imgTag = $('#testimonialImagePreview img');\n  $imgTag.attr({\n    src: $imgTag.data('placeholder'),\n    'data-upload': false,\n    'data-delete': true\n  });\n  $('[data-toggle=\"reset-testimonial-image\"]').removeClass('d-none');\n  $('[data-toggle=\"delete-testimonial-image\"]').addClass('d-none');\n}\n\n$('[data-toggle=\"reset-testimonial-image\"]').click(resetTestimonialImage);\n$('[data-toggle=\"delete-testimonial-image\"]').click(deleteTestimonialImage);\n$('#formAddTestimonial').submit(function (e) {\n  e.preventDefault();\n  var $this = $(this);\n  $this.find('[type=\"submit\"]').prop('disabled', true);\n  $this.find('[data-type=\"error\"]').remove();\n  var formData = new FormData(this);\n  var $imgTag = $('#testimonialImagePreview img');\n\n  if ($imgTag.data('upload')) {\n    var imgSrc = $imgTag.attr('src');\n    var base64Image = imgSrc.replace(/^data:image\\/jpeg;base64,/, \"\");\n    var blobImage = base64toBlob(base64Image);\n    formData.append('testimonial_image', blobImage, $imgTag.data('filename'));\n  }\n\n  $.ajax({\n    data: formData,\n    type: 'POST',\n    contentType: false,\n    processData: false,\n    dataType: 'json',\n    headers: {\n      'X-Requested-With': 'XMLHttpRequest'\n    },\n    error: function error(xhr, status, _error45) {\n      if (xhr.responseJSON && xhr.responseJSON.errors) {\n        var errors = xhr.responseJSON.errors;\n        var keys = Object.keys(errors);\n        keys.forEach(function (val, i) {\n          $('<small class=\"text-danger\" data-type=\"error\" data-name=\"' + val + '\">' + errors[val] + '</small>').insertAfter($this.find('[name=\"' + val + '\"]'));\n        });\n      }\n\n      if (xhr.responseJSON && xhr.responseJSON.message) {\n        alertify.set('notifier', 'position', 'top-right');\n        alertify.notify(xhr.responseJSON.message.text, xhr.responseJSON.message.type);\n      }\n    },\n    success: function success(data, status, xhr) {\n      Swal.fire({\n        icon: 'success',\n        title: 'Success!',\n        text: 'Data berhasil disimpan'\n      }).then(function (result) {\n        window.location.reload();\n      });\n    },\n    complete: function complete(xhr, status) {\n      $this.find('[type=\"submit\"]').prop('disabled', false);\n\n      if (xhr.responseJSON && xhr.responseJSON.csrf) {\n        setCSRFToken(xhr.responseJSON.csrf);\n      } else {\n        Swal.fire({\n          icon: 'error',\n          title: 'Oops...',\n          text: 'Something went wrong!'\n        }).then(function (result) {\n          window.location.reload();\n        });\n      }\n    }\n  });\n});\n$('#formEditTestimonial').submit(function (e) {\n  e.preventDefault();\n  var $this = $(this);\n  $this.find('[type=\"submit\"]').prop('disabled', false);\n  $this.find('[data-type=\"error\"]').remove();\n  var formData = new FormData(this);\n  var $imgTag = $('#testimonialImagePreview img');\n\n  if ($imgTag.data('upload') && !$imgTag.data('delete')) {\n    var imgSrc = $imgTag.attr('src');\n    var base64Image = imgSrc.replace(/^data:image\\/jpeg;base64,/, \"\");\n    var blobImage = base64toBlob(base64Image);\n    formData.append('testimonial_image', blobImage, $imgTag.data('filename'));\n  }\n\n  if (!$imgTag.data('upload') && $imgTag.data('delete')) {\n    formData.append('delete_image', true);\n  }\n\n  $.ajax({\n    data: formData,\n    type: 'POST',\n    contentType: false,\n    processData: false,\n    dataType: 'json',\n    headers: {\n      'X-Requested-With': 'XMLHttpRequest'\n    },\n    error: function error(xhr, status, _error46) {\n      if (xhr.responseJSON && xhr.responseJSON.errors) {\n        var errors = xhr.responseJSON.errors;\n        var keys = Object.keys(errors);\n        keys.forEach(function (val, i) {\n          $('<small class=\"text-danger\" data-type=\"error\" data-name=\"' + val + '\">' + errors[val] + '</small>').insertAfter($this.find('[name=\"' + val + '\"]'));\n        });\n      }\n\n      if (xhr.responseJSON && xhr.responseJSON.message) {\n        alertify.set('notifier', 'position', 'top-right');\n        alertify.notify(xhr.responseJSON.message.text, xhr.responseJSON.message.type);\n      }\n    },\n    success: function success(data, status, xhr) {\n      Swal.fire({\n        icon: 'success',\n        title: 'Success!',\n        text: 'Data berhasil disimpan'\n      }).then(function (result) {\n        window.location.reload();\n      });\n    },\n    complete: function complete(xhr, status) {\n      $this.find('[type=\"submit\"]').prop('disabled', false);\n\n      if (xhr.responseJSON && xhr.responseJSON.csrf) {\n        setCSRFToken(xhr.responseJSON.csrf);\n      } else {\n        Swal.fire({\n          icon: 'error',\n          title: 'Oops...',\n          text: 'Something went wrong!'\n        }).then(function (result) {\n          window.location.reload();\n        });\n      }\n    }\n  });\n});\n\nfunction deleteGallery(e) {\n  e.preventDefault();\n  var $this = $(this);\n  Swal.fire({\n    title: \"Hapus data ini?\",\n    text: \"Data akan dihapus selamanya!\",\n    icon: 'warning',\n    showCancelButton: true,\n    confirmButtonText: 'Ya, Hapus!',\n    cancelButtonText: 'Batalkan',\n    customClass: {\n      confirmButton: 'btn btn-danger mr-2',\n      cancelButton: 'btn btn-secondary ml-2'\n    },\n    buttonsStyling: false\n  }).then(function (result) {\n    if (result.isConfirmed) {\n      $.ajax({\n        url: $this.attr('href'),\n        method: 'POST',\n        dataType: 'json',\n        headers: {\n          'X-CSRF-TOKEN': getCSRFToken(),\n          'X-Requested-With': 'XMLHttpRequest'\n        },\n        error: function error(xhr, status, _error47) {\n          if (xhr.responseJSON && xhr.responseJSON.message) {\n            alertify.set('notifier', 'position', 'top-right');\n            alertify.notify(xhr.responseJSON.message.text, xhr.responseJSON.message.type);\n          }\n        },\n        success: function success(data, status, xhr) {\n          Swal.fire({\n            icon: 'success',\n            title: 'Success!',\n            text: 'Data berhasil dihapus'\n          });\n        },\n        complete: function complete(xhr, status) {\n          if (xhr.responseJSON && xhr.responseJSON.csrf) {\n            setCSRFToken(xhr.responseJSON.csrf);\n            reDrawDataTables();\n          } else {\n            Swal.fire({\n              icon: 'error',\n              title: 'Oops...',\n              text: 'Something went wrong!'\n            }).then(function (result) {\n              window.location.reload();\n            });\n          }\n        }\n      });\n    }\n  });\n}\n\nif ($('#dtGallery').length) {\n  var dtGallery = $('#dtGallery').DataTable({\n    processing: true,\n    serverSide: true,\n    ajax: baseURL + \"/data/dt-gallery\",\n    columns: [{\n      data: \"title\"\n    }, {\n      data: \"category\"\n    }, {\n      data: \"description\"\n    }, {\n      data: \"created_at\"\n    }, {\n      data: \"action\",\n      orderable: false,\n      className: 'text-right'\n    }],\n    language: dtLanguage,\n    responsive: true,\n    initComplete: function initComplete(setting, json) {\n      redesignDatatables();\n    },\n    drawCallback: function drawCallback(settings) {}\n  });\n  $('#dtGallery tbody').on('click', '[data-toggle=\"delete\"]', deleteGallery);\n}\n\nfunction readGalleryImageFile(input) {\n  if (input.files && input.files[0]) {\n    var reader = new FileReader();\n\n    reader.onload = function (e) {\n      $('#galleryImagePreview img').attr('src', e.target.result);\n    };\n\n    reader.readAsDataURL(input.files[0]);\n  }\n}\n\n$('#inputGalleryImage').on('change', function () {\n  readGalleryImageFile(this);\n});\n$('#formAddGallery').submit(function (e) {\n  e.preventDefault();\n  var $this = $(this);\n  $this.find('[type=\"submit\"]').prop('disabled', true);\n  $this.find('[data-type=\"error\"]').remove();\n  var formData = new FormData(this);\n  var $imgTag = $('#galleryImagePreview img');\n\n  if ($imgTag.data('upload')) {\n    var imgSrc = $imgTag.attr('src');\n    var base64Image = imgSrc.replace(/^data:image\\/jpeg;base64,/, \"\");\n    var blobImage = base64toBlob(base64Image);\n    formData.append('gallery_image', blobImage, $imgTag.data('filename'));\n  }\n\n  $.ajax({\n    data: formData,\n    type: 'POST',\n    contentType: false,\n    processData: false,\n    dataType: 'json',\n    headers: {\n      'X-Requested-With': 'XMLHttpRequest'\n    },\n    error: function error(xhr, status, _error48) {\n      if (xhr.responseJSON && xhr.responseJSON.errors) {\n        var errors = xhr.responseJSON.errors;\n        var keys = Object.keys(errors);\n        keys.forEach(function (val, i) {\n          $('<small class=\"text-danger\" data-type=\"error\" data-name=\"' + val + '\">' + errors[val] + '</small>').insertAfter($this.find('[name=\"' + val + '\"]'));\n        });\n      }\n\n      if (xhr.responseJSON && xhr.responseJSON.message) {\n        alertify.set('notifier', 'position', 'top-right');\n        alertify.notify(xhr.responseJSON.message.text, xhr.responseJSON.message.type);\n      }\n    },\n    success: function success(data, status, xhr) {\n      Swal.fire({\n        icon: 'success',\n        title: 'Success!',\n        text: 'Data berhasil disimpan'\n      }).then(function (result) {\n        window.location.reload();\n      });\n    },\n    complete: function complete(xhr, status) {\n      $this.find('[type=\"submit\"]').prop('disabled', false);\n\n      if (xhr.responseJSON && xhr.responseJSON.csrf) {\n        setCSRFToken(xhr.responseJSON.csrf);\n      } else {\n        Swal.fire({\n          icon: 'error',\n          title: 'Oops...',\n          text: 'Something went wrong!'\n        }).then(function (result) {\n          window.location.reload();\n        });\n      }\n    }\n  });\n});\n$('#formEditGallery').submit(function (e) {\n  e.preventDefault();\n  var $this = $(this);\n  $this.find('[type=\"submit\"]').prop('disabled', false);\n  $this.find('[data-type=\"error\"]').remove();\n  var formData = new FormData(this);\n  $.ajax({\n    data: formData,\n    type: 'POST',\n    contentType: false,\n    processData: false,\n    dataType: 'json',\n    headers: {\n      'X-Requested-With': 'XMLHttpRequest'\n    },\n    error: function error(xhr, status, _error49) {\n      if (xhr.responseJSON && xhr.responseJSON.errors) {\n        var errors = xhr.responseJSON.errors;\n        var keys = Object.keys(errors);\n        keys.forEach(function (val, i) {\n          $('<small class=\"text-danger\" data-type=\"error\" data-name=\"' + val + '\">' + errors[val] + '</small>').insertAfter($this.find('[name=\"' + val + '\"]'));\n        });\n      }\n\n      if (xhr.responseJSON && xhr.responseJSON.message) {\n        alertify.set('notifier', 'position', 'top-right');\n        alertify.notify(xhr.responseJSON.message.text, xhr.responseJSON.message.type);\n      }\n    },\n    success: function success(data, status, xhr) {\n      Swal.fire({\n        icon: 'success',\n        title: 'Success!',\n        text: 'Data berhasil disimpan'\n      }).then(function (result) {\n        window.location.reload();\n      });\n    },\n    complete: function complete(xhr, status) {\n      $this.find('[type=\"submit\"]').prop('disabled', false);\n\n      if (xhr.responseJSON && xhr.responseJSON.csrf) {\n        setCSRFToken(xhr.responseJSON.csrf);\n      } else {\n        Swal.fire({\n          icon: 'error',\n          title: 'Oops...',\n          text: 'Something went wrong!'\n        }).then(function (result) {\n          window.location.reload();\n        });\n      }\n    }\n  });\n});\n\nfunction deleteGalleryCategory(e) {\n  e.preventDefault();\n  var $this = $(this);\n  Swal.fire({\n    title: \"Hapus data ini?\",\n    text: \"Data akan dihapus selamanya!\",\n    icon: 'warning',\n    showCancelButton: true,\n    confirmButtonText: 'Ya, Hapus!',\n    cancelButtonText: 'Batalkan',\n    customClass: {\n      confirmButton: 'btn btn-danger mr-2',\n      cancelButton: 'btn btn-secondary ml-2'\n    },\n    buttonsStyling: false\n  }).then(function (result) {\n    if (result.isConfirmed) {\n      $.ajax({\n        url: $this.attr('href'),\n        method: 'POST',\n        dataType: 'json',\n        headers: {\n          'X-CSRF-TOKEN': getCSRFToken(),\n          'X-Requested-With': 'XMLHttpRequest'\n        },\n        error: function error(xhr, status, _error50) {\n          if (xhr.responseJSON && xhr.responseJSON.message) {\n            alertify.set('notifier', 'position', 'top-right');\n            alertify.notify(xhr.responseJSON.message.text, xhr.responseJSON.message.type);\n          }\n        },\n        success: function success(data, status, xhr) {\n          Swal.fire({\n            icon: 'success',\n            title: 'Success!',\n            text: 'Data berhasil dihapus'\n          });\n        },\n        complete: function complete(xhr, status) {\n          if (xhr.responseJSON && xhr.responseJSON.csrf) {\n            setCSRFToken(xhr.responseJSON.csrf);\n            reDrawDataTables();\n          } else {\n            Swal.fire({\n              icon: 'error',\n              title: 'Oops...',\n              text: 'Something went wrong!'\n            }).then(function (result) {\n              window.location.reload();\n            });\n          }\n        }\n      });\n    }\n  });\n}\n\nif ($('#dtGalleryCategory').length) {\n  var dtGalleryCategory = $('#dtGalleryCategory').DataTable({\n    processing: true,\n    serverSide: true,\n    ajax: baseURL + \"/data/dt-gallery-category\",\n    columns: [{\n      data: \"name\"\n    }, {\n      data: \"total_gallery\"\n    }, {\n      data: \"description\"\n    }, {\n      data: \"action\",\n      orderable: false,\n      className: 'text-right'\n    }],\n    language: dtLanguage,\n    responsive: true,\n    initComplete: function initComplete(setting, json) {\n      redesignDatatables();\n    },\n    drawCallback: function drawCallback(settings) {}\n  });\n  $('#dtGalleryCategory tbody').on('click', '[data-toggle=\"delete\"]', deleteGalleryCategory);\n}\n\n$('#formAddGalleryCategory').submit(function (e) {\n  e.preventDefault();\n  var $this = $(this);\n  $this.find('[type=\"submit\"]').prop('disabled', true);\n  $this.find('[data-type=\"error\"]').remove();\n  var formData = new FormData(this);\n  $.ajax({\n    url: $this.attr('action'),\n    data: formData,\n    method: 'POST',\n    contentType: false,\n    processData: false,\n    dataType: 'json',\n    headers: {\n      'X-Requested-With': 'XMLHttpRequest'\n    },\n    error: function error(xhr, status, _error51) {\n      if (xhr.responseJSON && xhr.responseJSON.errors) {\n        var errors = xhr.responseJSON.errors;\n        var keys = Object.keys(errors);\n        keys.forEach(function (val, i) {\n          $('<small class=\"text-danger\" data-type=\"error\" data-name=\"' + val + '\">' + errors[val] + '</small>').insertAfter($this.find('[name=\"' + val + '\"]'));\n        });\n      }\n\n      if (xhr.responseJSON && xhr.responseJSON.message) {\n        alertify.set('notifier', 'position', 'top-right');\n        alertify.notify(xhr.responseJSON.message.text, xhr.responseJSON.message.type);\n      }\n    },\n    success: function success(data, status, xhr) {\n      Swal.fire({\n        icon: 'success',\n        title: 'Success!',\n        text: 'Data berhasil disimpan'\n      }).then(function (result) {\n        window.location.reload();\n      });\n    },\n    complete: function complete(xhr, status) {\n      $this.find('[type=\"submit\"]').prop('disabled', false);\n\n      if (xhr.responseJSON && xhr.responseJSON.csrf) {\n        setCSRFToken(xhr.responseJSON.csrf);\n        reDrawDataTables();\n      } else {\n        Swal.fire({\n          icon: 'error',\n          title: 'Oops...',\n          text: 'Something went wrong!'\n        }).then(function (result) {\n          window.location.reload();\n        });\n      }\n    }\n  });\n});\n$('#formEditGalleryCategory').submit(function (e) {\n  e.preventDefault();\n  var $this = $(this);\n  $this.find('[type=\"submit\"]').prop('disabled', true);\n  $this.find('[data-type=\"error\"]').remove();\n  var formData = new FormData(this);\n  $.ajax({\n    url: $this.attr('action'),\n    data: formData,\n    method: 'POST',\n    contentType: false,\n    processData: false,\n    dataType: 'json',\n    headers: {\n      'X-Requested-With': 'XMLHttpRequest'\n    },\n    error: function error(xhr, status, _error52) {\n      if (xhr.responseJSON && xhr.responseJSON.errors) {\n        var errors = xhr.responseJSON.errors;\n        var keys = Object.keys(errors);\n        keys.forEach(function (val, i) {\n          $('<small class=\"text-danger\" data-type=\"error\" data-name=\"' + val + '\">' + errors[val] + '</small>').insertAfter($this.find('[name=\"' + val + '\"]'));\n        });\n      }\n\n      if (xhr.responseJSON && xhr.responseJSON.message) {\n        alertify.set('notifier', 'position', 'top-right');\n        alertify.notify(xhr.responseJSON.message.text, xhr.responseJSON.message.type);\n      }\n    },\n    success: function success(data, status, xhr) {\n      Swal.fire({\n        icon: 'success',\n        title: 'Success!',\n        text: 'Data berhasil disimpan'\n      }).then(function (result) {\n        window.location.reload();\n      });\n    },\n    complete: function complete(xhr, status) {\n      $this.find('[type=\"submit\"]').prop('disabled', false);\n\n      if (xhr.responseJSON && xhr.responseJSON.csrf) {\n        setCSRFToken(xhr.responseJSON.csrf);\n        reDrawDataTables();\n      } else {\n        Swal.fire({\n          icon: 'error',\n          title: 'Oops...',\n          text: 'Something went wrong!'\n        }).then(function (result) {\n          window.location.reload();\n        });\n      }\n    }\n  });\n}); // var sliderImage = null\n//\n// function readSliderImageFile(input) {\n// \tif (input.files && input.files[0]) {\n//         $('#sliderImageModal').modal('show')\n//         let reader = new FileReader();\n//         reader.onload = function(e) {\n//             setTimeout(function() {\n//                 sliderImage = new Croppie(document.getElementById('sliderImageCropper'), {\n//                     viewport: {\n//                         width: 320,\n//                         height: 140,\n//                         type: 'square'\n//                     },\n//                     boundary: {\n//                         width: 320,\n//                         height: 140\n//                     },\n//                     url: e.target.result,\n//                     enableExif: true\n//                 })\n//             }, 500)\n//         }\n//         reader.readAsDataURL(input.files[0]);\n//     }\n// }\n//\n// $('#inputSliderImage').on('change', function() {\n//     readSliderImageFile(this)\n// })\n// $('#sliderImageModal').on('hide.bs.modal', function(e) {\n//     sliderImage.destroy()\n//     $('#inputSliderImage').val('')\n// })\n//\n// $('#sliderImageModal [data-toggle=\"crop-image\"]').on('click', function(e) {\n// \tsliderImage.result({\n// \t\ttype: 'base64',\n//         format: 'jpeg',\n// \t\tsize: {\n//             width: 1920,\n//             height: 840\n//         }\n// \t}).then(function(resp) {\n// \t\t$('#sliderImagePreview img').attr({\n//             src: resp,\n//             'data-upload': true,\n//             'data-filename': $('#inputSliderImage')[0].files[0].name\n//         })\n//         $('[data-toggle=\"reset-slider-image\"]').removeClass('d-none')\n//         $('[data-toggle=\"reset-slider-image\"]').removeClass('d-none')\n//         $('#sliderImageModal').modal('hide')\n// \t})\n// })\n//\n// function resetSliderImage() {\n//     let $imgTag = $('#sliderImagePreview img')\n//     $imgTag.attr({\n//         src: $imgTag.data('original'),\n//         'data-upload': false,\n//         'data-filename': '',\n//         'data-delete': false\n//     })\n//     $('[data-toggle=\"reset-slider-image\"]').addClass('d-none')\n//     $('[data-toggle=\"delete-slider-image\"]').removeClass('d-none')\n// }\n//\n// function deleteSliderImage() {\n//     let $imgTag = $('#sliderImagePreview img')\n//     $imgTag.attr({\n//         src: $imgTag.data('placeholder'),\n//         'data-upload': false,\n//         'data-filename': '',\n//         'data-delete': true\n//     })\n//     $('[data-toggle=\"reset-slider-image\"]').removeClass('d-none')\n//     $('[data-toggle=\"delete-slider-image\"]').addClass('d-none')\n// }\n//\n// $('[data-toggle=\"reset-slider-image\"]').click(resetSliderImage)\n// $('[data-toggle=\"delete-slider-image\"]').click(deleteSliderImage)\n\nfunction deleteSlider(e) {\n  e.preventDefault();\n  var $this = $(this);\n  Swal.fire({\n    title: \"Hapus data ini?\",\n    text: \"Data akan dihapus selamanya!\",\n    icon: 'warning',\n    showCancelButton: true,\n    confirmButtonText: 'Ya, Hapus!',\n    cancelButtonText: 'Batalkan',\n    customClass: {\n      confirmButton: 'btn btn-danger mr-2',\n      cancelButton: 'btn btn-secondary ml-2'\n    },\n    buttonsStyling: false\n  }).then(function (result) {\n    if (result.isConfirmed) {\n      $.ajax({\n        url: $this.attr('href'),\n        method: 'POST',\n        dataType: 'json',\n        headers: {\n          'X-CSRF-TOKEN': getCSRFToken(),\n          'X-Requested-With': 'XMLHttpRequest'\n        },\n        error: function error(xhr, status, _error53) {\n          if (xhr.responseJSON && xhr.responseJSON.message) {\n            alertify.set('notifier', 'position', 'top-right');\n            alertify.notify(xhr.responseJSON.message.text, xhr.responseJSON.message.type);\n          }\n        },\n        success: function success(data, status, xhr) {\n          Swal.fire({\n            icon: 'success',\n            title: 'Success!',\n            text: 'Data berhasil dihapus'\n          });\n        },\n        complete: function complete(xhr, status) {\n          if (xhr.responseJSON && xhr.responseJSON.csrf) {\n            setCSRFToken(xhr.responseJSON.csrf);\n            reDrawDataTables();\n          } else {\n            Swal.fire({\n              icon: 'error',\n              title: 'Oops...',\n              text: 'Something went wrong!'\n            }).then(function (result) {\n              window.location.reload();\n            });\n          }\n        }\n      });\n    }\n  });\n}\n\nif ($('#dtSlider').length) {\n  var dtSlider = $('#dtSlider').DataTable({\n    processing: true,\n    serverSide: true,\n    ajax: baseURL + \"/data/dt-slider\",\n    columns: [{\n      data: \"slider_image\",\n      orderable: false\n    }, {\n      data: \"created_at\"\n    }, {\n      data: \"action\",\n      orderable: false,\n      className: 'text-right'\n    }],\n    language: dtLanguage,\n    responsive: true,\n    initComplete: function initComplete(setting, json) {\n      redesignDatatables();\n    },\n    drawCallback: function drawCallback(settings) {}\n  });\n  $('#dtSlider tbody').on('click', '[data-toggle=\"delete\"]', deleteSlider);\n}\n\nfunction readSliderImageFile(input) {\n  if (input.files && input.files[0]) {\n    var reader = new FileReader();\n\n    reader.onload = function (e) {\n      $('#sliderImagePreview img').attr('src', e.target.result);\n    };\n\n    reader.readAsDataURL(input.files[0]);\n  }\n}\n\n$('#inputSliderImage').on('change', function () {\n  readSliderImageFile(this);\n});\n$('#formAddSlider').submit(function (e) {\n  e.preventDefault();\n  var $this = $(this);\n  $this.find('[type=\"submit\"]').prop('disabled', true);\n  $this.find('[data-type=\"error\"]').remove();\n  var formData = new FormData(this); // let $imgTag = $('#sliderImagePreview img')\n  // if ($imgTag.data('upload')) {\n  //     let imgSrc = $imgTag.attr('src')\n  //     let base64Image = imgSrc.replace(/^data:image\\/jpeg;base64,/, \"\")\n  //     let blobImage = base64toBlob(base64Image)\n  //     formData.append('slider_image', blobImage, $imgTag.data('filename'))\n  // }\n\n  $.ajax({\n    data: formData,\n    type: 'POST',\n    contentType: false,\n    processData: false,\n    dataType: 'json',\n    headers: {\n      'X-Requested-With': 'XMLHttpRequest'\n    },\n    error: function error(xhr, status, _error54) {\n      if (xhr.responseJSON && xhr.responseJSON.errors) {\n        var errors = xhr.responseJSON.errors;\n        var keys = Object.keys(errors);\n        keys.forEach(function (val, i) {\n          $('<small class=\"text-danger\" data-type=\"error\" data-name=\"' + val + '\">' + errors[val] + '</small>').insertAfter($this.find('[name=\"' + val + '\"]'));\n        });\n      }\n\n      if (xhr.responseJSON && xhr.responseJSON.message) {\n        alertify.set('notifier', 'position', 'top-right');\n        alertify.notify(xhr.responseJSON.message.text, xhr.responseJSON.message.type);\n      }\n    },\n    success: function success(data, status, xhr) {\n      Swal.fire({\n        icon: 'success',\n        title: 'Success!',\n        text: 'Data berhasil disimpan'\n      }).then(function (result) {\n        window.location.reload();\n      });\n    },\n    complete: function complete(xhr, status) {\n      $this.find('[type=\"submit\"]').prop('disabled', false);\n\n      if (xhr.responseJSON && xhr.responseJSON.csrf) {\n        setCSRFToken(xhr.responseJSON.csrf);\n      } else {\n        Swal.fire({\n          icon: 'error',\n          title: 'Oops...',\n          text: 'Something went wrong!'\n        }).then(function (result) {\n          window.location.reload();\n        });\n      }\n    }\n  });\n}); // $('#formEditSlider').submit(function(e) {\n//     e.preventDefault()\n//     let $this = $(this)\n//     $this.find('[type=\"submit\"]').prop('disabled', false)\n//     $this.find('[data-type=\"error\"]').remove()\n//\n//     let formData = new FormData(this)\n//\n//     $.ajax({\n//         data: formData,\n//         type: 'POST',\n//         contentType: false,\n//         processData: false,\n//         dataType: 'json',\n//         headers: {\n//             'X-Requested-With': 'XMLHttpRequest'\n//         },\n//         error: function(xhr, status, error) {\n//             if (xhr.responseJSON && xhr.responseJSON.errors) {\n//                 let errors = xhr.responseJSON.errors\n//                 let keys = Object.keys(errors)\n//                 keys.forEach(function(val, i) {\n//                     $('<small class=\"text-danger\" data-type=\"error\" data-name=\"'+val+'\">'+errors[val]+'</small>').insertAfter($this.find('[name=\"'+val+'\"]'))\n//                 })\n//             }\n//             if (xhr.responseJSON && xhr.responseJSON.message) {\n//                 alertify.set('notifier', 'position', 'top-right')\n//                 alertify.notify(xhr.responseJSON.message.text, xhr.responseJSON.message.type)\n//             }\n//         },\n//         success: function(data, status, xhr) {\n//             Swal.fire({\n//                 icon: 'success',\n//                 title: 'Success!',\n//                 text: 'Data berhasil disimpan'\n//             }).then(function(result) {\n//                 window.location.reload()\n//             })\n//         },\n//         complete: function(xhr, status) {\n//             $this.find('[type=\"submit\"]').prop('disabled', false)\n//             if (xhr.responseJSON && xhr.responseJSON.csrf) {\n//                 setCSRFToken(xhr.responseJSON.csrf)\n//             } else {\n//                 Swal.fire({\n//                     icon: 'error',\n//                     title: 'Oops...',\n//                     text: 'Something went wrong!'\n//                 }).then(function(result) {\n//                     window.location.reload()\n//                 })\n//             }\n//         }\n//     })\n// })\n\n$('#formEditPage').submit(function (e) {\n  e.preventDefault();\n  var $this = $(this);\n  $this.find('[type=\"submit\"]').prop('disabled', false);\n  $this.find('[data-type=\"error\"]').remove();\n  var formData = new FormData(this);\n  var content = editor.getData();\n\n  if (!content.length) {\n    $('<small class=\"text-danger\" data-type=\"error\" data-name=\"content\">Konten tidak boleh kosong</small>').insertAfter($this.find('.ck-editor'));\n    editor.focus();\n    $this.find('[type=\"submit\"]').prop('disabled', false);\n  } else {\n    formData.append('content', content);\n    $.ajax({\n      data: formData,\n      type: 'POST',\n      contentType: false,\n      processData: false,\n      dataType: 'json',\n      headers: {\n        'X-Requested-With': 'XMLHttpRequest'\n      },\n      error: function error(xhr, status, _error55) {\n        if (xhr.responseJSON && xhr.responseJSON.errors) {\n          var errors = xhr.responseJSON.errors;\n          var keys = Object.keys(errors);\n          keys.forEach(function (val, i) {\n            $('<small class=\"text-danger\" data-type=\"error\" data-name=\"' + val + '\">' + errors[val] + '</small>').insertAfter($this.find('[name=\"' + val + '\"]'));\n          });\n        }\n\n        if (xhr.responseJSON && xhr.responseJSON.message) {\n          alertify.set('notifier', 'position', 'top-right');\n          alertify.notify(xhr.responseJSON.message.text, xhr.responseJSON.message.type);\n        }\n      },\n      success: function success(data, status, xhr) {\n        Swal.fire({\n          icon: 'success',\n          title: 'Success!',\n          text: 'Data berhasil disimpan'\n        }).then(function (result) {\n          window.location.reload();\n        });\n      },\n      complete: function complete(xhr, status) {\n        $this.find('[type=\"submit\"]').prop('disabled', false);\n\n        if (xhr.responseJSON && xhr.responseJSON.csrf) {\n          setCSRFToken(xhr.responseJSON.csrf);\n        } else {\n          Swal.fire({\n            icon: 'error',\n            title: 'Oops...',\n            text: 'Something went wrong!'\n          }).then(function (result) {\n            window.location.reload();\n          });\n        }\n      }\n    });\n  }\n});\nvar features = [];\nvar featureChildren = $('#listFeatures').children();\n\nif (featureChildren.length) {\n  featureChildren.each(function () {\n    features.push($.trim($(this).text()));\n  });\n}\n\nfunction renderFeatures() {\n  var htmlFeatures = '';\n  features.forEach(function (feature, i) {\n    htmlFeatures += '<li>' + feature.replace(/(?:\\r\\n|\\r|\\n)/g, '<br>') + ' <a href=\"javascript:void(0)\" class=\"text-danger\" data-toggle=\"delete-feature\" data-key=\"' + i + '\"><i class=\"fas fa-times\"></i></a></li>';\n  });\n  $('#listFeatures').html(htmlFeatures);\n}\n\n$('#listFeatures').on('click', '[data-toggle=\"delete-feature\"]', function (e) {\n  var key = parseInt($(this).data('key'));\n  var _features = [];\n  features.forEach(function (feature, i) {\n    if (key != i) {\n      _features.push(feature);\n    }\n  });\n  features = _features;\n  renderFeatures();\n});\n$('#features [data-toggle=\"add-feature\"]').click(function (e) {\n  var feature = $('#features [data-name=\"feature\"]').val();\n  $('#features [data-type=\"error\"]').remove();\n\n  if (!feature.length) {\n    $('<small class=\"text-danger\" data-type=\"error\">Bidang ini tidak boleh kosong</small>').insertAfter($('#features [data-name=\"feature\"]'));\n  } else {\n    features.push(feature);\n    renderFeatures();\n    $('#features [data-name=\"feature\"]').val('').trigger('focus');\n  }\n});\nvar credits = [];\nvar creditChildren = $('#listCredits tbody').children();\n\nif (creditChildren.length) {\n  creditChildren.each(function () {\n    var credit = {};\n    $(this).children().each(function (i) {\n      if (i == 0) {\n        var text = $(this).text();\n        credit.month = parseInt(text.replace(/[( Bulan)]/g, ''));\n      }\n\n      if (i == 1) {\n        var _text = $(this).text();\n\n        credit.amount = parseInt(_text.replace(/[(Rp )|.]/g, ''));\n      }\n    });\n    credits.push(credit);\n  });\n}\n\nfunction renderCredits() {\n  var htmlCredits = '';\n  credits.forEach(function (credit, i) {\n    htmlCredits += '<tr><td>' + credit.month + ' Bulan</td><td>Rp ' + credit.amount.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \".\") + '</td><td><a href=\"javascript:void(0)\" class=\"text-danger\" data-toggle=\"delete-credit\" data-key=\"' + i + '\"><i class=\"fas fa-times\"></i></a></td>';\n  });\n  $('#listCredits tbody').html(htmlCredits);\n}\n\n$('#listCredits tbody').on('click', '[data-toggle=\"delete-credit\"]', function (e) {\n  var key = parseInt($(this).data('key'));\n  var _credits = [];\n  credits.forEach(function (credit, i) {\n    if (key != i) {\n      _credits.push(credit);\n    }\n  });\n  credits = _credits;\n  renderCredits();\n});\n$('#credits [data-toggle=\"add-credit\"]').click(function (e) {\n  var month = $('#credits [data-name=\"month\"]').val();\n  var amount = $('#credits [data-name=\"amount\"]').val();\n  $('#credits [data-type=\"error\"]').remove();\n\n  if (!month.length || !amount.length) {\n    if (!month.length) {\n      $('<small class=\"text-danger\" data-type=\"error\">Bidang ini tidak boleh kosong</small>').insertAfter($('#credits [data-name=\"month\"]'));\n    }\n\n    if (!amount.length) {\n      $('<small class=\"text-danger\" data-type=\"error\">Bidang ini tidak boleh kosong</small>').insertAfter($('#credits [data-name=\"amount\"]'));\n    }\n  } else {\n    credits.push({\n      month: month,\n      amount: amount\n    });\n    renderCredits();\n    $('#credits [data-name=\"month\"]').val('').trigger('focus');\n    $('#credits [data-name=\"amount\"]').val('');\n  }\n});\n\nfunction deletePackage(e) {\n  e.preventDefault();\n  var $this = $(this);\n  Swal.fire({\n    title: \"Hapus data ini?\",\n    text: \"Data akan dihapus selamanya!\",\n    icon: 'warning',\n    showCancelButton: true,\n    confirmButtonText: 'Ya, Hapus!',\n    cancelButtonText: 'Batalkan',\n    customClass: {\n      confirmButton: 'btn btn-danger mr-2',\n      cancelButton: 'btn btn-secondary ml-2'\n    },\n    buttonsStyling: false\n  }).then(function (result) {\n    if (result.isConfirmed) {\n      $.ajax({\n        url: $this.attr('href'),\n        method: 'POST',\n        dataType: 'json',\n        headers: {\n          'X-CSRF-TOKEN': getCSRFToken(),\n          'X-Requested-With': 'XMLHttpRequest'\n        },\n        error: function error(xhr, status, _error56) {\n          if (xhr.responseJSON && xhr.responseJSON.message) {\n            alertify.set('notifier', 'position', 'top-right');\n            alertify.notify(xhr.responseJSON.message.text, xhr.responseJSON.message.type);\n          }\n        },\n        success: function success(data, status, xhr) {\n          Swal.fire({\n            icon: 'success',\n            title: 'Success!',\n            text: 'Data berhasil dihapus'\n          });\n        },\n        complete: function complete(xhr, status) {\n          if (xhr.responseJSON && xhr.responseJSON.csrf) {\n            setCSRFToken(xhr.responseJSON.csrf);\n            reDrawDataTables();\n          } else {\n            Swal.fire({\n              icon: 'error',\n              title: 'Oops...',\n              text: 'Something went wrong!'\n            }).then(function (result) {\n              window.location.reload();\n            });\n          }\n        }\n      });\n    }\n  });\n}\n\nif ($('#dtPackage').length) {\n  var dtPackage = $('#dtPackage').DataTable({\n    processing: true,\n    serverSide: true,\n    ajax: baseURL + \"/data/dt-package\",\n    columns: [{\n      data: \"name\"\n    }, {\n      data: \"price\"\n    }, {\n      data: \"features\",\n      orderable: false\n    }, {\n      data: \"down_payment\"\n    }, {\n      data: \"credits\",\n      orderable: false\n    }, {\n      data: \"action\",\n      orderable: false,\n      className: 'text-right'\n    }],\n    language: dtLanguage,\n    responsive: true,\n    initComplete: function initComplete(setting, json) {\n      redesignDatatables();\n    },\n    drawCallback: function drawCallback(settings) {}\n  });\n  $('#dtPackage tbody').on('click', '[data-toggle=\"delete\"]', deletePackage);\n}\n\nvar packageImage = null;\n\nfunction readPackageImageFile(input) {\n  if (input.files && input.files[0]) {\n    $('#packageImageModal').modal('show');\n    var reader = new FileReader();\n\n    reader.onload = function (e) {\n      setTimeout(function () {\n        packageImage = new Croppie(document.getElementById('packageImageCropper'), {\n          viewport: {\n            width: 320,\n            height: 240,\n            type: 'square'\n          },\n          boundary: {\n            width: 360,\n            height: 280\n          },\n          url: e.target.result,\n          enableExif: true\n        });\n      }, 500);\n    };\n\n    reader.readAsDataURL(input.files[0]);\n  }\n}\n\n$('#inputPackageImage').on('change', function () {\n  readPackageImageFile(this);\n});\n$('#packageImageModal').on('hide.bs.modal', function (e) {\n  packageImage.destroy();\n  $('#inputPackageImage').val('');\n});\n$('#packageImageModal [data-toggle=\"crop-image\"]').on('click', function (e) {\n  packageImage.result({\n    type: 'base64',\n    format: 'jpeg',\n    size: {\n      width: 800,\n      height: 600\n    }\n  }).then(function (resp) {\n    $('#packageImagePreview img').attr({\n      src: resp,\n      'data-upload': true,\n      'data-filename': $('#inputPackageImage')[0].files[0].name\n    });\n    $('[data-toggle=\"reset-package-image\"]').removeClass('d-none');\n    $('[data-toggle=\"reset-package-image\"]').removeClass('d-none');\n    $('#packageImageModal').modal('hide');\n  });\n});\n\nfunction resetPackageImage() {\n  var $imgTag = $('#packageImagePreview img');\n  $imgTag.attr({\n    src: $imgTag.data('original'),\n    'data-upload': false,\n    'data-delete': false\n  });\n  $('[data-toggle=\"reset-package-image\"]').addClass('d-none');\n  $('[data-toggle=\"delete-package-image\"]').removeClass('d-none');\n}\n\nfunction deletePackageImage() {\n  var $imgTag = $('#packageImagePreview img');\n  $imgTag.attr({\n    src: $imgTag.data('placeholder'),\n    'data-upload': false,\n    'data-delete': true\n  });\n  $('[data-toggle=\"reset-package-image\"]').removeClass('d-none');\n  $('[data-toggle=\"delete-package-image\"]').addClass('d-none');\n}\n\n$('[data-toggle=\"reset-package-image\"]').click(resetPackageImage);\n$('[data-toggle=\"delete-package-image\"]').click(deletePackageImage);\n$('#formAddPackage').submit(function (e) {\n  e.preventDefault();\n  var $this = $(this);\n  $this.find('[type=\"submit\"]').prop('disabled', true);\n  $this.find('[data-type=\"error\"]').remove();\n  var formData = new FormData(this);\n  var $imgTag = $('#packageImagePreview img');\n\n  if ($imgTag.data('upload')) {\n    var imgSrc = $imgTag.attr('src');\n    var base64Image = imgSrc.replace(/^data:image\\/jpeg;base64,/, \"\");\n    var blobImage = base64toBlob(base64Image);\n    formData.append('package_image', blobImage, $imgTag.data('filename'));\n  }\n\n  if (!features.length || !credits.length) {\n    if (!credits.length) {\n      $('<small class=\"text-danger ml-2\" data-type=\"error\" data-name=\"credits\">Data kredit diperlukan</small>').insertAfter($('#credits [data-toggle=\"add-credit\"]'));\n      $('#credits [data-name=\"month\"]').trigger('focus');\n    }\n\n    if (!features.length) {\n      $('<small class=\"text-danger ml-2\" data-type=\"error\" data-name=\"features\">Data fitur diperlukan</small>').insertAfter($('#features [data-toggle=\"add-feature\"]'));\n      $('#features [data-name=\"feature\"]').trigger('focus');\n    }\n  } else {\n    var content = editor.getData();\n    formData.append('description', content);\n    formData.append('features', JSON.stringify(features));\n    formData.append('credits', JSON.stringify(credits));\n    $.ajax({\n      data: formData,\n      type: 'POST',\n      contentType: false,\n      processData: false,\n      dataType: 'json',\n      headers: {\n        'X-Requested-With': 'XMLHttpRequest'\n      },\n      error: function error(xhr, status, _error57) {\n        if (xhr.responseJSON && xhr.responseJSON.errors) {\n          var errors = xhr.responseJSON.errors;\n          var keys = Object.keys(errors);\n          keys.forEach(function (val, i) {\n            $('<small class=\"text-danger\" data-type=\"error\" data-name=\"' + val + '\">' + errors[val] + '</small>').insertAfter($this.find('[name=\"' + val + '\"]'));\n          });\n        }\n\n        if (xhr.responseJSON && xhr.responseJSON.message) {\n          alertify.set('notifier', 'position', 'top-right');\n          alertify.notify(xhr.responseJSON.message.text, xhr.responseJSON.message.type);\n        }\n      },\n      success: function success(data, status, xhr) {\n        Swal.fire({\n          icon: 'success',\n          title: 'Success!',\n          text: 'Data berhasil disimpan'\n        }).then(function (result) {\n          window.location.reload();\n        });\n      },\n      complete: function complete(xhr, status) {\n        $this.find('[type=\"submit\"]').prop('disabled', false);\n\n        if (xhr.responseJSON && xhr.responseJSON.csrf) {\n          setCSRFToken(xhr.responseJSON.csrf);\n        } else {\n          Swal.fire({\n            icon: 'error',\n            title: 'Oops...',\n            text: 'Something went wrong!'\n          }).then(function (result) {\n            window.location.reload();\n          });\n        }\n      }\n    });\n  }\n});\n$('#formEditPackage').submit(function (e) {\n  e.preventDefault();\n  var $this = $(this);\n  $this.find('[type=\"submit\"]').prop('disabled', false);\n  $this.find('[data-type=\"error\"]').remove();\n  var formData = new FormData(this);\n  var $imgTag = $('#packageImagePreview img');\n\n  if ($imgTag.data('upload') && !$imgTag.data('delete')) {\n    var imgSrc = $imgTag.attr('src');\n    var base64Image = imgSrc.replace(/^data:image\\/jpeg;base64,/, \"\");\n    var blobImage = base64toBlob(base64Image);\n    formData.append('package_image', blobImage, $imgTag.data('filename'));\n  }\n\n  if (!$imgTag.data('upload') && $imgTag.data('delete')) {\n    formData.append('delete_image', true);\n  }\n\n  if (!features.length || !credits.length) {\n    if (!credits.length) {\n      $('<small class=\"text-danger ml-2\" data-type=\"error\" data-name=\"credits\">Data kredit diperlukan</small>').insertAfter($('#credits [data-toggle=\"add-credit\"]'));\n      $('#credits [data-name=\"month\"]').trigger('focus');\n    }\n\n    if (!features.length) {\n      $('<small class=\"text-danger ml-2\" data-type=\"error\" data-name=\"features\">Data fitur diperlukan</small>').insertAfter($('#features [data-toggle=\"add-feature\"]'));\n      $('#features [data-name=\"feature\"]').trigger('focus');\n    }\n  } else {\n    var content = editor.getData();\n    formData.append('description', content);\n    formData.append('features', JSON.stringify(features));\n    formData.append('credits', JSON.stringify(credits));\n    $.ajax({\n      data: formData,\n      type: 'POST',\n      contentType: false,\n      processData: false,\n      dataType: 'json',\n      headers: {\n        'X-Requested-With': 'XMLHttpRequest'\n      },\n      error: function error(xhr, status, _error58) {\n        if (xhr.responseJSON && xhr.responseJSON.errors) {\n          var errors = xhr.responseJSON.errors;\n          var keys = Object.keys(errors);\n          keys.forEach(function (val, i) {\n            $('<small class=\"text-danger\" data-type=\"error\" data-name=\"' + val + '\">' + errors[val] + '</small>').insertAfter($this.find('[name=\"' + val + '\"]'));\n          });\n        }\n\n        if (xhr.responseJSON && xhr.responseJSON.message) {\n          alertify.set('notifier', 'position', 'top-right');\n          alertify.notify(xhr.responseJSON.message.text, xhr.responseJSON.message.type);\n        }\n      },\n      success: function success(data, status, xhr) {\n        Swal.fire({\n          icon: 'success',\n          title: 'Success!',\n          text: 'Data berhasil disimpan'\n        }).then(function (result) {\n          window.location.reload();\n        });\n      },\n      complete: function complete(xhr, status) {\n        $this.find('[type=\"submit\"]').prop('disabled', false);\n\n        if (xhr.responseJSON && xhr.responseJSON.csrf) {\n          setCSRFToken(xhr.responseJSON.csrf);\n        } else {\n          Swal.fire({\n            icon: 'error',\n            title: 'Oops...',\n            text: 'Something went wrong!'\n          }).then(function (result) {\n            window.location.reload();\n          });\n        }\n      }\n    });\n  }\n});\n\nfunction deleteBranch(e) {\n  e.preventDefault();\n  var $this = $(this);\n  Swal.fire({\n    title: \"Hapus data ini?\",\n    text: \"Data akan dihapus selamanya!\",\n    icon: 'warning',\n    showCancelButton: true,\n    confirmButtonText: 'Ya, Hapus!',\n    cancelButtonText: 'Batalkan',\n    customClass: {\n      confirmButton: 'btn btn-danger mr-2',\n      cancelButton: 'btn btn-secondary ml-2'\n    },\n    buttonsStyling: false\n  }).then(function (result) {\n    if (result.isConfirmed) {\n      $.ajax({\n        url: $this.attr('href'),\n        method: 'POST',\n        dataType: 'json',\n        headers: {\n          'X-CSRF-TOKEN': getCSRFToken(),\n          'X-Requested-With': 'XMLHttpRequest'\n        },\n        error: function error(xhr, status, _error59) {\n          if (xhr.responseJSON && xhr.responseJSON.message) {\n            alertify.set('notifier', 'position', 'top-right');\n            alertify.notify(xhr.responseJSON.message.text, xhr.responseJSON.message.type);\n          }\n        },\n        success: function success(data, status, xhr) {\n          Swal.fire({\n            icon: 'success',\n            title: 'Success!',\n            text: 'Data berhasil dihapus'\n          });\n        },\n        complete: function complete(xhr, status) {\n          if (xhr.responseJSON && xhr.responseJSON.csrf) {\n            setCSRFToken(xhr.responseJSON.csrf);\n            reDrawDataTables();\n          } else {\n            Swal.fire({\n              icon: 'error',\n              title: 'Oops...',\n              text: 'Something went wrong!'\n            }).then(function (result) {\n              window.location.reload();\n            });\n          }\n        }\n      });\n    }\n  });\n}\n\nif ($('#dtBranch').length) {\n  var dtBranch = $('#dtBranch').DataTable({\n    processing: true,\n    serverSide: true,\n    ajax: baseURL + \"/data/dt-branch\",\n    columns: [{\n      data: \"name\"\n    }, {\n      data: \"contact\",\n      orderable: false\n    }, {\n      data: \"regency\"\n    }, {\n      data: \"address\"\n    }, {\n      data: \"action\",\n      orderable: false,\n      className: 'text-right'\n    }],\n    language: dtLanguage,\n    responsive: true,\n    initComplete: function initComplete(setting, json) {\n      redesignDatatables();\n    },\n    drawCallback: function drawCallback(settings) {}\n  });\n  $('#dtBranch tbody').on('click', '[data-toggle=\"delete\"]', deleteBranch);\n}\n\n$('#formAddBranch').submit(function (e) {\n  e.preventDefault();\n  var $this = $(this);\n  $this.find('[type=\"submit\"]').prop('disabled', true);\n  $this.find('[data-type=\"error\"]').remove();\n  var formData = new FormData(this);\n  $.ajax({\n    data: formData,\n    type: 'POST',\n    contentType: false,\n    processData: false,\n    dataType: 'json',\n    headers: {\n      'X-Requested-With': 'XMLHttpRequest'\n    },\n    error: function error(xhr, status, _error60) {\n      if (xhr.responseJSON && xhr.responseJSON.errors) {\n        var errors = xhr.responseJSON.errors;\n        var keys = Object.keys(errors);\n        keys.forEach(function (val, i) {\n          $('<small class=\"text-danger\" data-type=\"error\" data-name=\"' + val + '\">' + errors[val] + '</small>').insertAfter($this.find('[name=\"' + val + '\"]'));\n        });\n      }\n\n      if (xhr.responseJSON && xhr.responseJSON.message) {\n        alertify.set('notifier', 'position', 'top-right');\n        alertify.notify(xhr.responseJSON.message.text, xhr.responseJSON.message.type);\n      }\n    },\n    success: function success(data, status, xhr) {\n      Swal.fire({\n        icon: 'success',\n        title: 'Success!',\n        text: 'Data berhasil disimpan'\n      }).then(function (result) {\n        window.location.reload();\n      });\n    },\n    complete: function complete(xhr, status) {\n      $this.find('[type=\"submit\"]').prop('disabled', false);\n\n      if (xhr.responseJSON && xhr.responseJSON.csrf) {\n        setCSRFToken(xhr.responseJSON.csrf);\n      } else {\n        Swal.fire({\n          icon: 'error',\n          title: 'Oops...',\n          text: 'Something went wrong!'\n        }).then(function (result) {\n          window.location.reload();\n        });\n      }\n    }\n  });\n});\n$('#formEditBranch').submit(function (e) {\n  e.preventDefault();\n  var $this = $(this);\n  $this.find('[type=\"submit\"]').prop('disabled', false);\n  $this.find('[data-type=\"error\"]').remove();\n  var formData = new FormData(this);\n  $.ajax({\n    data: formData,\n    type: 'POST',\n    contentType: false,\n    processData: false,\n    dataType: 'json',\n    headers: {\n      'X-Requested-With': 'XMLHttpRequest'\n    },\n    error: function error(xhr, status, _error61) {\n      if (xhr.responseJSON && xhr.responseJSON.errors) {\n        var errors = xhr.responseJSON.errors;\n        var keys = Object.keys(errors);\n        keys.forEach(function (val, i) {\n          $('<small class=\"text-danger\" data-type=\"error\" data-name=\"' + val + '\">' + errors[val] + '</small>').insertAfter($this.find('[name=\"' + val + '\"]'));\n        });\n      }\n\n      if (xhr.responseJSON && xhr.responseJSON.message) {\n        alertify.set('notifier', 'position', 'top-right');\n        alertify.notify(xhr.responseJSON.message.text, xhr.responseJSON.message.type);\n      }\n    },\n    success: function success(data, status, xhr) {\n      Swal.fire({\n        icon: 'success',\n        title: 'Success!',\n        text: 'Data berhasil disimpan'\n      }).then(function (result) {\n        window.location.reload();\n      });\n    },\n    complete: function complete(xhr, status) {\n      $this.find('[type=\"submit\"]').prop('disabled', false);\n\n      if (xhr.responseJSON && xhr.responseJSON.csrf) {\n        setCSRFToken(xhr.responseJSON.csrf);\n      } else {\n        Swal.fire({\n          icon: 'error',\n          title: 'Oops...',\n          text: 'Something went wrong!'\n        }).then(function (result) {\n          window.location.reload();\n        });\n      }\n    }\n  });\n});\n\nif ($('#dtProspect').length) {\n  var _columns = [{\n    data: \"name\"\n  }, {\n    data: \"registration_code\"\n  }, {\n    data: \"status\"\n  }, {\n    data: 'created_at'\n  }, {\n    data: \"action\",\n    orderable: false,\n    className: 'text-right'\n  }];\n\n  if (loggedInUser.role != 'member') {\n    _columns = [{\n      data: \"name\"\n    }, {\n      data: \"sponsor\"\n    }, {\n      data: \"registration_code\"\n    }, {\n      data: \"status\"\n    }, {\n      data: 'created_at'\n    }, {\n      data: \"action\",\n      orderable: false,\n      className: 'text-right'\n    }];\n  }\n\n  var dtProspect = $('#dtProspect').DataTable({\n    processing: true,\n    serverSide: true,\n    ajax: baseURL + \"/data/dt-prospect\",\n    columns: _columns,\n    language: dtLanguage,\n    responsive: true,\n    initComplete: function initComplete(setting, json) {\n      redesignDatatables();\n    },\n    drawCallback: function drawCallback(settings) {\n      var json = settings.json;\n      var sum = [{\n        name: \"total\",\n        value: json.recordsTotal\n      }, {\n        name: \"unpaid\",\n        value: json.unpaid\n      }, {\n        name: \"paid\",\n        value: json.paid\n      }, {\n        name: \"registered\",\n        value: json.registered\n      }];\n      var $el = $('#prospectSummary');\n      setDataSummary($el, sum);\n    }\n  });\n}\n\n$('[data-toggle=\"copy-to-clipboard\"]').click(function (e) {\n  var target = $(this).data('target');\n  var copyText = document.getElementById(target);\n  copyText.select();\n  copyText.setSelectionRange(0, 99999);\n  document.execCommand(\"copy\");\n  alertify.set('notifier', 'position', 'top-right');\n  alertify.notify('Text telah berhasil dicopy', 'success');\n});\n$('#formProspectConfirmation').on('change', '[name=\"create_new\"]', function (e) {\n  if (e.target.value == '0') {\n    $('#selectSerialGroup').toggle('show');\n    $('#selectSerialGroup').find('[data-target=\"#selectSerialModal\"]').trigger('click');\n  }\n\n  if (e.target.value == '1') {\n    $('#selectSerialGroup').toggle('hide');\n  }\n});\n$('#selectSerialModal').on('click', '[data-toggle=\"select-prospect-serial\"]', function (e) {\n  var $selectedSerial = $(selectedSerial);\n  var serialID = $selectedSerial.data('id');\n  var serial = $selectedSerial.find('[data-name=\"serial\"]').data('value');\n  var pin = $selectedSerial.find('[data-name=\"pin\"]').data('value');\n  var $parent = $('#formProspectConfirmation');\n  $parent.find('input[name=\"serial\"]').val(serialID);\n  $parent.find('[data-name=\"serial\"]').html(serial);\n  $parent.find('[data-name=\"pin\"]').html(pin);\n  $('#selectSerialModal').modal('hide');\n});\n$('#formProspectConfirmation').submit(function (e) {\n  e.preventDefault();\n  var $this = $(this);\n  $this.find('[type=\"submit\"]').prop('disabled', true);\n  var serializeArr = $(this).serializeArray();\n  var serializeObj = {};\n  serializeArr.map(function (obj, i) {\n    serializeObj[obj.name] = obj.value;\n  });\n\n  if (serializeObj.create_new == '0' && !serializeObj.serial) {\n    Swal.fire({\n      icon: 'error',\n      title: 'Oops...',\n      text: 'Silahkan pilih Serial & PIN terlebih dahulu!'\n    }).then(function (result) {\n      $this.find('[type=\"submit\"]').prop('disabled', false);\n      $this.find('[data-target=\"#selectSerialModal\"]').trigger('click');\n    });\n    return;\n  }\n\n  var formData = new FormData(this);\n  Swal.fire({\n    title: \"Konfirmasi pembayaran calon member ini?\",\n    text: \"Calon member akan siap didaftarkan menjadi member\",\n    icon: 'warning',\n    showCancelButton: true,\n    confirmButtonText: 'Ya, konfirmasi!',\n    cancelButtonText: 'Batalkan',\n    customClass: {\n      confirmButton: 'btn btn-info mr-2',\n      cancelButton: 'btn btn-secondary ml-2'\n    },\n    buttonsStyling: false\n  }).then(function (result) {\n    if (result.isConfirmed) {\n      $.ajax({\n        url: $this.attr('href'),\n        data: formData,\n        method: 'POST',\n        contentType: false,\n        processData: false,\n        dataType: 'json',\n        headers: {\n          'X-CSRF-TOKEN': getCSRFToken(),\n          'X-Requested-With': 'XMLHttpRequest'\n        },\n        error: function error(xhr, status, _error62) {\n          if (xhr.responseJSON && xhr.responseJSON.message) {\n            alertify.set('notifier', 'position', 'top-right');\n            alertify.notify(xhr.responseJSON.message.text, xhr.responseJSON.message.type);\n          }\n        },\n        success: function success(data, status, xhr) {\n          Swal.fire({\n            icon: 'success',\n            title: 'Success!',\n            text: 'Pembayaran telah berhasil dikonfirmasi',\n            timer: 3000,\n            showConfirmButton: false\n          }).then(function (result) {\n            window.location = baseURL + '/prospect';\n          });\n        },\n        complete: function complete(xhr, status) {\n          if (xhr.responseJSON && xhr.responseJSON.csrf) {\n            setCSRFToken(xhr.responseJSON.csrf);\n            reDrawDataTables();\n          } else {\n            Swal.fire({\n              icon: 'error',\n              title: 'Oops...',\n              text: 'Something went wrong!'\n            }).then(function (result) {\n              window.location.reload();\n            });\n          }\n        }\n      });\n    } else {\n      $this.find('[type=\"submit\"]').prop('disabled', false);\n    }\n  });\n});\n$('#conteinerProspectRegistration').on('click', '[data-toggle=\"add-member-modal\"]', function (e) {\n  var $this = $(this);\n  var uplineID = $this.data('upline');\n  var position = $this.data('position');\n  $('#formProspectRegistration').find('input[name=\"upline\"]').val(uplineID);\n  $('#formProspectRegistration').find('input[name=\"position\"]').val(position);\n  $('#formProspectRegistration').trigger('submit');\n});\n$('#formProspectRegistration').submit(function (e) {\n  e.preventDefault();\n  var $this = $(this); // $this.find('[type=\"submit\"]').prop('disabled', true)\n\n  var serializeArr = $(this).serializeArray();\n  var serializeObj = {};\n  serializeArr.map(function (obj, i) {\n    serializeObj[obj.name] = obj.value;\n  });\n\n  if (!serializeObj.upline || !serializeObj.position) {\n    Swal.fire({\n      icon: 'error',\n      title: 'Oops...',\n      text: 'Silahkan pilih posisi penempatan terlebih dahulu!'\n    }).then(function (result) {// $this.find('[type=\"submit\"]').prop('disabled', false)\n    });\n    return;\n  }\n\n  var formData = new FormData(this);\n  Swal.fire({\n    title: \"Daftarkan member?\",\n    text: \"Member akan didaftarkan pada posisi ini\",\n    icon: 'warning',\n    showCancelButton: true,\n    confirmButtonText: 'Ya, daftarkan!',\n    cancelButtonText: 'Batalkan',\n    customClass: {\n      confirmButton: 'btn btn-info mr-2',\n      cancelButton: 'btn btn-secondary ml-2'\n    },\n    buttonsStyling: false\n  }).then(function (result) {\n    if (result.isConfirmed) {\n      $.ajax({\n        url: $this.attr('href'),\n        data: formData,\n        method: 'POST',\n        contentType: false,\n        processData: false,\n        dataType: 'json',\n        headers: {\n          'X-CSRF-TOKEN': getCSRFToken(),\n          'X-Requested-With': 'XMLHttpRequest'\n        },\n        error: function error(xhr, status, _error63) {\n          if (xhr.responseJSON && xhr.responseJSON.message) {\n            alertify.set('notifier', 'position', 'top-right');\n            alertify.notify(xhr.responseJSON.message.text, xhr.responseJSON.message.type);\n          }\n        },\n        success: function success(data, status, xhr) {\n          Swal.fire({\n            icon: 'success',\n            title: 'Success!',\n            text: 'Member telah berhasil didaftarkan',\n            timer: 3000,\n            showConfirmButton: false\n          }).then(function (result) {\n            window.location = baseURL + '/prospect';\n          });\n        },\n        complete: function complete(xhr, status) {\n          if (xhr.responseJSON && xhr.responseJSON.csrf) {\n            setCSRFToken(xhr.responseJSON.csrf);\n            reDrawDataTables();\n          } else {\n            Swal.fire({\n              icon: 'error',\n              title: 'Oops...',\n              text: 'Something went wrong!'\n            }).then(function (result) {\n              window.location.reload();\n            });\n          }\n        }\n      });\n    } else {// $this.find('[type=\"submit\"]').prop('disabled', false)\n    }\n  });\n});\n\nif ($('#dtSubscriber').length) {\n  var dtSubscriber = $('#dtSubscriber').DataTable({\n    processing: true,\n    serverSide: true,\n    ajax: baseURL + \"/data/dt-subscriber\",\n    columns: [{\n      data: \"email\"\n    }, {\n      data: \"user_agent\"\n    }, {\n      data: \"ip_address\"\n    }, {\n      data: \"status\"\n    }, {\n      data: 'created_at'\n    }],\n    language: dtLanguage,\n    responsive: true,\n    initComplete: function initComplete(setting, json) {\n      redesignDatatables();\n    },\n    drawCallback: function drawCallback(settings) {\n      var json = settings.json;\n      var sum = [{\n        name: \"total\",\n        value: json.recordsTotal\n      }, {\n        name: \"subscribe\",\n        value: json.subscribe\n      }, {\n        name: \"unsubscribe\",\n        value: json.unsubscribe\n      }];\n      var $el = $('#subscriberSummary');\n      setDataSummary($el, sum);\n    }\n  });\n}\n\nif ($('#dtInbox').length) {\n  var dtInbox = $('#dtInbox').DataTable({\n    processing: true,\n    serverSide: true,\n    ajax: baseURL + \"/data/dt-inbox\",\n    columns: [{\n      data: \"name\"\n    }, {\n      data: \"subject\"\n    }, {\n      data: 'created_at'\n    }],\n    language: dtLanguage,\n    responsive: true,\n    initComplete: function initComplete(setting, json) {\n      redesignDatatables();\n    },\n    drawCallback: function drawCallback(settings) {}\n  });\n} // $('a[data-toggle=\"tab\"]').on('shown.bs.tab', function (e) {\n//     let tab = $(e.target).attr('aria-controls')\n//     var q = queryString.parse(location.search)\n//     q.tab = tab\n//     location.search = queryString.stringify(q)\n// })\n\n//# sourceURL=webpack://travel-umroh/./src/js/index.js?");

/***/ }),

/***/ "./node_modules/decode-uri-component/index.js":
/*!****************************************************!*\
  !*** ./node_modules/decode-uri-component/index.js ***!
  \****************************************************/
/*! unknown exports (runtime-defined) */
/*! runtime requirements: module */
/***/ ((module) => {

"use strict";
eval("\nvar token = '%[a-f0-9]{2}';\nvar singleMatcher = new RegExp(token, 'gi');\nvar multiMatcher = new RegExp('(' + token + ')+', 'gi');\n\nfunction decodeComponents(components, split) {\n\ttry {\n\t\t// Try to decode the entire string first\n\t\treturn decodeURIComponent(components.join(''));\n\t} catch (err) {\n\t\t// Do nothing\n\t}\n\n\tif (components.length === 1) {\n\t\treturn components;\n\t}\n\n\tsplit = split || 1;\n\n\t// Split the array in 2 parts\n\tvar left = components.slice(0, split);\n\tvar right = components.slice(split);\n\n\treturn Array.prototype.concat.call([], decodeComponents(left), decodeComponents(right));\n}\n\nfunction decode(input) {\n\ttry {\n\t\treturn decodeURIComponent(input);\n\t} catch (err) {\n\t\tvar tokens = input.match(singleMatcher);\n\n\t\tfor (var i = 1; i < tokens.length; i++) {\n\t\t\tinput = decodeComponents(tokens, i).join('');\n\n\t\t\ttokens = input.match(singleMatcher);\n\t\t}\n\n\t\treturn input;\n\t}\n}\n\nfunction customDecodeURIComponent(input) {\n\t// Keep track of all the replacements and prefill the map with the `BOM`\n\tvar replaceMap = {\n\t\t'%FE%FF': '\\uFFFD\\uFFFD',\n\t\t'%FF%FE': '\\uFFFD\\uFFFD'\n\t};\n\n\tvar match = multiMatcher.exec(input);\n\twhile (match) {\n\t\ttry {\n\t\t\t// Decode as big chunks as possible\n\t\t\treplaceMap[match[0]] = decodeURIComponent(match[0]);\n\t\t} catch (err) {\n\t\t\tvar result = decode(match[0]);\n\n\t\t\tif (result !== match[0]) {\n\t\t\t\treplaceMap[match[0]] = result;\n\t\t\t}\n\t\t}\n\n\t\tmatch = multiMatcher.exec(input);\n\t}\n\n\t// Add `%C2` at the end of the map to make sure it does not replace the combinator before everything else\n\treplaceMap['%C2'] = '\\uFFFD';\n\n\tvar entries = Object.keys(replaceMap);\n\n\tfor (var i = 0; i < entries.length; i++) {\n\t\t// Replace all decoded components\n\t\tvar key = entries[i];\n\t\tinput = input.replace(new RegExp(key, 'g'), replaceMap[key]);\n\t}\n\n\treturn input;\n}\n\nmodule.exports = function (encodedURI) {\n\tif (typeof encodedURI !== 'string') {\n\t\tthrow new TypeError('Expected `encodedURI` to be of type `string`, got `' + typeof encodedURI + '`');\n\t}\n\n\ttry {\n\t\tencodedURI = encodedURI.replace(/\\+/g, ' ');\n\n\t\t// Try the built in decoder first\n\t\treturn decodeURIComponent(encodedURI);\n\t} catch (err) {\n\t\t// Fallback to a more advanced decoder\n\t\treturn customDecodeURIComponent(encodedURI);\n\t}\n};\n\n\n//# sourceURL=webpack://travel-umroh/./node_modules/decode-uri-component/index.js?");

/***/ }),

/***/ "./src/scss/index.scss":
/*!*****************************!*\
  !*** ./src/scss/index.scss ***!
  \*****************************/
/*! namespace exports */
/*! exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__.r, __webpack_exports__, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n// extracted by mini-css-extract-plugin\n\n\n//# sourceURL=webpack://travel-umroh/./src/scss/index.scss?");

/***/ }),

/***/ "./node_modules/perfect-scrollbar/dist/perfect-scrollbar.esm.js":
/*!**********************************************************************!*\
  !*** ./node_modules/perfect-scrollbar/dist/perfect-scrollbar.esm.js ***!
  \**********************************************************************/
/*! namespace exports */
/*! export default [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_exports__, __webpack_require__.r, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => __WEBPACK_DEFAULT_EXPORT__\n/* harmony export */ });\n/*!\n * perfect-scrollbar v1.5.0\n * Copyright 2020 Hyunje Jun, MDBootstrap and Contributors\n * Licensed under MIT\n */\n\nfunction get(element) {\n  return getComputedStyle(element);\n}\n\nfunction set(element, obj) {\n  for (var key in obj) {\n    var val = obj[key];\n    if (typeof val === 'number') {\n      val = val + \"px\";\n    }\n    element.style[key] = val;\n  }\n  return element;\n}\n\nfunction div(className) {\n  var div = document.createElement('div');\n  div.className = className;\n  return div;\n}\n\nvar elMatches =\n  typeof Element !== 'undefined' &&\n  (Element.prototype.matches ||\n    Element.prototype.webkitMatchesSelector ||\n    Element.prototype.mozMatchesSelector ||\n    Element.prototype.msMatchesSelector);\n\nfunction matches(element, query) {\n  if (!elMatches) {\n    throw new Error('No element matching method supported');\n  }\n\n  return elMatches.call(element, query);\n}\n\nfunction remove(element) {\n  if (element.remove) {\n    element.remove();\n  } else {\n    if (element.parentNode) {\n      element.parentNode.removeChild(element);\n    }\n  }\n}\n\nfunction queryChildren(element, selector) {\n  return Array.prototype.filter.call(element.children, function (child) { return matches(child, selector); }\n  );\n}\n\nvar cls = {\n  main: 'ps',\n  rtl: 'ps__rtl',\n  element: {\n    thumb: function (x) { return (\"ps__thumb-\" + x); },\n    rail: function (x) { return (\"ps__rail-\" + x); },\n    consuming: 'ps__child--consume',\n  },\n  state: {\n    focus: 'ps--focus',\n    clicking: 'ps--clicking',\n    active: function (x) { return (\"ps--active-\" + x); },\n    scrolling: function (x) { return (\"ps--scrolling-\" + x); },\n  },\n};\n\n/*\n * Helper methods\n */\nvar scrollingClassTimeout = { x: null, y: null };\n\nfunction addScrollingClass(i, x) {\n  var classList = i.element.classList;\n  var className = cls.state.scrolling(x);\n\n  if (classList.contains(className)) {\n    clearTimeout(scrollingClassTimeout[x]);\n  } else {\n    classList.add(className);\n  }\n}\n\nfunction removeScrollingClass(i, x) {\n  scrollingClassTimeout[x] = setTimeout(\n    function () { return i.isAlive && i.element.classList.remove(cls.state.scrolling(x)); },\n    i.settings.scrollingThreshold\n  );\n}\n\nfunction setScrollingClassInstantly(i, x) {\n  addScrollingClass(i, x);\n  removeScrollingClass(i, x);\n}\n\nvar EventElement = function EventElement(element) {\n  this.element = element;\n  this.handlers = {};\n};\n\nvar prototypeAccessors = { isEmpty: { configurable: true } };\n\nEventElement.prototype.bind = function bind (eventName, handler) {\n  if (typeof this.handlers[eventName] === 'undefined') {\n    this.handlers[eventName] = [];\n  }\n  this.handlers[eventName].push(handler);\n  this.element.addEventListener(eventName, handler, false);\n};\n\nEventElement.prototype.unbind = function unbind (eventName, target) {\n    var this$1 = this;\n\n  this.handlers[eventName] = this.handlers[eventName].filter(function (handler) {\n    if (target && handler !== target) {\n      return true;\n    }\n    this$1.element.removeEventListener(eventName, handler, false);\n    return false;\n  });\n};\n\nEventElement.prototype.unbindAll = function unbindAll () {\n  for (var name in this.handlers) {\n    this.unbind(name);\n  }\n};\n\nprototypeAccessors.isEmpty.get = function () {\n    var this$1 = this;\n\n  return Object.keys(this.handlers).every(\n    function (key) { return this$1.handlers[key].length === 0; }\n  );\n};\n\nObject.defineProperties( EventElement.prototype, prototypeAccessors );\n\nvar EventManager = function EventManager() {\n  this.eventElements = [];\n};\n\nEventManager.prototype.eventElement = function eventElement (element) {\n  var ee = this.eventElements.filter(function (ee) { return ee.element === element; })[0];\n  if (!ee) {\n    ee = new EventElement(element);\n    this.eventElements.push(ee);\n  }\n  return ee;\n};\n\nEventManager.prototype.bind = function bind (element, eventName, handler) {\n  this.eventElement(element).bind(eventName, handler);\n};\n\nEventManager.prototype.unbind = function unbind (element, eventName, handler) {\n  var ee = this.eventElement(element);\n  ee.unbind(eventName, handler);\n\n  if (ee.isEmpty) {\n    // remove\n    this.eventElements.splice(this.eventElements.indexOf(ee), 1);\n  }\n};\n\nEventManager.prototype.unbindAll = function unbindAll () {\n  this.eventElements.forEach(function (e) { return e.unbindAll(); });\n  this.eventElements = [];\n};\n\nEventManager.prototype.once = function once (element, eventName, handler) {\n  var ee = this.eventElement(element);\n  var onceHandler = function (evt) {\n    ee.unbind(eventName, onceHandler);\n    handler(evt);\n  };\n  ee.bind(eventName, onceHandler);\n};\n\nfunction createEvent(name) {\n  if (typeof window.CustomEvent === 'function') {\n    return new CustomEvent(name);\n  } else {\n    var evt = document.createEvent('CustomEvent');\n    evt.initCustomEvent(name, false, false, undefined);\n    return evt;\n  }\n}\n\nfunction processScrollDiff(\n  i,\n  axis,\n  diff,\n  useScrollingClass,\n  forceFireReachEvent\n) {\n  if ( useScrollingClass === void 0 ) useScrollingClass = true;\n  if ( forceFireReachEvent === void 0 ) forceFireReachEvent = false;\n\n  var fields;\n  if (axis === 'top') {\n    fields = [\n      'contentHeight',\n      'containerHeight',\n      'scrollTop',\n      'y',\n      'up',\n      'down' ];\n  } else if (axis === 'left') {\n    fields = [\n      'contentWidth',\n      'containerWidth',\n      'scrollLeft',\n      'x',\n      'left',\n      'right' ];\n  } else {\n    throw new Error('A proper axis should be provided');\n  }\n\n  processScrollDiff$1(i, diff, fields, useScrollingClass, forceFireReachEvent);\n}\n\nfunction processScrollDiff$1(\n  i,\n  diff,\n  ref,\n  useScrollingClass,\n  forceFireReachEvent\n) {\n  var contentHeight = ref[0];\n  var containerHeight = ref[1];\n  var scrollTop = ref[2];\n  var y = ref[3];\n  var up = ref[4];\n  var down = ref[5];\n  if ( useScrollingClass === void 0 ) useScrollingClass = true;\n  if ( forceFireReachEvent === void 0 ) forceFireReachEvent = false;\n\n  var element = i.element;\n\n  // reset reach\n  i.reach[y] = null;\n\n  // 1 for subpixel rounding\n  if (element[scrollTop] < 1) {\n    i.reach[y] = 'start';\n  }\n\n  // 1 for subpixel rounding\n  if (element[scrollTop] > i[contentHeight] - i[containerHeight] - 1) {\n    i.reach[y] = 'end';\n  }\n\n  if (diff) {\n    element.dispatchEvent(createEvent((\"ps-scroll-\" + y)));\n\n    if (diff < 0) {\n      element.dispatchEvent(createEvent((\"ps-scroll-\" + up)));\n    } else if (diff > 0) {\n      element.dispatchEvent(createEvent((\"ps-scroll-\" + down)));\n    }\n\n    if (useScrollingClass) {\n      setScrollingClassInstantly(i, y);\n    }\n  }\n\n  if (i.reach[y] && (diff || forceFireReachEvent)) {\n    element.dispatchEvent(createEvent((\"ps-\" + y + \"-reach-\" + (i.reach[y]))));\n  }\n}\n\nfunction toInt(x) {\n  return parseInt(x, 10) || 0;\n}\n\nfunction isEditable(el) {\n  return (\n    matches(el, 'input,[contenteditable]') ||\n    matches(el, 'select,[contenteditable]') ||\n    matches(el, 'textarea,[contenteditable]') ||\n    matches(el, 'button,[contenteditable]')\n  );\n}\n\nfunction outerWidth(element) {\n  var styles = get(element);\n  return (\n    toInt(styles.width) +\n    toInt(styles.paddingLeft) +\n    toInt(styles.paddingRight) +\n    toInt(styles.borderLeftWidth) +\n    toInt(styles.borderRightWidth)\n  );\n}\n\nvar env = {\n  isWebKit:\n    typeof document !== 'undefined' &&\n    'WebkitAppearance' in document.documentElement.style,\n  supportsTouch:\n    typeof window !== 'undefined' &&\n    ('ontouchstart' in window ||\n      ('maxTouchPoints' in window.navigator &&\n        window.navigator.maxTouchPoints > 0) ||\n      (window.DocumentTouch && document instanceof window.DocumentTouch)),\n  supportsIePointer:\n    typeof navigator !== 'undefined' && navigator.msMaxTouchPoints,\n  isChrome:\n    typeof navigator !== 'undefined' &&\n    /Chrome/i.test(navigator && navigator.userAgent),\n};\n\nfunction updateGeometry(i) {\n  var element = i.element;\n  var roundedScrollTop = Math.floor(element.scrollTop);\n  var rect = element.getBoundingClientRect();\n\n  i.containerWidth = Math.ceil(rect.width);\n  i.containerHeight = Math.ceil(rect.height);\n  i.contentWidth = element.scrollWidth;\n  i.contentHeight = element.scrollHeight;\n\n  if (!element.contains(i.scrollbarXRail)) {\n    // clean up and append\n    queryChildren(element, cls.element.rail('x')).forEach(function (el) { return remove(el); }\n    );\n    element.appendChild(i.scrollbarXRail);\n  }\n  if (!element.contains(i.scrollbarYRail)) {\n    // clean up and append\n    queryChildren(element, cls.element.rail('y')).forEach(function (el) { return remove(el); }\n    );\n    element.appendChild(i.scrollbarYRail);\n  }\n\n  if (\n    !i.settings.suppressScrollX &&\n    i.containerWidth + i.settings.scrollXMarginOffset < i.contentWidth\n  ) {\n    i.scrollbarXActive = true;\n    i.railXWidth = i.containerWidth - i.railXMarginWidth;\n    i.railXRatio = i.containerWidth / i.railXWidth;\n    i.scrollbarXWidth = getThumbSize(\n      i,\n      toInt((i.railXWidth * i.containerWidth) / i.contentWidth)\n    );\n    i.scrollbarXLeft = toInt(\n      ((i.negativeScrollAdjustment + element.scrollLeft) *\n        (i.railXWidth - i.scrollbarXWidth)) /\n        (i.contentWidth - i.containerWidth)\n    );\n  } else {\n    i.scrollbarXActive = false;\n  }\n\n  if (\n    !i.settings.suppressScrollY &&\n    i.containerHeight + i.settings.scrollYMarginOffset < i.contentHeight\n  ) {\n    i.scrollbarYActive = true;\n    i.railYHeight = i.containerHeight - i.railYMarginHeight;\n    i.railYRatio = i.containerHeight / i.railYHeight;\n    i.scrollbarYHeight = getThumbSize(\n      i,\n      toInt((i.railYHeight * i.containerHeight) / i.contentHeight)\n    );\n    i.scrollbarYTop = toInt(\n      (roundedScrollTop * (i.railYHeight - i.scrollbarYHeight)) /\n        (i.contentHeight - i.containerHeight)\n    );\n  } else {\n    i.scrollbarYActive = false;\n  }\n\n  if (i.scrollbarXLeft >= i.railXWidth - i.scrollbarXWidth) {\n    i.scrollbarXLeft = i.railXWidth - i.scrollbarXWidth;\n  }\n  if (i.scrollbarYTop >= i.railYHeight - i.scrollbarYHeight) {\n    i.scrollbarYTop = i.railYHeight - i.scrollbarYHeight;\n  }\n\n  updateCss(element, i);\n\n  if (i.scrollbarXActive) {\n    element.classList.add(cls.state.active('x'));\n  } else {\n    element.classList.remove(cls.state.active('x'));\n    i.scrollbarXWidth = 0;\n    i.scrollbarXLeft = 0;\n    element.scrollLeft = i.isRtl === true ? i.contentWidth : 0;\n  }\n  if (i.scrollbarYActive) {\n    element.classList.add(cls.state.active('y'));\n  } else {\n    element.classList.remove(cls.state.active('y'));\n    i.scrollbarYHeight = 0;\n    i.scrollbarYTop = 0;\n    element.scrollTop = 0;\n  }\n}\n\nfunction getThumbSize(i, thumbSize) {\n  if (i.settings.minScrollbarLength) {\n    thumbSize = Math.max(thumbSize, i.settings.minScrollbarLength);\n  }\n  if (i.settings.maxScrollbarLength) {\n    thumbSize = Math.min(thumbSize, i.settings.maxScrollbarLength);\n  }\n  return thumbSize;\n}\n\nfunction updateCss(element, i) {\n  var xRailOffset = { width: i.railXWidth };\n  var roundedScrollTop = Math.floor(element.scrollTop);\n\n  if (i.isRtl) {\n    xRailOffset.left =\n      i.negativeScrollAdjustment +\n      element.scrollLeft +\n      i.containerWidth -\n      i.contentWidth;\n  } else {\n    xRailOffset.left = element.scrollLeft;\n  }\n  if (i.isScrollbarXUsingBottom) {\n    xRailOffset.bottom = i.scrollbarXBottom - roundedScrollTop;\n  } else {\n    xRailOffset.top = i.scrollbarXTop + roundedScrollTop;\n  }\n  set(i.scrollbarXRail, xRailOffset);\n\n  var yRailOffset = { top: roundedScrollTop, height: i.railYHeight };\n  if (i.isScrollbarYUsingRight) {\n    if (i.isRtl) {\n      yRailOffset.right =\n        i.contentWidth -\n        (i.negativeScrollAdjustment + element.scrollLeft) -\n        i.scrollbarYRight -\n        i.scrollbarYOuterWidth -\n        9;\n    } else {\n      yRailOffset.right = i.scrollbarYRight - element.scrollLeft;\n    }\n  } else {\n    if (i.isRtl) {\n      yRailOffset.left =\n        i.negativeScrollAdjustment +\n        element.scrollLeft +\n        i.containerWidth * 2 -\n        i.contentWidth -\n        i.scrollbarYLeft -\n        i.scrollbarYOuterWidth;\n    } else {\n      yRailOffset.left = i.scrollbarYLeft + element.scrollLeft;\n    }\n  }\n  set(i.scrollbarYRail, yRailOffset);\n\n  set(i.scrollbarX, {\n    left: i.scrollbarXLeft,\n    width: i.scrollbarXWidth - i.railBorderXWidth,\n  });\n  set(i.scrollbarY, {\n    top: i.scrollbarYTop,\n    height: i.scrollbarYHeight - i.railBorderYWidth,\n  });\n}\n\nfunction clickRail(i) {\n  var element = i.element;\n\n  i.event.bind(i.scrollbarY, 'mousedown', function (e) { return e.stopPropagation(); });\n  i.event.bind(i.scrollbarYRail, 'mousedown', function (e) {\n    var positionTop =\n      e.pageY -\n      window.pageYOffset -\n      i.scrollbarYRail.getBoundingClientRect().top;\n    var direction = positionTop > i.scrollbarYTop ? 1 : -1;\n\n    i.element.scrollTop += direction * i.containerHeight;\n    updateGeometry(i);\n\n    e.stopPropagation();\n  });\n\n  i.event.bind(i.scrollbarX, 'mousedown', function (e) { return e.stopPropagation(); });\n  i.event.bind(i.scrollbarXRail, 'mousedown', function (e) {\n    var positionLeft =\n      e.pageX -\n      window.pageXOffset -\n      i.scrollbarXRail.getBoundingClientRect().left;\n    var direction = positionLeft > i.scrollbarXLeft ? 1 : -1;\n\n    i.element.scrollLeft += direction * i.containerWidth;\n    updateGeometry(i);\n\n    e.stopPropagation();\n  });\n}\n\nfunction dragThumb(i) {\n  bindMouseScrollHandler(i, [\n    'containerWidth',\n    'contentWidth',\n    'pageX',\n    'railXWidth',\n    'scrollbarX',\n    'scrollbarXWidth',\n    'scrollLeft',\n    'x',\n    'scrollbarXRail' ]);\n  bindMouseScrollHandler(i, [\n    'containerHeight',\n    'contentHeight',\n    'pageY',\n    'railYHeight',\n    'scrollbarY',\n    'scrollbarYHeight',\n    'scrollTop',\n    'y',\n    'scrollbarYRail' ]);\n}\n\nfunction bindMouseScrollHandler(\n  i,\n  ref\n) {\n  var containerHeight = ref[0];\n  var contentHeight = ref[1];\n  var pageY = ref[2];\n  var railYHeight = ref[3];\n  var scrollbarY = ref[4];\n  var scrollbarYHeight = ref[5];\n  var scrollTop = ref[6];\n  var y = ref[7];\n  var scrollbarYRail = ref[8];\n\n  var element = i.element;\n\n  var startingScrollTop = null;\n  var startingMousePageY = null;\n  var scrollBy = null;\n\n  function mouseMoveHandler(e) {\n    if (e.touches && e.touches[0]) {\n      e[pageY] = e.touches[0].pageY;\n    }\n    element[scrollTop] =\n      startingScrollTop + scrollBy * (e[pageY] - startingMousePageY);\n    addScrollingClass(i, y);\n    updateGeometry(i);\n\n    e.stopPropagation();\n    e.preventDefault();\n  }\n\n  function mouseUpHandler() {\n    removeScrollingClass(i, y);\n    i[scrollbarYRail].classList.remove(cls.state.clicking);\n    i.event.unbind(i.ownerDocument, 'mousemove', mouseMoveHandler);\n  }\n\n  function bindMoves(e, touchMode) {\n    startingScrollTop = element[scrollTop];\n    if (touchMode && e.touches) {\n      e[pageY] = e.touches[0].pageY;\n    }\n    startingMousePageY = e[pageY];\n    scrollBy =\n      (i[contentHeight] - i[containerHeight]) /\n      (i[railYHeight] - i[scrollbarYHeight]);\n    if (!touchMode) {\n      i.event.bind(i.ownerDocument, 'mousemove', mouseMoveHandler);\n      i.event.once(i.ownerDocument, 'mouseup', mouseUpHandler);\n      e.preventDefault();\n    } else {\n      i.event.bind(i.ownerDocument, 'touchmove', mouseMoveHandler);\n    }\n\n    i[scrollbarYRail].classList.add(cls.state.clicking);\n\n    e.stopPropagation();\n  }\n\n  i.event.bind(i[scrollbarY], 'mousedown', function (e) {\n    bindMoves(e);\n  });\n  i.event.bind(i[scrollbarY], 'touchstart', function (e) {\n    bindMoves(e, true);\n  });\n}\n\nfunction keyboard(i) {\n  var element = i.element;\n\n  var elementHovered = function () { return matches(element, ':hover'); };\n  var scrollbarFocused = function () { return matches(i.scrollbarX, ':focus') || matches(i.scrollbarY, ':focus'); };\n\n  function shouldPreventDefault(deltaX, deltaY) {\n    var scrollTop = Math.floor(element.scrollTop);\n    if (deltaX === 0) {\n      if (!i.scrollbarYActive) {\n        return false;\n      }\n      if (\n        (scrollTop === 0 && deltaY > 0) ||\n        (scrollTop >= i.contentHeight - i.containerHeight && deltaY < 0)\n      ) {\n        return !i.settings.wheelPropagation;\n      }\n    }\n\n    var scrollLeft = element.scrollLeft;\n    if (deltaY === 0) {\n      if (!i.scrollbarXActive) {\n        return false;\n      }\n      if (\n        (scrollLeft === 0 && deltaX < 0) ||\n        (scrollLeft >= i.contentWidth - i.containerWidth && deltaX > 0)\n      ) {\n        return !i.settings.wheelPropagation;\n      }\n    }\n    return true;\n  }\n\n  i.event.bind(i.ownerDocument, 'keydown', function (e) {\n    if (\n      (e.isDefaultPrevented && e.isDefaultPrevented()) ||\n      e.defaultPrevented\n    ) {\n      return;\n    }\n\n    if (!elementHovered() && !scrollbarFocused()) {\n      return;\n    }\n\n    var activeElement = document.activeElement\n      ? document.activeElement\n      : i.ownerDocument.activeElement;\n    if (activeElement) {\n      if (activeElement.tagName === 'IFRAME') {\n        activeElement = activeElement.contentDocument.activeElement;\n      } else {\n        // go deeper if element is a webcomponent\n        while (activeElement.shadowRoot) {\n          activeElement = activeElement.shadowRoot.activeElement;\n        }\n      }\n      if (isEditable(activeElement)) {\n        return;\n      }\n    }\n\n    var deltaX = 0;\n    var deltaY = 0;\n\n    switch (e.which) {\n      case 37: // left\n        if (e.metaKey) {\n          deltaX = -i.contentWidth;\n        } else if (e.altKey) {\n          deltaX = -i.containerWidth;\n        } else {\n          deltaX = -30;\n        }\n        break;\n      case 38: // up\n        if (e.metaKey) {\n          deltaY = i.contentHeight;\n        } else if (e.altKey) {\n          deltaY = i.containerHeight;\n        } else {\n          deltaY = 30;\n        }\n        break;\n      case 39: // right\n        if (e.metaKey) {\n          deltaX = i.contentWidth;\n        } else if (e.altKey) {\n          deltaX = i.containerWidth;\n        } else {\n          deltaX = 30;\n        }\n        break;\n      case 40: // down\n        if (e.metaKey) {\n          deltaY = -i.contentHeight;\n        } else if (e.altKey) {\n          deltaY = -i.containerHeight;\n        } else {\n          deltaY = -30;\n        }\n        break;\n      case 32: // space bar\n        if (e.shiftKey) {\n          deltaY = i.containerHeight;\n        } else {\n          deltaY = -i.containerHeight;\n        }\n        break;\n      case 33: // page up\n        deltaY = i.containerHeight;\n        break;\n      case 34: // page down\n        deltaY = -i.containerHeight;\n        break;\n      case 36: // home\n        deltaY = i.contentHeight;\n        break;\n      case 35: // end\n        deltaY = -i.contentHeight;\n        break;\n      default:\n        return;\n    }\n\n    if (i.settings.suppressScrollX && deltaX !== 0) {\n      return;\n    }\n    if (i.settings.suppressScrollY && deltaY !== 0) {\n      return;\n    }\n\n    element.scrollTop -= deltaY;\n    element.scrollLeft += deltaX;\n    updateGeometry(i);\n\n    if (shouldPreventDefault(deltaX, deltaY)) {\n      e.preventDefault();\n    }\n  });\n}\n\nfunction wheel(i) {\n  var element = i.element;\n\n  function shouldPreventDefault(deltaX, deltaY) {\n    var roundedScrollTop = Math.floor(element.scrollTop);\n    var isTop = element.scrollTop === 0;\n    var isBottom =\n      roundedScrollTop + element.offsetHeight === element.scrollHeight;\n    var isLeft = element.scrollLeft === 0;\n    var isRight =\n      element.scrollLeft + element.offsetWidth === element.scrollWidth;\n\n    var hitsBound;\n\n    // pick axis with primary direction\n    if (Math.abs(deltaY) > Math.abs(deltaX)) {\n      hitsBound = isTop || isBottom;\n    } else {\n      hitsBound = isLeft || isRight;\n    }\n\n    return hitsBound ? !i.settings.wheelPropagation : true;\n  }\n\n  function getDeltaFromEvent(e) {\n    var deltaX = e.deltaX;\n    var deltaY = -1 * e.deltaY;\n\n    if (typeof deltaX === 'undefined' || typeof deltaY === 'undefined') {\n      // OS X Safari\n      deltaX = (-1 * e.wheelDeltaX) / 6;\n      deltaY = e.wheelDeltaY / 6;\n    }\n\n    if (e.deltaMode && e.deltaMode === 1) {\n      // Firefox in deltaMode 1: Line scrolling\n      deltaX *= 10;\n      deltaY *= 10;\n    }\n\n    if (deltaX !== deltaX && deltaY !== deltaY /* NaN checks */) {\n      // IE in some mouse drivers\n      deltaX = 0;\n      deltaY = e.wheelDelta;\n    }\n\n    if (e.shiftKey) {\n      // reverse axis with shift key\n      return [-deltaY, -deltaX];\n    }\n    return [deltaX, deltaY];\n  }\n\n  function shouldBeConsumedByChild(target, deltaX, deltaY) {\n    // FIXME: this is a workaround for <select> issue in FF and IE #571\n    if (!env.isWebKit && element.querySelector('select:focus')) {\n      return true;\n    }\n\n    if (!element.contains(target)) {\n      return false;\n    }\n\n    var cursor = target;\n\n    while (cursor && cursor !== element) {\n      if (cursor.classList.contains(cls.element.consuming)) {\n        return true;\n      }\n\n      var style = get(cursor);\n\n      // if deltaY && vertical scrollable\n      if (deltaY && style.overflowY.match(/(scroll|auto)/)) {\n        var maxScrollTop = cursor.scrollHeight - cursor.clientHeight;\n        if (maxScrollTop > 0) {\n          if (\n            (cursor.scrollTop > 0 && deltaY < 0) ||\n            (cursor.scrollTop < maxScrollTop && deltaY > 0)\n          ) {\n            return true;\n          }\n        }\n      }\n      // if deltaX && horizontal scrollable\n      if (deltaX && style.overflowX.match(/(scroll|auto)/)) {\n        var maxScrollLeft = cursor.scrollWidth - cursor.clientWidth;\n        if (maxScrollLeft > 0) {\n          if (\n            (cursor.scrollLeft > 0 && deltaX < 0) ||\n            (cursor.scrollLeft < maxScrollLeft && deltaX > 0)\n          ) {\n            return true;\n          }\n        }\n      }\n\n      cursor = cursor.parentNode;\n    }\n\n    return false;\n  }\n\n  function mousewheelHandler(e) {\n    var ref = getDeltaFromEvent(e);\n    var deltaX = ref[0];\n    var deltaY = ref[1];\n\n    if (shouldBeConsumedByChild(e.target, deltaX, deltaY)) {\n      return;\n    }\n\n    var shouldPrevent = false;\n    if (!i.settings.useBothWheelAxes) {\n      // deltaX will only be used for horizontal scrolling and deltaY will\n      // only be used for vertical scrolling - this is the default\n      element.scrollTop -= deltaY * i.settings.wheelSpeed;\n      element.scrollLeft += deltaX * i.settings.wheelSpeed;\n    } else if (i.scrollbarYActive && !i.scrollbarXActive) {\n      // only vertical scrollbar is active and useBothWheelAxes option is\n      // active, so let's scroll vertical bar using both mouse wheel axes\n      if (deltaY) {\n        element.scrollTop -= deltaY * i.settings.wheelSpeed;\n      } else {\n        element.scrollTop += deltaX * i.settings.wheelSpeed;\n      }\n      shouldPrevent = true;\n    } else if (i.scrollbarXActive && !i.scrollbarYActive) {\n      // useBothWheelAxes and only horizontal bar is active, so use both\n      // wheel axes for horizontal bar\n      if (deltaX) {\n        element.scrollLeft += deltaX * i.settings.wheelSpeed;\n      } else {\n        element.scrollLeft -= deltaY * i.settings.wheelSpeed;\n      }\n      shouldPrevent = true;\n    }\n\n    updateGeometry(i);\n\n    shouldPrevent = shouldPrevent || shouldPreventDefault(deltaX, deltaY);\n    if (shouldPrevent && !e.ctrlKey) {\n      e.stopPropagation();\n      e.preventDefault();\n    }\n  }\n\n  if (typeof window.onwheel !== 'undefined') {\n    i.event.bind(element, 'wheel', mousewheelHandler);\n  } else if (typeof window.onmousewheel !== 'undefined') {\n    i.event.bind(element, 'mousewheel', mousewheelHandler);\n  }\n}\n\nfunction touch(i) {\n  if (!env.supportsTouch && !env.supportsIePointer) {\n    return;\n  }\n\n  var element = i.element;\n\n  function shouldPrevent(deltaX, deltaY) {\n    var scrollTop = Math.floor(element.scrollTop);\n    var scrollLeft = element.scrollLeft;\n    var magnitudeX = Math.abs(deltaX);\n    var magnitudeY = Math.abs(deltaY);\n\n    if (magnitudeY > magnitudeX) {\n      // user is perhaps trying to swipe up/down the page\n\n      if (\n        (deltaY < 0 && scrollTop === i.contentHeight - i.containerHeight) ||\n        (deltaY > 0 && scrollTop === 0)\n      ) {\n        // set prevent for mobile Chrome refresh\n        return window.scrollY === 0 && deltaY > 0 && env.isChrome;\n      }\n    } else if (magnitudeX > magnitudeY) {\n      // user is perhaps trying to swipe left/right across the page\n\n      if (\n        (deltaX < 0 && scrollLeft === i.contentWidth - i.containerWidth) ||\n        (deltaX > 0 && scrollLeft === 0)\n      ) {\n        return true;\n      }\n    }\n\n    return true;\n  }\n\n  function applyTouchMove(differenceX, differenceY) {\n    element.scrollTop -= differenceY;\n    element.scrollLeft -= differenceX;\n\n    updateGeometry(i);\n  }\n\n  var startOffset = {};\n  var startTime = 0;\n  var speed = {};\n  var easingLoop = null;\n\n  function getTouch(e) {\n    if (e.targetTouches) {\n      return e.targetTouches[0];\n    } else {\n      // Maybe IE pointer\n      return e;\n    }\n  }\n\n  function shouldHandle(e) {\n    if (e.pointerType && e.pointerType === 'pen' && e.buttons === 0) {\n      return false;\n    }\n    if (e.targetTouches && e.targetTouches.length === 1) {\n      return true;\n    }\n    if (\n      e.pointerType &&\n      e.pointerType !== 'mouse' &&\n      e.pointerType !== e.MSPOINTER_TYPE_MOUSE\n    ) {\n      return true;\n    }\n    return false;\n  }\n\n  function touchStart(e) {\n    if (!shouldHandle(e)) {\n      return;\n    }\n\n    var touch = getTouch(e);\n\n    startOffset.pageX = touch.pageX;\n    startOffset.pageY = touch.pageY;\n\n    startTime = new Date().getTime();\n\n    if (easingLoop !== null) {\n      clearInterval(easingLoop);\n    }\n  }\n\n  function shouldBeConsumedByChild(target, deltaX, deltaY) {\n    if (!element.contains(target)) {\n      return false;\n    }\n\n    var cursor = target;\n\n    while (cursor && cursor !== element) {\n      if (cursor.classList.contains(cls.element.consuming)) {\n        return true;\n      }\n\n      var style = get(cursor);\n\n      // if deltaY && vertical scrollable\n      if (deltaY && style.overflowY.match(/(scroll|auto)/)) {\n        var maxScrollTop = cursor.scrollHeight - cursor.clientHeight;\n        if (maxScrollTop > 0) {\n          if (\n            (cursor.scrollTop > 0 && deltaY < 0) ||\n            (cursor.scrollTop < maxScrollTop && deltaY > 0)\n          ) {\n            return true;\n          }\n        }\n      }\n      // if deltaX && horizontal scrollable\n      if (deltaX && style.overflowX.match(/(scroll|auto)/)) {\n        var maxScrollLeft = cursor.scrollWidth - cursor.clientWidth;\n        if (maxScrollLeft > 0) {\n          if (\n            (cursor.scrollLeft > 0 && deltaX < 0) ||\n            (cursor.scrollLeft < maxScrollLeft && deltaX > 0)\n          ) {\n            return true;\n          }\n        }\n      }\n\n      cursor = cursor.parentNode;\n    }\n\n    return false;\n  }\n\n  function touchMove(e) {\n    if (shouldHandle(e)) {\n      var touch = getTouch(e);\n\n      var currentOffset = { pageX: touch.pageX, pageY: touch.pageY };\n\n      var differenceX = currentOffset.pageX - startOffset.pageX;\n      var differenceY = currentOffset.pageY - startOffset.pageY;\n\n      if (shouldBeConsumedByChild(e.target, differenceX, differenceY)) {\n        return;\n      }\n\n      applyTouchMove(differenceX, differenceY);\n      startOffset = currentOffset;\n\n      var currentTime = new Date().getTime();\n\n      var timeGap = currentTime - startTime;\n      if (timeGap > 0) {\n        speed.x = differenceX / timeGap;\n        speed.y = differenceY / timeGap;\n        startTime = currentTime;\n      }\n\n      if (shouldPrevent(differenceX, differenceY)) {\n        e.preventDefault();\n      }\n    }\n  }\n  function touchEnd() {\n    if (i.settings.swipeEasing) {\n      clearInterval(easingLoop);\n      easingLoop = setInterval(function() {\n        if (i.isInitialized) {\n          clearInterval(easingLoop);\n          return;\n        }\n\n        if (!speed.x && !speed.y) {\n          clearInterval(easingLoop);\n          return;\n        }\n\n        if (Math.abs(speed.x) < 0.01 && Math.abs(speed.y) < 0.01) {\n          clearInterval(easingLoop);\n          return;\n        }\n\n        applyTouchMove(speed.x * 30, speed.y * 30);\n\n        speed.x *= 0.8;\n        speed.y *= 0.8;\n      }, 10);\n    }\n  }\n\n  if (env.supportsTouch) {\n    i.event.bind(element, 'touchstart', touchStart);\n    i.event.bind(element, 'touchmove', touchMove);\n    i.event.bind(element, 'touchend', touchEnd);\n  } else if (env.supportsIePointer) {\n    if (window.PointerEvent) {\n      i.event.bind(element, 'pointerdown', touchStart);\n      i.event.bind(element, 'pointermove', touchMove);\n      i.event.bind(element, 'pointerup', touchEnd);\n    } else if (window.MSPointerEvent) {\n      i.event.bind(element, 'MSPointerDown', touchStart);\n      i.event.bind(element, 'MSPointerMove', touchMove);\n      i.event.bind(element, 'MSPointerUp', touchEnd);\n    }\n  }\n}\n\nvar defaultSettings = function () { return ({\n  handlers: ['click-rail', 'drag-thumb', 'keyboard', 'wheel', 'touch'],\n  maxScrollbarLength: null,\n  minScrollbarLength: null,\n  scrollingThreshold: 1000,\n  scrollXMarginOffset: 0,\n  scrollYMarginOffset: 0,\n  suppressScrollX: false,\n  suppressScrollY: false,\n  swipeEasing: true,\n  useBothWheelAxes: false,\n  wheelPropagation: true,\n  wheelSpeed: 1,\n}); };\n\nvar handlers = {\n  'click-rail': clickRail,\n  'drag-thumb': dragThumb,\n  keyboard: keyboard,\n  wheel: wheel,\n  touch: touch,\n};\n\nvar PerfectScrollbar = function PerfectScrollbar(element, userSettings) {\n  var this$1 = this;\n  if ( userSettings === void 0 ) userSettings = {};\n\n  if (typeof element === 'string') {\n    element = document.querySelector(element);\n  }\n\n  if (!element || !element.nodeName) {\n    throw new Error('no element is specified to initialize PerfectScrollbar');\n  }\n\n  this.element = element;\n\n  element.classList.add(cls.main);\n\n  this.settings = defaultSettings();\n  for (var key in userSettings) {\n    this.settings[key] = userSettings[key];\n  }\n\n  this.containerWidth = null;\n  this.containerHeight = null;\n  this.contentWidth = null;\n  this.contentHeight = null;\n\n  var focus = function () { return element.classList.add(cls.state.focus); };\n  var blur = function () { return element.classList.remove(cls.state.focus); };\n\n  this.isRtl = get(element).direction === 'rtl';\n  if (this.isRtl === true) {\n    element.classList.add(cls.rtl);\n  }\n  this.isNegativeScroll = (function () {\n    var originalScrollLeft = element.scrollLeft;\n    var result = null;\n    element.scrollLeft = -1;\n    result = element.scrollLeft < 0;\n    element.scrollLeft = originalScrollLeft;\n    return result;\n  })();\n  this.negativeScrollAdjustment = this.isNegativeScroll\n    ? element.scrollWidth - element.clientWidth\n    : 0;\n  this.event = new EventManager();\n  this.ownerDocument = element.ownerDocument || document;\n\n  this.scrollbarXRail = div(cls.element.rail('x'));\n  element.appendChild(this.scrollbarXRail);\n  this.scrollbarX = div(cls.element.thumb('x'));\n  this.scrollbarXRail.appendChild(this.scrollbarX);\n  this.scrollbarX.setAttribute('tabindex', 0);\n  this.event.bind(this.scrollbarX, 'focus', focus);\n  this.event.bind(this.scrollbarX, 'blur', blur);\n  this.scrollbarXActive = null;\n  this.scrollbarXWidth = null;\n  this.scrollbarXLeft = null;\n  var railXStyle = get(this.scrollbarXRail);\n  this.scrollbarXBottom = parseInt(railXStyle.bottom, 10);\n  if (isNaN(this.scrollbarXBottom)) {\n    this.isScrollbarXUsingBottom = false;\n    this.scrollbarXTop = toInt(railXStyle.top);\n  } else {\n    this.isScrollbarXUsingBottom = true;\n  }\n  this.railBorderXWidth =\n    toInt(railXStyle.borderLeftWidth) + toInt(railXStyle.borderRightWidth);\n  // Set rail to display:block to calculate margins\n  set(this.scrollbarXRail, { display: 'block' });\n  this.railXMarginWidth =\n    toInt(railXStyle.marginLeft) + toInt(railXStyle.marginRight);\n  set(this.scrollbarXRail, { display: '' });\n  this.railXWidth = null;\n  this.railXRatio = null;\n\n  this.scrollbarYRail = div(cls.element.rail('y'));\n  element.appendChild(this.scrollbarYRail);\n  this.scrollbarY = div(cls.element.thumb('y'));\n  this.scrollbarYRail.appendChild(this.scrollbarY);\n  this.scrollbarY.setAttribute('tabindex', 0);\n  this.event.bind(this.scrollbarY, 'focus', focus);\n  this.event.bind(this.scrollbarY, 'blur', blur);\n  this.scrollbarYActive = null;\n  this.scrollbarYHeight = null;\n  this.scrollbarYTop = null;\n  var railYStyle = get(this.scrollbarYRail);\n  this.scrollbarYRight = parseInt(railYStyle.right, 10);\n  if (isNaN(this.scrollbarYRight)) {\n    this.isScrollbarYUsingRight = false;\n    this.scrollbarYLeft = toInt(railYStyle.left);\n  } else {\n    this.isScrollbarYUsingRight = true;\n  }\n  this.scrollbarYOuterWidth = this.isRtl ? outerWidth(this.scrollbarY) : null;\n  this.railBorderYWidth =\n    toInt(railYStyle.borderTopWidth) + toInt(railYStyle.borderBottomWidth);\n  set(this.scrollbarYRail, { display: 'block' });\n  this.railYMarginHeight =\n    toInt(railYStyle.marginTop) + toInt(railYStyle.marginBottom);\n  set(this.scrollbarYRail, { display: '' });\n  this.railYHeight = null;\n  this.railYRatio = null;\n\n  this.reach = {\n    x:\n      element.scrollLeft <= 0\n        ? 'start'\n        : element.scrollLeft >= this.contentWidth - this.containerWidth\n        ? 'end'\n        : null,\n    y:\n      element.scrollTop <= 0\n        ? 'start'\n        : element.scrollTop >= this.contentHeight - this.containerHeight\n        ? 'end'\n        : null,\n  };\n\n  this.isAlive = true;\n\n  this.settings.handlers.forEach(function (handlerName) { return handlers[handlerName](this$1); });\n\n  this.lastScrollTop = Math.floor(element.scrollTop); // for onScroll only\n  this.lastScrollLeft = element.scrollLeft; // for onScroll only\n  this.event.bind(this.element, 'scroll', function (e) { return this$1.onScroll(e); });\n  updateGeometry(this);\n};\n\nPerfectScrollbar.prototype.update = function update () {\n  if (!this.isAlive) {\n    return;\n  }\n\n  // Recalcuate negative scrollLeft adjustment\n  this.negativeScrollAdjustment = this.isNegativeScroll\n    ? this.element.scrollWidth - this.element.clientWidth\n    : 0;\n\n  // Recalculate rail margins\n  set(this.scrollbarXRail, { display: 'block' });\n  set(this.scrollbarYRail, { display: 'block' });\n  this.railXMarginWidth =\n    toInt(get(this.scrollbarXRail).marginLeft) +\n    toInt(get(this.scrollbarXRail).marginRight);\n  this.railYMarginHeight =\n    toInt(get(this.scrollbarYRail).marginTop) +\n    toInt(get(this.scrollbarYRail).marginBottom);\n\n  // Hide scrollbars not to affect scrollWidth and scrollHeight\n  set(this.scrollbarXRail, { display: 'none' });\n  set(this.scrollbarYRail, { display: 'none' });\n\n  updateGeometry(this);\n\n  processScrollDiff(this, 'top', 0, false, true);\n  processScrollDiff(this, 'left', 0, false, true);\n\n  set(this.scrollbarXRail, { display: '' });\n  set(this.scrollbarYRail, { display: '' });\n};\n\nPerfectScrollbar.prototype.onScroll = function onScroll (e) {\n  if (!this.isAlive) {\n    return;\n  }\n\n  updateGeometry(this);\n  processScrollDiff(this, 'top', this.element.scrollTop - this.lastScrollTop);\n  processScrollDiff(\n    this,\n    'left',\n    this.element.scrollLeft - this.lastScrollLeft\n  );\n\n  this.lastScrollTop = Math.floor(this.element.scrollTop);\n  this.lastScrollLeft = this.element.scrollLeft;\n};\n\nPerfectScrollbar.prototype.destroy = function destroy () {\n  if (!this.isAlive) {\n    return;\n  }\n\n  this.event.unbindAll();\n  remove(this.scrollbarX);\n  remove(this.scrollbarY);\n  remove(this.scrollbarXRail);\n  remove(this.scrollbarYRail);\n  this.removePsClasses();\n\n  // unset elements\n  this.element = null;\n  this.scrollbarX = null;\n  this.scrollbarY = null;\n  this.scrollbarXRail = null;\n  this.scrollbarYRail = null;\n\n  this.isAlive = false;\n};\n\nPerfectScrollbar.prototype.removePsClasses = function removePsClasses () {\n  this.element.className = this.element.className\n    .split(' ')\n    .filter(function (name) { return !name.match(/^ps([-_].+|)$/); })\n    .join(' ');\n};\n\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (PerfectScrollbar);\n//# sourceMappingURL=perfect-scrollbar.esm.js.map\n\n\n//# sourceURL=webpack://travel-umroh/./node_modules/perfect-scrollbar/dist/perfect-scrollbar.esm.js?");

/***/ }),

/***/ "./node_modules/query-string/index.js":
/*!********************************************!*\
  !*** ./node_modules/query-string/index.js ***!
  \********************************************/
/*! default exports */
/*! export extract [provided] [no usage info] [missing usage info prevents renaming] */
/*! export parse [provided] [no usage info] [missing usage info prevents renaming] */
/*! export parseUrl [provided] [no usage info] [missing usage info prevents renaming] */
/*! export stringify [provided] [no usage info] [missing usage info prevents renaming] */
/*! export stringifyUrl [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_exports__, __webpack_require__ */
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\nconst strictUriEncode = __webpack_require__(/*! strict-uri-encode */ \"./node_modules/strict-uri-encode/index.js\");\nconst decodeComponent = __webpack_require__(/*! decode-uri-component */ \"./node_modules/decode-uri-component/index.js\");\nconst splitOnFirst = __webpack_require__(/*! split-on-first */ \"./node_modules/split-on-first/index.js\");\n\nconst isNullOrUndefined = value => value === null || value === undefined;\n\nfunction encoderForArrayFormat(options) {\n\tswitch (options.arrayFormat) {\n\t\tcase 'index':\n\t\t\treturn key => (result, value) => {\n\t\t\t\tconst index = result.length;\n\n\t\t\t\tif (\n\t\t\t\t\tvalue === undefined ||\n\t\t\t\t\t(options.skipNull && value === null) ||\n\t\t\t\t\t(options.skipEmptyString && value === '')\n\t\t\t\t) {\n\t\t\t\t\treturn result;\n\t\t\t\t}\n\n\t\t\t\tif (value === null) {\n\t\t\t\t\treturn [...result, [encode(key, options), '[', index, ']'].join('')];\n\t\t\t\t}\n\n\t\t\t\treturn [\n\t\t\t\t\t...result,\n\t\t\t\t\t[encode(key, options), '[', encode(index, options), ']=', encode(value, options)].join('')\n\t\t\t\t];\n\t\t\t};\n\n\t\tcase 'bracket':\n\t\t\treturn key => (result, value) => {\n\t\t\t\tif (\n\t\t\t\t\tvalue === undefined ||\n\t\t\t\t\t(options.skipNull && value === null) ||\n\t\t\t\t\t(options.skipEmptyString && value === '')\n\t\t\t\t) {\n\t\t\t\t\treturn result;\n\t\t\t\t}\n\n\t\t\t\tif (value === null) {\n\t\t\t\t\treturn [...result, [encode(key, options), '[]'].join('')];\n\t\t\t\t}\n\n\t\t\t\treturn [...result, [encode(key, options), '[]=', encode(value, options)].join('')];\n\t\t\t};\n\n\t\tcase 'comma':\n\t\tcase 'separator':\n\t\t\treturn key => (result, value) => {\n\t\t\t\tif (value === null || value === undefined || value.length === 0) {\n\t\t\t\t\treturn result;\n\t\t\t\t}\n\n\t\t\t\tif (result.length === 0) {\n\t\t\t\t\treturn [[encode(key, options), '=', encode(value, options)].join('')];\n\t\t\t\t}\n\n\t\t\t\treturn [[result, encode(value, options)].join(options.arrayFormatSeparator)];\n\t\t\t};\n\n\t\tdefault:\n\t\t\treturn key => (result, value) => {\n\t\t\t\tif (\n\t\t\t\t\tvalue === undefined ||\n\t\t\t\t\t(options.skipNull && value === null) ||\n\t\t\t\t\t(options.skipEmptyString && value === '')\n\t\t\t\t) {\n\t\t\t\t\treturn result;\n\t\t\t\t}\n\n\t\t\t\tif (value === null) {\n\t\t\t\t\treturn [...result, encode(key, options)];\n\t\t\t\t}\n\n\t\t\t\treturn [...result, [encode(key, options), '=', encode(value, options)].join('')];\n\t\t\t};\n\t}\n}\n\nfunction parserForArrayFormat(options) {\n\tlet result;\n\n\tswitch (options.arrayFormat) {\n\t\tcase 'index':\n\t\t\treturn (key, value, accumulator) => {\n\t\t\t\tresult = /\\[(\\d*)\\]$/.exec(key);\n\n\t\t\t\tkey = key.replace(/\\[\\d*\\]$/, '');\n\n\t\t\t\tif (!result) {\n\t\t\t\t\taccumulator[key] = value;\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tif (accumulator[key] === undefined) {\n\t\t\t\t\taccumulator[key] = {};\n\t\t\t\t}\n\n\t\t\t\taccumulator[key][result[1]] = value;\n\t\t\t};\n\n\t\tcase 'bracket':\n\t\t\treturn (key, value, accumulator) => {\n\t\t\t\tresult = /(\\[\\])$/.exec(key);\n\t\t\t\tkey = key.replace(/\\[\\]$/, '');\n\n\t\t\t\tif (!result) {\n\t\t\t\t\taccumulator[key] = value;\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tif (accumulator[key] === undefined) {\n\t\t\t\t\taccumulator[key] = [value];\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\taccumulator[key] = [].concat(accumulator[key], value);\n\t\t\t};\n\n\t\tcase 'comma':\n\t\tcase 'separator':\n\t\t\treturn (key, value, accumulator) => {\n\t\t\t\tconst isArray = typeof value === 'string' && value.includes(options.arrayFormatSeparator);\n\t\t\t\tconst isEncodedArray = (typeof value === 'string' && !isArray && decode(value, options).includes(options.arrayFormatSeparator));\n\t\t\t\tvalue = isEncodedArray ? decode(value, options) : value;\n\t\t\t\tconst newValue = isArray || isEncodedArray ? value.split(options.arrayFormatSeparator).map(item => decode(item, options)) : value === null ? value : decode(value, options);\n\t\t\t\taccumulator[key] = newValue;\n\t\t\t};\n\n\t\tdefault:\n\t\t\treturn (key, value, accumulator) => {\n\t\t\t\tif (accumulator[key] === undefined) {\n\t\t\t\t\taccumulator[key] = value;\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\taccumulator[key] = [].concat(accumulator[key], value);\n\t\t\t};\n\t}\n}\n\nfunction validateArrayFormatSeparator(value) {\n\tif (typeof value !== 'string' || value.length !== 1) {\n\t\tthrow new TypeError('arrayFormatSeparator must be single character string');\n\t}\n}\n\nfunction encode(value, options) {\n\tif (options.encode) {\n\t\treturn options.strict ? strictUriEncode(value) : encodeURIComponent(value);\n\t}\n\n\treturn value;\n}\n\nfunction decode(value, options) {\n\tif (options.decode) {\n\t\treturn decodeComponent(value);\n\t}\n\n\treturn value;\n}\n\nfunction keysSorter(input) {\n\tif (Array.isArray(input)) {\n\t\treturn input.sort();\n\t}\n\n\tif (typeof input === 'object') {\n\t\treturn keysSorter(Object.keys(input))\n\t\t\t.sort((a, b) => Number(a) - Number(b))\n\t\t\t.map(key => input[key]);\n\t}\n\n\treturn input;\n}\n\nfunction removeHash(input) {\n\tconst hashStart = input.indexOf('#');\n\tif (hashStart !== -1) {\n\t\tinput = input.slice(0, hashStart);\n\t}\n\n\treturn input;\n}\n\nfunction getHash(url) {\n\tlet hash = '';\n\tconst hashStart = url.indexOf('#');\n\tif (hashStart !== -1) {\n\t\thash = url.slice(hashStart);\n\t}\n\n\treturn hash;\n}\n\nfunction extract(input) {\n\tinput = removeHash(input);\n\tconst queryStart = input.indexOf('?');\n\tif (queryStart === -1) {\n\t\treturn '';\n\t}\n\n\treturn input.slice(queryStart + 1);\n}\n\nfunction parseValue(value, options) {\n\tif (options.parseNumbers && !Number.isNaN(Number(value)) && (typeof value === 'string' && value.trim() !== '')) {\n\t\tvalue = Number(value);\n\t} else if (options.parseBooleans && value !== null && (value.toLowerCase() === 'true' || value.toLowerCase() === 'false')) {\n\t\tvalue = value.toLowerCase() === 'true';\n\t}\n\n\treturn value;\n}\n\nfunction parse(query, options) {\n\toptions = Object.assign({\n\t\tdecode: true,\n\t\tsort: true,\n\t\tarrayFormat: 'none',\n\t\tarrayFormatSeparator: ',',\n\t\tparseNumbers: false,\n\t\tparseBooleans: false\n\t}, options);\n\n\tvalidateArrayFormatSeparator(options.arrayFormatSeparator);\n\n\tconst formatter = parserForArrayFormat(options);\n\n\t// Create an object with no prototype\n\tconst ret = Object.create(null);\n\n\tif (typeof query !== 'string') {\n\t\treturn ret;\n\t}\n\n\tquery = query.trim().replace(/^[?#&]/, '');\n\n\tif (!query) {\n\t\treturn ret;\n\t}\n\n\tfor (const param of query.split('&')) {\n\t\tlet [key, value] = splitOnFirst(options.decode ? param.replace(/\\+/g, ' ') : param, '=');\n\n\t\t// Missing `=` should be `null`:\n\t\t// http://w3.org/TR/2012/WD-url-20120524/#collect-url-parameters\n\t\tvalue = value === undefined ? null : ['comma', 'separator'].includes(options.arrayFormat) ? value : decode(value, options);\n\t\tformatter(decode(key, options), value, ret);\n\t}\n\n\tfor (const key of Object.keys(ret)) {\n\t\tconst value = ret[key];\n\t\tif (typeof value === 'object' && value !== null) {\n\t\t\tfor (const k of Object.keys(value)) {\n\t\t\t\tvalue[k] = parseValue(value[k], options);\n\t\t\t}\n\t\t} else {\n\t\t\tret[key] = parseValue(value, options);\n\t\t}\n\t}\n\n\tif (options.sort === false) {\n\t\treturn ret;\n\t}\n\n\treturn (options.sort === true ? Object.keys(ret).sort() : Object.keys(ret).sort(options.sort)).reduce((result, key) => {\n\t\tconst value = ret[key];\n\t\tif (Boolean(value) && typeof value === 'object' && !Array.isArray(value)) {\n\t\t\t// Sort object keys, not values\n\t\t\tresult[key] = keysSorter(value);\n\t\t} else {\n\t\t\tresult[key] = value;\n\t\t}\n\n\t\treturn result;\n\t}, Object.create(null));\n}\n\nexports.extract = extract;\nexports.parse = parse;\n\nexports.stringify = (object, options) => {\n\tif (!object) {\n\t\treturn '';\n\t}\n\n\toptions = Object.assign({\n\t\tencode: true,\n\t\tstrict: true,\n\t\tarrayFormat: 'none',\n\t\tarrayFormatSeparator: ','\n\t}, options);\n\n\tvalidateArrayFormatSeparator(options.arrayFormatSeparator);\n\n\tconst shouldFilter = key => (\n\t\t(options.skipNull && isNullOrUndefined(object[key])) ||\n\t\t(options.skipEmptyString && object[key] === '')\n\t);\n\n\tconst formatter = encoderForArrayFormat(options);\n\n\tconst objectCopy = {};\n\n\tfor (const key of Object.keys(object)) {\n\t\tif (!shouldFilter(key)) {\n\t\t\tobjectCopy[key] = object[key];\n\t\t}\n\t}\n\n\tconst keys = Object.keys(objectCopy);\n\n\tif (options.sort !== false) {\n\t\tkeys.sort(options.sort);\n\t}\n\n\treturn keys.map(key => {\n\t\tconst value = object[key];\n\n\t\tif (value === undefined) {\n\t\t\treturn '';\n\t\t}\n\n\t\tif (value === null) {\n\t\t\treturn encode(key, options);\n\t\t}\n\n\t\tif (Array.isArray(value)) {\n\t\t\treturn value\n\t\t\t\t.reduce(formatter(key), [])\n\t\t\t\t.join('&');\n\t\t}\n\n\t\treturn encode(key, options) + '=' + encode(value, options);\n\t}).filter(x => x.length > 0).join('&');\n};\n\nexports.parseUrl = (url, options) => {\n\toptions = Object.assign({\n\t\tdecode: true\n\t}, options);\n\n\tconst [url_, hash] = splitOnFirst(url, '#');\n\n\treturn Object.assign(\n\t\t{\n\t\t\turl: url_.split('?')[0] || '',\n\t\t\tquery: parse(extract(url), options)\n\t\t},\n\t\toptions && options.parseFragmentIdentifier && hash ? {fragmentIdentifier: decode(hash, options)} : {}\n\t);\n};\n\nexports.stringifyUrl = (object, options) => {\n\toptions = Object.assign({\n\t\tencode: true,\n\t\tstrict: true\n\t}, options);\n\n\tconst url = removeHash(object.url).split('?')[0] || '';\n\tconst queryFromUrl = exports.extract(object.url);\n\tconst parsedQueryFromUrl = exports.parse(queryFromUrl, {sort: false});\n\n\tconst query = Object.assign(parsedQueryFromUrl, object.query);\n\tlet queryString = exports.stringify(query, options);\n\tif (queryString) {\n\t\tqueryString = `?${queryString}`;\n\t}\n\n\tlet hash = getHash(object.url);\n\tif (object.fragmentIdentifier) {\n\t\thash = `#${encode(object.fragmentIdentifier, options)}`;\n\t}\n\n\treturn `${url}${queryString}${hash}`;\n};\n\n\n//# sourceURL=webpack://travel-umroh/./node_modules/query-string/index.js?");

/***/ }),

/***/ "./node_modules/split-on-first/index.js":
/*!**********************************************!*\
  !*** ./node_modules/split-on-first/index.js ***!
  \**********************************************/
/*! unknown exports (runtime-defined) */
/*! runtime requirements: module */
/***/ ((module) => {

"use strict";
eval("\n\nmodule.exports = (string, separator) => {\n\tif (!(typeof string === 'string' && typeof separator === 'string')) {\n\t\tthrow new TypeError('Expected the arguments to be of type `string`');\n\t}\n\n\tif (separator === '') {\n\t\treturn [string];\n\t}\n\n\tconst separatorIndex = string.indexOf(separator);\n\n\tif (separatorIndex === -1) {\n\t\treturn [string];\n\t}\n\n\treturn [\n\t\tstring.slice(0, separatorIndex),\n\t\tstring.slice(separatorIndex + separator.length)\n\t];\n};\n\n\n//# sourceURL=webpack://travel-umroh/./node_modules/split-on-first/index.js?");

/***/ }),

/***/ "./node_modules/strict-uri-encode/index.js":
/*!*************************************************!*\
  !*** ./node_modules/strict-uri-encode/index.js ***!
  \*************************************************/
/*! unknown exports (runtime-defined) */
/*! runtime requirements: module */
/***/ ((module) => {

"use strict";
eval("\nmodule.exports = str => encodeURIComponent(str).replace(/[!'()*]/g, x => `%${x.charCodeAt(0).toString(16).toUpperCase()}`);\n\n\n//# sourceURL=webpack://travel-umroh/./node_modules/strict-uri-encode/index.js?");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	// The module cache
/******/ 	var __webpack_module_cache__ = {};
/******/ 	
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/ 		// Check if module is in cache
/******/ 		if(__webpack_module_cache__[moduleId]) {
/******/ 			return __webpack_module_cache__[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = __webpack_module_cache__[moduleId] = {
/******/ 			// no module.id needed
/******/ 			// no module.loaded needed
/******/ 			exports: {}
/******/ 		};
/******/ 	
/******/ 		// Execute the module function
/******/ 		__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/ 	
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/ 	
/************************************************************************/
/******/ 	/* webpack/runtime/define property getters */
/******/ 	(() => {
/******/ 		// define getter functions for harmony exports
/******/ 		__webpack_require__.d = (exports, definition) => {
/******/ 			for(var key in definition) {
/******/ 				if(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {
/******/ 					Object.defineProperty(exports, key, { enumerable: true, get: definition[key] });
/******/ 				}
/******/ 			}
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/hasOwnProperty shorthand */
/******/ 	(() => {
/******/ 		__webpack_require__.o = (obj, prop) => Object.prototype.hasOwnProperty.call(obj, prop)
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/make namespace object */
/******/ 	(() => {
/******/ 		// define __esModule on exports
/******/ 		__webpack_require__.r = (exports) => {
/******/ 			if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 				Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 			}
/******/ 			Object.defineProperty(exports, '__esModule', { value: true });
/******/ 		};
/******/ 	})();
/******/ 	
/************************************************************************/
/******/ 	// startup
/******/ 	// Load entry module
/******/ 	__webpack_require__("./src/js/index.js");
/******/ 	// This entry module used 'exports' so it can't be inlined
/******/ })()
;